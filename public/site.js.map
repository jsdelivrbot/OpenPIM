{"version":3,"sources":["foundation.js","jquery.js","what-input.js","forge.bundle.js","app.js"],"names":["_classCallCheck","instance","Constructor","TypeError","global","factory","module","exports","document","w","Error","window","this","noGlobal","isArrayLike","obj","length","type","jQuery","isWindow","winnow","elements","qualifier","not","isFunction","grep","elem","i","call","nodeType","risSimple","test","filter","indexOf","sibling","cur","dir","createOptions","options","object","each","match","rnotwhite","_","flag","completed","removeEventListener","ready","Data","expando","uid","dataAttr","key","data","name","undefined","replace","rmultiDash","toLowerCase","getAttribute","rbrace","parseJSON","e","dataUser","set","adjustCSS","prop","valueParts","tween","adjusted","scale","maxIterations","currentValue","css","initial","unit","cssNumber","initialInUnit","rcssNum","exec","style","start","end","getAll","context","tag","ret","getElementsByTagName","querySelectorAll","nodeName","merge","setGlobalEval","elems","refElements","l","dataPriv","get","buildFragment","scripts","selection","ignored","tmp","wrap","contains","j","fragment","createDocumentFragment","nodes","rhtml","appendChild","createElement","rtagName","wrapMap","_default","innerHTML","htmlPrefilter","lastChild","childNodes","firstChild","textContent","push","createTextNode","inArray","ownerDocument","rscriptType","returnTrue","returnFalse","safeActiveElement","activeElement","err","on","types","selector","fn","one","origFn","event","off","apply","arguments","guid","add","manipulationTarget","content","disableScript","restoreScript","rscriptTypeMasked","removeAttribute","cloneCopyEvent","src","dest","pdataOld","pdataCur","udataOld","udataCur","events","hasData","access","handle","extend","fixInput","rcheckableType","checked","defaultValue","domManip","collection","args","callback","concat","first","hasScripts","node","doc","iNoClone","value","support","checkClone","rchecked","index","self","eq","html","map","clone","_evalUrl","globalEval","rcleanScript","remove","keepData","cleanData","parentNode","removeChild","actualDisplay","appendTo","body","display","detach","defaultDisplay","elemdisplay","iframe","documentElement","contentDocument","write","close","curCSS","computed","width","minWidth","maxWidth","getStyles","getPropertyValue","pixelMarginRight","rnumnonpx","rmargin","addGetHookIf","conditionFn","hookFn","vendorPropName","emptyStyle","capName","toUpperCase","slice","cssPrefixes","setPositiveNumber","subtract","matches","Math","max","augmentWidthOrHeight","extra","isBorderBox","styles","val","cssExpand","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","boxSizingReliable","parseFloat","showHide","show","hidden","values","isHidden","Tween","easing","prototype","init","createFxNow","setTimeout","fxNow","now","genFx","includeWidth","which","attrs","height","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","props","opts","toggle","hooks","oldfire","checkDisplay","anim","orig","dataShow","queue","_queueHooks","unqueued","empty","fire","always","overflow","overflowX","overflowY","rfxtypes","isEmptyObject","done","hide","propFilter","specialEasing","camelCase","isArray","cssHooks","expand","properties","result","stopped","prefilters","deferred","Deferred","tick","currentTime","remaining","startTime","duration","temp","percent","tweens","run","notifyWith","resolveWith","promise","originalProperties","originalOptions","stop","gotoEnd","rejectWith","proxy","fx","timer","progress","complete","fail","getClass","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataType","dataTypes","unshift","inspectPrefiltersOrTransports","jqXHR","inspect","selected","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","target","deep","flatOptions","ajaxSettings","ajaxHandleResponses","s","responses","ct","finalDataType","firstDataType","contents","shift","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","current","conv","prev","responseFields","dataFilter","split","throws","state","error","buildParams","prefix","traditional","v","rbracket","getWindow","defaultView","arr","class2type","toString","hasOwn","hasOwnProperty","version","rtrim","rmsPrefix","rdashAlpha","fcamelCase","all","letter","jquery","constructor","toArray","num","pushStack","prevObject","last","len","sort","splice","copy","copyIsArray","isPlainObject","random","isReady","msg","noop","Array","isNumeric","realStringObj","code","script","indirect","eval","trim","text","head","string","makeArray","results","Object","second","invert","callbackInverse","callbackExpect","arg","Date","Symbol","iterator","Sizzle","seed","m","nid","nidselect","groups","newSelector","newContext","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementById","id","getElementsByClassName","qsa","compilerCache","rbuggyQSA","rescape","setAttribute","tokenize","ridentifier","toSelector","join","rsibling","testContext","qsaError","select","createCache","cache","keys","Expr","cacheLength","markFunction","assert","div","addHandle","handler","attrHandle","siblingCheck","a","b","diff","sourceIndex","MAX_NEGATIVE","nextSibling","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","setFilters","tokens","addCombinator","matcher","combinator","base","checkNonElements","doneName","xml","oldCache","uniqueCache","outerCache","newCache","dirruns","uniqueID","elementMatcher","matchers","multipleContexts","contexts","condense","unmatched","newUnmatched","mapped","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","find","dirrunsUnique","pop","uniqueSort","getText","isXML","compile","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","sortOrder","push_native","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escaped","escapedWhitespace","high","String","fromCharCode","unloadHandler","els","hasCompare","parent","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","attrId","getAttributeNode","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","attr","specified","duplicates","detectDuplicates","sortStable","nodeValue","selectors","createPseudo",">"," ","+","~","excess","unquoted","nodeNameSelector","pattern","operator","check","what","simple","forward","ofType","nodeIndex","useCache","pseudo","idx","matched","has","innerText","lang","elemLang","hash","location","root","focus","hasFocus","href","tabIndex","enabled","disabled","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","filters","parseOnly","soFar","preFilters","cached","token","compiled","div1","unique","isXMLDoc","until","truncate","is","siblings","n","rneedsContext","rsingleTag","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","children","next","targets","closest","pos","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","reverse","Callbacks","firing","memory","fired","locked","firingIndex","once","stopOnFalse","disable","lock","fireWith","tuples","then","fns","newDefer","tuple","returned","notify","resolve","reject","pipe","stateString","when","subordinate","progressValues","progressContexts","resolveContexts","resolveValues","updateFunc","readyList","readyWait","holdReady","hold","wait","triggerHandler","readyState","doScroll","chainable","emptyGet","raw","bulk","acceptData","owner","register","defineProperty","writable","configurable","stored","camel","removeData","_data","_removeData","camelKey","dequeue","startLength","setter","clearQueue","count","defer","pnum","source","el","option","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","handleObjIn","eventHandle","t","handleObj","special","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","fix","handlerQueue","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","sel","isNaN","fixHooks","keyHooks","original","charCode","keyCode","mouseHooks","eventDoc","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","Event","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","timeStamp","isSimulated","stopImmediatePropagation","mouseenter","mouseleave","pointerenter","pointerleave","related","relatedTarget","rxhtmlTag","rnoInnerhtml","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","append","prepend","insertBefore","before","after","replaceWith","replaceChild","prependTo","insertAfter","replaceAll","insert","HTML","BODY","view","opener","getComputedStyle","swap","old","computeStyleTests","cssText","container","divStyle","pixelPositionVal","reliableMarginLeftVal","marginLeft","boxSizingReliableVal","marginRight","pixelMarginRightVal","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","reliableMarginRight","marginDiv","rdisplayswap","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","origName","isFinite","getBoundingClientRect","left","margin","padding","border","suffix","expanded","parts","propHooks","eased","step","linear","p","swing","cos","PI","timerId","rrun","*","tweener","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","interval","setInterval","clearInterval","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","optDisabled","radioValue","boolHook","removeAttr","nType","attrHooks","propName","attrNames","propFix","getter","rfocusable","rclickable","removeProp","tabindex","parseInt","for","class","rclass","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","classNames","hasClass","rreturn","rspaces","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","JSON","parse","parseXML","DOMParser","parseFromString","rhash","rts","rheaders","rlocalProtocol","rnoContent","rprotocol","allTypes","originAnchor","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","status","nativeStatusText","headers","success","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","urlAnchor","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","lname","overrideMimeType","abort","finalText","method","crossDomain","host","param","hasContent","beforeSend","send","getJSON","getScript","wrapAll","firstElementChild","wrapInner","unwrap","visible","getClientRects","r20","rCRLF","rsubmitterTypes","rsubmittable","encodeURIComponent","serialize","serializeArray","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","keepScripts","parsed","_load","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","win","box","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","bind","unbind","delegate","undelegate","size","andSelf","define","amd","_jQuery","_$","$","noConflict","modules","__webpack_require__","moduleId","installedModules","loaded","c","currentInput","currentIntent","formInputs","ignoreMap","inputMap","keyup","mousedown","mousemove","MSPointerDown","MSPointerMove","pointerdown","pointermove","touchstart","inputTypes","isBuffering","pointerMap","2","3","4","touchTimer","setUp","detectWheel","addListeners","setInput","PointerEvent","updateInput","setIntent","MSPointerEvent","touchBuffer","eventKey","pointerType","activeInput","onmousewheel","ask","functionName","Function","funcNameRegex","parseValue","str","hyphenate","FOUNDATION_VERSION","Foundation","_plugins","_uuids","rtl","plugin","attrName","registerPlugin","pluginName","uuid","GetYoDigits","$element","unregisterPlugin","reInit","plugins","isJQ","_init","_this","plgs","forEach","foundation","console","round","pow","reflow","$elem","$el","warn","er","getFnName","transitionend","transitions","transition","WebkitTransition","MozTransition","OTransition","util","throttle","$meta","$noJS","MediaQuery","plugClass","ReferenceError","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","navigator","userAgent","lastTime","nextTime","performance","oThis","aArgs","fToBind","fNOP","fBound","ImNotTouchingYou","element","lrOnly","tbOnly","bottom","right","eleDims","GetDimensions","parDims","windowDims","allDirs","rect","parRect","winRect","winY","winX","parentDims","GetOffsets","anchor","vOffset","hOffset","isOverflow","$eleDims","$anchorDims","Box","getKeyCodes","kcs","k","kc","keyCodes","9","13","27","32","37","38","39","40","commands","Keyboard","parseKey","shiftKey","ctrlKey","altKey","handleKey","component","functions","cmds","command","commandList","ltr","handled","unhandled","findFocusable","componentName","trapFocus","$focusable","$firstFocusable","$lastFocusable","releaseFocus","parseStyleToObject","styleObject","reduce","decodeURIComponent","queries","namedQueries","extractedStyles","_getCurrentSize","_watcher","atLeast","query","matchMedia","newSize","currentSize","styleMedia","media","info","currentStyle","matchMedium","styleSheet","Move","move","ts","prog","isIn","cb","transitionDuration","initClass","activeClass","initClasses","activeClasses","Motion","animateIn","animateOut","Nest","Feather","menu","items","role","subMenuClass","subItemClass","hasSubClass","$item","$sub","aria-haspopup","aria-label","aria-expanded","data-submenu","aria-hidden","Burn","Timer","nameSpace","remain","isPaused","restart","infinite","pause","onImagesLoaded","images","singleImageLoaded","unloaded","onTouchEnd","onTouchMove","isMoving","spotSwipe","x","touches","dx","startPosX","elapsedTime","abs","moveThreshold","timeThreshold","onTouchStart","startPosY","swipe","addTouch","handleTouch","simulatedEvent","changedTouches","eventTypes","touchmove","touchend","MouseEvent","bubbles","cancelable","screenX","screenY","createEvent","initMouseEvent","dispatchEvent","checkListeners","eventsListener","resizeListener","scrollListener","mutateListener","closemeListener","yetiBoxes","plugNames","listeners","pluginId","debounce","$nodes","MutationObserver","listeningElementsMutation","mutationRecordsList","$target","attributeName","elementObserver","observe","childList","characterData","subtree","attributeFilter","prefixes","triggers","IHearYou","_createClass","defineProperties","descriptor","enumerable","protoProps","staticProps","Abide","defaults","$inputs","_events","_this2","resetForm","validateForm","validateOn","validateInput","liveValidate","validateOnBlur","isGood","$error","formErrorSelector","$label","$els","_this3","labels","findLabel","$formError","findFormError","labelErrorClass","formErrorClass","inputErrorClass","groupName","$labels","findRadioLabels","$formErrors","removeRadioErrorClasses","_this4","clearRequire","requiredCheck","validated","customValidator","validator","equalTo","validateRadio","validateText","matchValidation","validators","goodToGo","message","dependentElements","acc","noError","inputText","valid","patterns","$group","required","_this5","clear","$form","removeErrorClasses","alpha","alpha_numeric","integer","number","card","cvv","email","domain","datetime","date","dateISO","month_day_year","day_month_year","color","Accordion","ENTER","SPACE","ARROW_DOWN","ARROW_UP","$tabs","$content","linkId","aria-controls","aria-selected","aria-labelledby","$initActive","down","$tabContent","$a","multiExpand","previous","up","firstTime","$currentActive","slideSpeed","$aunts","allowAllClosed","AccordionMenu","ARROW_RIGHT","ARROW_LEFT","ESCAPE","aria-multiselectable","multiOpen","$menuLinks","subId","isActive","initPanes","$submenu","$prevElement","$nextElement","$elements","min","closeAll","hideAll","$menus","Drilldown","TAB","SHIFT_TAB","$submenuAnchors","$submenus","$menuItems","_prepareMenu","_registerEvents","_keyboardEvents","$link","parentLink","$menu","$back","backButtonPosition","backButton","_back","autoHeight","$wrapper","wrapper","animateHeight","_getMaxDims","max-width","min-height","_show","closeOnClick","$body","_hideAll","_resize","_bindHandler","_scrollTop","$scrollTopElement","scrollTopElement","scrollPos","scrollTopOffset","animationDuration","animationEasing","_hide","parentSubMenu","maxHeight","Dropdown","$id","$anchor","data-is-focus","data-yeti-box","parentClass","$parent","positionClass","getPositionClass","counter","usedPositions","data-resize","verticalPosition","horizontalPosition","classChanged","direction","newWidth","parentHOffset","$parentDims","_reposition","_setPosition","open.zf.trigger","close.zf.trigger","toggle.zf.trigger","resizeme.zf.trigger","bodyData","whatinput","hoverDelay","hoverPane","autoFocus","_addBodyHandler","curPositionClass","DropdownMenu","subs","verticalClass","rightClass","alignment","changed","hasTouch","ontouchstart","parClass","handleClickFn","hasSub","hasClicked","clickOpen","forceFollow","closeOnClickInside","disableHover","autoclose","closingTime","isTab","prevSibling","openSub","closeSub","_isVertical","$sibs","oldClass","$parentLi","$toClose","somethingToClose","data-is-click","Equalizer","eqId","$watched","hasNested","isNested","isOn","onResizeMeBound","_onResizeMe","onPostEqualizedBound","_onPostEqualized","tooSmall","imgs","equalizeOn","_checkMQ","_reflow",".zf.equalizer","mutateme.zf.trigger","_pauseEvents","equalizeOnStack","_isStacked","equalizeByRow","getHeightsByRow","applyHeightByRow","getHeights","applyHeight","heights","lastElTopOffset","group","elOffsetTop","ln","groupsILength","lenJ","Interchange","rules","currentPath","_addBreakpoints","_generateRules","rule","path","SPECIAL_QUERIES","rulesList","background-image","landscape","portrait","retina","Magellan","calcPoints","$targets","$links","data-scroll","$active","points","winHeight","innerHeight","clientHeight","docHeight","scrollHeight","$tar","pt","threshold","targetPoint","deepLinking","scrollToLoc","_updateActive","scrollme.zf.trigger","arrival","loc","_inTransition","barOffset","curIdx","winPos","isDown","curVisible","history","pushState","OffCanvas","$lastTrigger","$triggers","contentOverlay","overlay","overlayPosition","$overlay","isRevealed","revealClass","revealOn","_setMQChecker","transitionTime","keydown.zf.offcanvas","_handleKeyboard","click.zf.offcanvas","reveal","$closer","forceTo","contentScroll","_stopScrolling","Orbit","_reset","containerClass","$slides","slideClass","$images","initActive","useMUI","_prepareForOrbit","bullets","_loadBullets","autoPlay","geoSync","accessible","$bullets","boxOfBullets","timerDelay","changeSlide","_setWrapperHeight","pauseOnHover","navButtons","$controls","nextClass","prevClass","$slide","_updateBullets","isLTR","chosenSlide","$curSlide","$newSlide","$firstSlide","$lastSlide","dirIn","dirOut","infiniteWrap","$oldBullet","span","animInFromRight","animOutToRight","animInFromLeft","animOutToLeft","ResponsiveMenu","currentMq","currentPlugin","rulesTree","ruleSize","rulePlugin","MenuPlugins","_checkMediaQueries","matchedMq","cssClass","destroy","dropdown","drilldown","accordion","ResponsiveToggle","targetID","$targetMenu","$toggler","animationIn","animationOut","_update","_updateMqHandler","toggleMenu","hideFor","iPhoneSniff","androidSniff","mobileSniff","Reveal","mq","isMobile","fullScreen","_makeOverlay","deepLink","outerWidth","outerHeight","_updatePosition","_handleState","addRevealOpenClasses","originalScrollPos","multipleOpened","afterAnimation","focusableElements","showDelay","_extraHandlers","closeOnEsc","finishUp","hideDelay","resetOnClose","replaceState","title","btmOffsetPct","frac","absPosition","$handle","clickPos","baseLog","log","Slider","SHIFT_ARROW_RIGHT","SHIFT_ARROW_UP","SHIFT_ARROW_DOWN","SHIFT_ARROW_LEFT","inputs","handles","$input","$fill","vertical","isDbl","disabledClass","binding","_setInitAttr","doubleSided","$handle2","$input2","setHandles","_setHandlePos","pctOfBar","positionValueFunction","_logTransform","_powTransform","toFixed","nonLinearBase","$hndl","noInvert","h2Val","h1Val","vert","hOrW","lOrT","handleDim","elemDim","_pctOfBar","pxToMove","movement","decimal","_setValues","dim","isLeftHndl","handlePct","handlePos","initialStart","moveTime","changedDelay","initVal","initialEnd","aria-valuemax","aria-valuemin","aria-valuenow","aria-orientation","hasVal","_adjustValue","eventOffset","barDim","windowScroll","elemOffset","barXY","eventFromBar","offsetPct","_value","firstHndlPos","secndHndlPos","prev_val","next_val","_eventsForHandle","curHandle","_handleEvent","clickSelect","draggable","newValue","_$handle","oldValue","decrease","increase","decrease_fast","increase_fast","invertVertical","emCalc","em","fontSize","Sticky","wasWrapped","$container","stickyClass","scrollCount","checkEvery","isStuck","containerHeight","elemHeight","_parsePoints","_setSizes","scroll","_calc","_removeSticky","topPoint","topAnchor","btm","btmAnchor","pts","breaks","place","canStick","_pauseListeners","checkSizes","bottomPoint","_setSticky","stickTo","mrgn","notStuckTo","isTop","stickToTop","anchorPt","anchorHeight","topOrBottom","stickyOn","newElemWidth","comp","pdngl","pdngr","newContainerHeight","_setBreakPoints","mTop","marginTop","mBtm","marginBottom","Tabs","$tabTitles","linkClass","linkActiveClass","deepLinkSmudgeDelay","selectTab","deepLinkSmudge","matchHeight","_setHeight","_addKeyHandler","_addClickHandler","_setHeightMqHandler","_handleTabChange","wrapOnKeys","activeCollapse","_collapseTab","$oldTab","$tabLink","$targetContent","_openTab","updateHistory","panelActiveClass","$target_anchor","idStr","panelClass","panel","Toggler","_updateARIA","Tooltip","isClick","elemId","_getPositionClass","tipText","template","_buildTemplate","allowHtml","aria-describedby","data-toggle","triggerClass","templateClasses","tooltipClass","$template","data-is-active","$tipDims","showOn","fadeInDuration","fadeOutDuration","isFocus","disableForTouch","touchCloseText","ResponsiveAccordionTabs","_getAllOptions","allOptions","dummyPlugin","tmpPlugin","keyKey","objObj","storezfData","_handleMarkup","toSet","fromString","$panels","tabsTitle","tabsPanel","$liHeads","$liHeadsA","$tabsContent","$placeholder","tempValue","tabs","forge","requirejs","require","undef","hasProp","normalize","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","part","baseParts","config","starMap","charAt","nodeIdCompat","jsSuffixRegExp","substring","makeRequire","relName","forceSync","req","aps","makeNormalize","makeLoad","depName","defined","callDep","waiting","defining","main","splitPrefix","makeConfig","makeMap","f","pr","uri","deps","cjsModule","usingExports","callbackType","alt","cfg","_defined","initModule","ByteStringBuffer","read","isArrayBuffer","isArrayBufferView","Uint8Array","putByte","_constructedStringLength","DataBuffer","readOffset","growSize","DataView","buffer","byteOffset","byteLength","writeOffset","ArrayBuffer","putBytes","callbacks","process","nextTick","setImmediate","postMessage","oldSetImmediate","ByteBuffer","_MAX_CONSTRUCTED_STRING_LENGTH","_optimizeConstructedString","substr","isEmpty","fillWithByte","d","bytes","putString","encodeUtf8","putInt16","putInt24","putInt32","putInt16Le","putInt24Le","putInt32Le","putInt","putSignedInt","putBuffer","getBytes","getByte","charCodeAt","getInt16","rval","getInt24","getInt32","getInt16Le","getInt24Le","getInt32Le","getInt","getSignedInt","at","setAt","createBuffer","compact","toHex","decodeUtf8","accommodate","amount","dst","setUint8","encoding","ceil","hex","decode","base64","Uint16Array","utf16","encode","setInt16","setInt8","setInt32","getInt8","getUint8","utf8","fillString","xorBytes","s1","s2","s3","hexToBytes","bytesToHex","int32ToBytes","_base64","_base64Idx","encode64","maxline","chr1","chr2","chr3","line","output","decode64","enc1","enc2","enc3","enc4","unescape","escape","out","subarray","deflate","api","flg","inflate","_setStorageObject","removeItem","stringify","setItem","_getStorageObject","getItem","_setItem","_getItem","_removeItem","_clearItems","_callStorageFunction","exception","localStorage","ex","clearItems","parseUrl","regex","full","scheme","port","fullHost","_queryVariables","getQueryVariables","q","kvpairs","search","parseFragment","fp","fq","pathString","queryString","makeRequest","reqString","frag","getPath","getQuery","getQueryLast","vals","makeLink","qstr","setPath","hasNext","deletePath","format","re","argi","formatNumber","decimals","dec_point","thousands_sep","formatSize","bytesFromIP","ip","bytesFromIPv4","bytesFromIPv6","blanks","zeros","bytesToIP","bytesToIPv4","bytesToIPv6","zeroGroups","zeroMaxGroup","estimateCores","sample","samples","numWorkers","avg","floor","cores","URL","revokeObjectURL","blobUrl","workers","worker","Worker","terminate","overlaps","r1","overlap","r2","st","et","update","hardwareConcurrency","Blob","createObjectURL","nodeJS","ids","defineFunc","mods","dep","tmpDefine","cipher","algorithms","createCipher","algorithm","getAlgorithm","BlockCipher","decrypt","createDecipher","registerAlgorithm","mode","blockSize","_finish","_input","_op","encrypt","_decrypt","initialize","pad","unpad","afterFinish","transformIV","iv","inc32","block","from64To32","modes","ecb","_ints","_inBlock","_outBlock","cbc","_prev","_iv","cfb","_partialBlock","_partialOutput","_partialBytes","inputLength","partialBytes","ofb","ctr","gcm","_R","_cipherLength","additionalData","_tagLength","tagLength","_tag","_hashBlock","_hashSubkey","componentBits","_m","generateHashTable","ivLength","_j0","ghash","_aDataLength","_s","lengths","multiply","y","z_i","v_i","x_i","lsb","tableMultiply","z","ah","h","bits","multiplier","perInt","shft","generateSubHashTable","mid","half","m_i","m_j","aes","Algorithm","rcon","xtime","sbox","isbox","mix","imix","e2","e4","e8","sx","sx2","me","ime","ei","_expandKey","iNk","Nk","Nr1","Nb","m0","m1","m2","m3","wnew","wi","_updateBlock","sub","Nr","a2","b2","c2","_createCipher","startEncrypting","createEncryptionCipher","startDecrypting","createDecryptionCipher","inBlock","outBlock","_w","encryptOp","pki","oids","asn1","Class","UNIVERSAL","APPLICATION","CONTEXT_SPECIFIC","PRIVATE","Type","NONE","BOOLEAN","INTEGER","BITSTRING","OCTETSTRING","NULL","OID","ODESC","EXTERNAL","REAL","ENUMERATED","EMBEDDED","UTF8","ROID","SEQUENCE","SET","PRINTABLESTRING","IA5STRING","UTCTIME","GENERALIZEDTIME","BMPSTRING","create","tagClass","constructed","composed","_getValueLength","getBerValueLength","longForm","fromDer","strict","b1","detail","unused","tc","toDer","lenBytes","oidToDer","oid","valueBytes","derToOid","utcTimeToDate","utc","year","MM","DD","hh","mm","ss","setUTCFullYear","setUTCHours","hhoffset","mmoffset","setTime","generalizedTimeToDate","gentime","YYYY","fff","isUTC","setFullYear","setHours","dateToUtcTime","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","dateToGeneralizedTime","integerToDer","derToInteger","validate","capture","errors","optional","captureAsn1","_nonLatinRegex","prettyPrint","level","indentation","indent","IA5String","subvalues","_padding","_g","_r","_k","sin","_initialized","r","h0","h1","h2","h3","md5","md","_state","blockLength","digestLength","messageLength","fullMessageLength","messageLengthSize","messageLength64","int32s","digest","finalBlock","carry","h4","sha1","t1","t2","s0","ch","maj","g","h5","h6","h7","sha256","_states","t1_hi","t1_lo","t2_hi","t2_lo","s0_hi","s0_lo","s1_hi","s1_lo","ch_hi","ch_lo","maj_hi","maj_lo","a_hi","a_lo","b_hi","b_lo","c_hi","c_lo","d_hi","d_lo","e_hi","e_lo","f_hi","f_lo","g_hi","g_lo","h_hi","h_lo","hi","lo","w2","w7","w15","w16","sha512","sha384","sha224","_h","messageLength128","hlen","hmac","_key","_md","_ipadding","_opadding","ctx","keylen","getMac","inner","foldHeader","insertSpace","$1","candidate","ltrim","pem","procType","contentDomain","dekInfo","parameters","rMessage","rHeader","lines","li","nl","vi","des","_createKeys","pc2bytes0","pc2bytes1","pc2bytes2","pc2bytes3","pc2bytes4","pc2bytes5","pc2bytes6","pc2bytes7","pc2bytes8","pc2bytes9","pc2bytes10","pc2bytes11","pc2bytes12","pc2bytes13","iterations","shifts","lefttmp","righttmp","looping","endloop","loopinc","right1","right2","spfunction2","spfunction4","spfunction6","spfunction8","spfunction1","spfunction3","spfunction5","spfunction7","_keys","crypto","pkcs5","_nodejs","versions","disableNativeCode","pbkdf2","dkLen","outer","dk","prf","xor","u_c1","u_c","hLen","pbkdf2Sync","Buffer","_crypto","prng","_reseed","pools","_seed","needed","seedFile","collect","_reseedSync","seedFileSync","reseeds","keyBytes","seedBytes","formatKey","formatSeed","generated","defaultSeedFile","getRandomValues","msCrypto","entropy","Uint32Array","QuotaExceededError","pool","generate","increment","generateSync","randomBytes","collectInt","registerWorker","listener","spawnPrng","prng_aes","getBytesSync","_prng_aes_output","_prng_aes_buffer","_ctx","_navBytes","keypress","createInstance","piTable","rol","word","ror","rc2","expandKey","effKeyBits","L","T","T1","T8","TM","mixRound","mashRound","_output","K","R","runPlan","plan","ptr","BigInteger","fromNumber","nbi","am1","am2","xl","xh","am3","int2char","BI_RM","intAt","BI_RC","bnpCopyTo","bnpFromInt","DV","nbv","fromInt","bnpFromString","fromRadix","mi","sh","DB","clamp","ZERO","subTo","bnpClamp","DM","bnToString","negate","toRadix","km","bnNegate","bnAbs","bnCompareTo","nbits","bnBitLength","bnpDLShiftTo","bnpDRShiftTo","bnpLShiftTo","bs","cbs","bm","ds","bnpRShiftTo","bnpSubTo","bnpMultiplyTo","am","bnpSquareTo","bnpDivRemTo","pm","copyTo","ms","nsh","lShiftTo","ys","y0","yt","F1","F2","d1","FV","d2","dlShiftTo","compareTo","ONE","qd","drShiftTo","rShiftTo","bnMod","divRemTo","Classic","cConvert","mod","cRevert","cReduce","cMulTo","multiplyTo","cSqrTo","squareTo","bnpInvDigit","Montgomery","mp","invDigit","mpl","mph","um","mt2","montConvert","montRevert","montReduce","u0","montSqrTo","montMulTo","bnpIsEven","bnpExp","convert","sqrTo","mulTo","revert","bnModPowInt","isEven","exp","bnClone","bnIntValue","bnByteValue","bnShortValue","bnpChunkSize","LN2","bnSigNum","bnpToRadix","signum","cs","chunkSize","intValue","bnpFromRadix","dMultiply","dAddOffset","bnpFromNumber","testBit","bitwiseTo","shiftLeft","op_or","isProbablePrime","bitLength","nextBytes","bnToByteArray","bnEquals","bnMin","bnMax","bnpBitwiseTo","op","op_and","bnAnd","bnOr","op_xor","bnXor","op_andnot","bnAndNot","bnNot","bnShiftLeft","bnShiftRight","lbit","bnGetLowestSetBit","cbit","bnBitCount","bnTestBit","bnpChangeBit","bnSetBit","changeBit","bnClearBit","bnFlipBit","bnpAddTo","bnAdd","addTo","bnSubtract","bnMultiply","bnDivide","bnRemainder","bnDivideAndRemainder","bnpDMultiply","bnpDAddOffset","NullExp","nNop","nMulTo","nSqrTo","bnPow","bnpMultiplyLowerTo","bnpMultiplyUpperTo","Barrett","q3","mu","divide","barrettConvert","barrettRevert","barrettReduce","multiplyUpperTo","multiplyLowerTo","barrettSqrTo","barrettMulTo","bnModPow","k1","g2","is1","bnGCD","getLowestSetBit","bnpModInt","bnModInverse","ac","u","bnIsProbablePrime","lowprimes","lplim","modInt","millerRabin","bnpMillerRabin","n1","shiftRight","bnGetPrng","modPow","modPowInt","dbits","canary","j_lm","appName","BI_FP","rr","vv","byteValue","shortValue","toByteArray","equals","and","or","andNot","bitCount","setBit","clearBit","flipBit","remainder","divideAndRemainder","modInverse","gcd","jsbn","rsa_mgf1","maskLength","pkcs1","encode_rsa_oaep","label","mgf1Md","mgf1","keyLength","maxLength","lHash","PS","PS_length","seedLength","dbMask","maskedDB","seedMask","maskedSeed","decode_rsa_oaep","expectedLength","db","lHashPrime","in_ps","is_0","error_mask","primeincFindPrime","rng","primeincFindPrimeWithWorkers","primeincFindPrimeWithoutWorkers","generateRandom","deltaIdx","mrTests","getMillerRabinTests","millerRabinTests","maxBlockTime","GCD_30_DELTA","workerMessage","found","running","prime","workLoad","range","workerScript","bits1","THIRTY","generateProbablePrime","_encodePkcs1_v1_5","bt","eb","padByte","padNum","numZeros","padBytes","_decodePkcs1_v1_5","pub","ml","zero","_generateKeyPair","getPrime","pBits","qBits","p1","q1","phi","privateKey","rsa","setPrivateKey","publicKey","setPublicKey","_bnToBytes","_getMillerRabinTests","_detectSubtleCrypto","subtle","_detectSubtleMsCrypto","_intToUint8Array","privateKeyValidator","rsaPrivateKeyValidator","rsaPublicKeyValidator","publicKeyValidator","emsaPkcs1v15encode","oidBytes","digestInfo","digestAlgorithm","_modPow","dP","dQ","qInv","xp","xq","yhex","ed","expected","xhex","createKeyPairGenerationState","eInt","pqState","stepKeyPairGenerationState","total","generateKeyPair","generateKey","modulusLength","publicExponent","pair","exportKey","catch","pkcs8","privateKeyFromAsn1","setRsaPublicKey","genOp","oncomplete","exportOp","schemeOptions","verify","signature","setRsaPrivateKey","sign","wrapRsaPrivateKey","rsaKey","rsaEncryption","privateKeyModulus","privateKeyPublicExponent","privateKeyPrivateExponent","privateKeyPrime1","privateKeyPrime2","privateKeyExponent1","privateKeyExponent2","privateKeyCoefficient","privateKeyToAsn1","privateKeyToRSAPrivateKey","publicKeyFromAsn1","publicKeyOid","rsaPublicKey","publicKeyModulus","publicKeyExponent","publicKeyToAsn1","publicKeyToSubjectPublicKeyInfo","publicKeyToRSAPublicKey","prfOidToMessageDigest","prfOid","prfAlgorithm","supported","prfAlgorithmToMessageDigest","createPbkdf2Params","salt","countBytes","pbe","encryptedPrivateKeyValidator","PBES2AlgorithmsValidator","pkcs12PbeParamsValidator","encryptPrivateKeyInfo","saltSize","encryptionAlgorithm","encryptedData","ivLen","encOid","cipherFn","saltBytes","generatePkcs12Key","decryptPrivateKeyInfo","encryptionOid","getCipher","encryptionParams","encrypted","encryptedPrivateKeyToPem","epki","encryptedPrivateKeyFromPem","headerType","encryptRsaPrivateKey","legacy","opensslDeriveBytes","decryptRsaPrivateKey","iter","passBuf","D","Slen","S","Plen","P","I","buf","B","Inew","chunk","getCipherForPBES2","getCipherForPKCS12PBE","supportedOids","kdfOid","kdfSalt","kdfIterationCount","encIv","dIvLen","digests","p7v","pkcs7asn1","pkcs7","contentInfoValidator","encryptedContentInfoValidator","envelopedDataValidator","encryptedDataValidator","signerValidator","signedDataValidator","recipientInfoValidator","mgf","maskLen","pss","saltLength","salt_","sLen","pssobj","modBits","emBits","emLen","mHash","m_","ps","mask","checkLen","h_","_getAttribute","shortName","_dnToAsn1","valueTagClass","_fillMissingFields","_shortNames","attribute","extensionRequest","valueConstructed","extensions","certificateExtensionToAsn1","_fillMissingExtensionFields","extension","b3","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","cA","pathLenConstraint","seq","client","server","objsign","reserved","sslCA","emailCA","objCA","altName","altNames","cert","ski","generateSubjectKeyIdentifier","subjectKeyIdentifier","keyIdentifier","authorityCertIssuer","issuer","serialNumber","subSeq","fullNameGeneralNames","_signatureParametersToAsn1","algorithmOid","_CRIAttributesToAsn1","csr","x509CertificateValidator","rsassaPssParameterValidator","certificationRequestInfoValidator","certificationRequestValidator","RDNAttributesAsArray","rdn","si","CRIAttributesAsArray","certificateExtensionFromAsn1","_readSignatureParameters","fillDefaults","hashOid","maskGenOid","maskGenHashOid","certificateFromPem","computeHash","certificateFromAsn1","certificateToPem","certificateToAsn1","publicKeyFromPem","publicKeyToPem","publicKeyToRSAPublicKeyPem","getPublicKeyFingerprint","delimiter","certificationRequestFromPem","certificationRequestFromAsn1","certificationRequestToPem","certificationRequestToAsn1","createCertificate","signatureOid","siginfo","validity","notBefore","notAfter","getField","sn","addField","subject","setSubject","uniqueId","setIssuer","setExtensions","exts","getExtension","ext","tbsCertificate","getTBSCertificate","child","issued","expectedIssuer","actualIssuer","sha1WithRSAEncryption","signatureParameters","isIssuer","iattr","sattr","verifySubjectKeyIdentifier","certSignature","certVersion","serial","certSerialNumber","certSignatureOid","certSignatureParams","certinfoSignatureOid","certinfoSignatureParams","certValidity1UTCTime","certValidity2GeneralizedTime","certValidity3UTCTime","certValidity4GeneralizedTime","imd","certIssuer","certIssuerUniqueId","smd","certSubject","certSubjectUniqueId","certExtensions","certificateExtensionsFromAsn1","subjectPublicKeyInfo","extseq","critical","ev","gn","csrSignature","createCertificationRequest","csrVersion","csrSignatureOid","csrSignatureParams","certificationRequestInfo","certificationRequestInfoSubject","addAttribute","certificationRequestInfoAttributes","setAttributes","getCertificationRequestInfo","cri","tbs","certificateExtensionsToAsn1","distinguishedNameToAsn1","dn","createCaStore","certs","getBySubject","ensureSubjectHasHash","caStore","getIssuer","addCertificate","hasCertificate","der1","der2","listAllCertificates","certList","removeCertificate","certificateError","bad_certificate","unsupported_certificate","certificate_revoked","certificate_expired","certificate_unknown","unknown_ca","verifyCertificateChain","chain","depth","selfSigned","verified","se","keyUsage","basicConstraints","bcExt","keyUsageExt","pathLen","vfd","_getBagsByAttribute","safeContents","attrValue","bagType","safeBags","bag","_decodePkcs7Data","_decodeAuthenticatedSafe","pfx","authSafe","contentInfo","_decryptSafeContents","_decodeSafeContents","encAlgorithm","encParameter","encryptedContentAsn1","res","safeBag","safeBagValidator","bagId","_decodeBagAttributes","bagAttributes","decoder","bagAsn1","bagValue","pkcs8ShroudedKeyBag","keyBag","certBag","certBagValidator","certId","x509Certificate","certAsn1","decodedAttrs","attributeValidator","p12","pkcs12","pfxValidator","pkcs12FromAsn1","getBags","localKeyId","localKeyIdHex","friendlyName","getBagsByFriendlyName","getBagsByLocalKeyId","mac","macKeyBytes","macAlgorithm","macSalt","macIterations","macKey","macValue","macDigest","toPkcs12Asn1","useMac","generateLocalKeyId","bagAttrs","pairedCert","certSafeBags","certBagAttrs","certSafeBag","certSafeContents","certCI","pkAsn1","keySafeContents","keyCI","macData","safe","pemToDer","privateKeyFromPem","privateKeyToPem","privateKeyInfoToPem","prf_TLS1","secret","slen","ai","md5itr","sha1itr","md5bytes","sha1bytes","hmac_sha1","seqNum","record","major","minor","readVector","writeVector","tls","Versions","TLS_1_0","TLS_1_1","TLS_1_2","SupportedVersions","Version","MaxFragment","ConnectionEnd","PRFAlgorithm","tls_prf_sha256","BulkCipherAlgorithm","none","rc4","des3","CipherType","stream","aead","MACAlgorithm","hmac_md5","hmac_sha256","hmac_sha384","hmac_sha512","CompressionMethod","ContentType","change_cipher_spec","alert","handshake","application_data","heartbeat","HandshakeType","hello_request","client_hello","server_hello","certificate","server_key_exchange","certificate_request","server_hello_done","certificate_verify","client_key_exchange","finished","Alert","Level","warning","fatal","Description","close_notify","unexpected_message","bad_record_mac","decryption_failed","record_overflow","decompression_failure","handshake_failure","illegal_parameter","access_denied","decode_error","decrypt_error","export_restriction","protocol_version","insufficient_security","internal_error","user_canceled","no_renegotiation","HeartbeatMessageType","heartbeat_request","heartbeat_response","CipherSuites","getCipherSuite","twoBytes","handleUnexpected","ignore","entity","description","handleHelloRequest","handshaking","handshakes","createAlert","flush","parseHelloMessage","session_id","cipher_suite","compression_method","cipher_suites","compression_methods","snl","snType","session","server_name","serverNameList","cipherSuite","compressionMethod","createSecurityParameters","msgRandom","cRandom","sp","client_random","sRandom","createRandom","prf_algorithm","bulk_cipher_algorithm","cipher_type","enc_key_length","block_length","fixed_iv_length","record_iv_length","mac_algorithm","mac_length","mac_key_length","compression_algorithm","pre_master_secret","master_secret","server_random","handleServerHello","sessionId","expect","SCC","resuming","SCE","handleClientHello","sessionCache","getSession","clientHelloVersion","CCC","verifyClient","CCE","CKE","createRecord","createServerHello","createChangeCipherSpec","pending","createConnectionState","createFinished","createServerKeyExchange","createCertificateRequest","createServerHelloDone","handleCertificate","certificate_list","cause","SKE","serverCertificate","clientCertificate","handleServerKeyExchange","SCR","handleClientKeyExchange","enc_pre_master_secret","getPrivateKey","CCV","handleCertificateRequest","certificate_types","certificate_authorities","certificateRequest","SHD","handleCertificateVerify","msgBytes","handleServerHelloDone","createClientKeyExchange","SER","createCertificateVerify","getClientSignature","handleChangeCipherSpec","SFI","CFI","handleFinished","vd","vdl","SAD","CAD","peerCertificate","isConnected","connected","handleAlert","origin","handleHandshake","fragmented","hsTable","handleApplicationData","dataReady","handleHeartbeat","payload","createHeartbeat","expectedHeartbeatPayload","heartbeatReceived","SHE","CHE","__","R0","R1","R2","R3","R4","ctTable","H0","H1","H2","H3","H4","H5","H6","H7","H8","H9","generateKeys","tls10","client_write_MAC_key","server_write_MAC_key","client_write_key","server_write_key","client_write_IV","server_write_IV","createMode","sequenceNumber","macLength","macFunction","cipherState","cipherFunction","compressionState","compressFunction","updateSequenceNumber","initSecurityParameters","initConnectionState","getTimezoneOffset","createClientHello","cipherSuites","cSuites","compressionMethods","cMethods","virtualHost","serverName","snList","extLength","getCertificate","hint","der","certBuffer","getSignature","certTypes","cAs","byteBuffer","payloadLength","plaintextLength","paddingLength","records","rec","tlsData","tlsDataReady","_certErrorToAlertDesc","_alertDescToCertError","desc","createSessionCache","capacity","setSession","createConnection","cn","dpth","cts","closed","clearFail","aligned","_readRecordHeader","compatibleVersion","_readRecord","prepare","prepareHeartbeatRequest","prf_tls1","decrypt_aes_cbc_sha1","encrypt_aes_cbc_sha1","encrypt_aes_cbc_sha1_padding","decrypt_aes_cbc_sha1_padding","macLen","mac2","compareMacs","mac1","debug","storage","cat","_createKDF","kdf","counterStart","kem","encapsulation","kdf1","kdf2","levels","sLevelInfo","sLoggers","sConsoleLogger","LEVEL_LOCKED","NO_LEVEL_CHECK","INTERPOLATE","logMessage","messageLevelIndex","logger","flags","loggerLevelIndex","prepareStandard","standard","category","prepareFull","prepareStandardFull","standardFull","timestamp","makeLogger","logFunction","setLevel","aValidLevel","addLogger","levelHandlers","verbose","consoleLogger","_recipientFromAsn1","p7","encryptedContent","parameter","encKey","_recipientToAsn1","_recipientsFromAsn1","infos","_recipientsToAsn1","recipients","_signerToAsn1","authenticatedAttributesAsn1","signatureAlgorithm","unauthenticatedAttributes","attrsAsn1","_attributeToAsn1","_signersToAsn1","signers","messageDigest","signingTime","jan_1_1950","jan_1_2050","_encryptedContentToAsn1","ec","_fromAsn1","rawCapture","_decryptContent","ciph","messageFromPem","messageFromAsn1","messageToPem","pemObj","toAsn1","envelopedData","createEnvelopedData","createEncryptedData","signedData","createSignedData","fromAsn1","addDigestAlgorithmIds","mds","signer","authenticatedAttributes","digestAlgorithmIdentifiers","addSignerInfos","signerInfos","certificates","crls","addSigner","addCertificateRevokationList","crl","recipientInfos","findRecipient","sAttr","rAttr","recipient","privKey","desCBC","addRecipient","keyLen","ciphFn","_addBigIntegerToBuffer","hexVal","_addStringToBuffer","_sha1","sha","ssh","privateKeyToPutty","passphrase","comment","ppk","pubbuffer","privbuffer","priv","encLen","aeskey","mackey","macbuffer","publicKeyToOpenSSH","privateKeyToOpenSSH","sVL","sTasks","sNextTaskId","sTaskQueues","sNoTaskName","sMaxRecursions","sTimeSlice","READY","RUNNING","BLOCKED","SLEEPING","DONE","ERROR","STOP","START","BLOCK","UNBLOCK","SLEEP","WAKEUP","CANCEL","FAIL","sStateTable","Task","subtasks","blocks","timeoutId","swapTime","userData","subrun","subtask","successCallback","failureCallback","parallel","task","ptask","startParallelTask","pname","pi","unblock","failure","runNext","sleep","cond","wakeup","cancelTimeout","cancel","permitsNeeded","recurse","doNext","suppressCallbacks","createCondition","tasks","encPrivArea","pubArea","passInput","decryptBt","privArea","notesSelect","textArea","notes","errorType","encPem","decPem","decrypted"],"mappings":"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","file":"site.js","sourcesContent":["!function ($) {\n\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.3.0';\n\n  // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\n     * Stores initialized plugins.\n     */\n    _plugins: {},\n\n    /**\n     * Stores generated unique ids for plugin instances\n     */\n    _uuids: [],\n\n    /**\n     * Returns a boolean for RTL support\n     */\n    rtl: function () {\n      return $('html').attr('dir') === 'rtl';\n    },\n    /**\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n     * @param {Object} plugin - The constructor of the plugin.\n     */\n    plugin: function (plugin, name) {\n      // Object key to use when adding to global Foundation object\n      // Examples: Foundation.Reveal, Foundation.OffCanvas\n      var className = name || functionName(plugin);\n      // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n      // Examples: data-reveal, data-off-canvas\n      var attrName = hyphenate(className);\n\n      // Add to the Foundation object and the plugins list (for reflowing)\n      this._plugins[attrName] = this[className] = plugin;\n    },\n    /**\n     * @function\n     * Populates the _uuids array with pointers to each individual plugin instance.\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n     * Also fires the initialization event for each plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\n     * @fires Plugin#init\n     */\n    registerPlugin: function (plugin, name) {\n      var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n      plugin.uuid = this.GetYoDigits(6, pluginName);\n\n      if (!plugin.$element.attr('data-' + pluginName)) {\n        plugin.$element.attr('data-' + pluginName, plugin.uuid);\n      }\n      if (!plugin.$element.data('zfPlugin')) {\n        plugin.$element.data('zfPlugin', plugin);\n      }\n      /**\n       * Fires when the plugin has initialized.\n       * @event Plugin#init\n       */\n      plugin.$element.trigger('init.zf.' + pluginName);\n\n      this._uuids.push(plugin.uuid);\n\n      return;\n    },\n    /**\n     * @function\n     * Removes the plugins uuid from the _uuids array.\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n     * Also fires the destroyed event for the plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @fires Plugin#destroyed\n     */\n    unregisterPlugin: function (plugin) {\n      var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n      this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n      plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n      /**\n       * Fires when the plugin has been destroyed.\n       * @event Plugin#destroyed\n       */\n      .trigger('destroyed.zf.' + pluginName);\n      for (var prop in plugin) {\n        plugin[prop] = null; //clean up script to prep for garbage collection.\n      }\n      return;\n    },\n\n    /**\n     * @function\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n     * @default If no argument is passed, reflow all currently active plugins.\n     */\n    reInit: function (plugins) {\n      var isJQ = plugins instanceof $;\n      try {\n        if (isJQ) {\n          plugins.each(function () {\n            $(this).data('zfPlugin')._init();\n          });\n        } else {\n          var type = typeof plugins,\n              _this = this,\n              fns = {\n            'object': function (plgs) {\n              plgs.forEach(function (p) {\n                p = hyphenate(p);\n                $('[data-' + p + ']').foundation('_init');\n              });\n            },\n            'string': function () {\n              plugins = hyphenate(plugins);\n              $('[data-' + plugins + ']').foundation('_init');\n            },\n            'undefined': function () {\n              this['object'](Object.keys(_this._plugins));\n            }\n          };\n          fns[type](plugins);\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        return plugins;\n      }\n    },\n\n    /**\n     * returns a random base-36 uid with namespacing\n     * @function\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n     * @returns {String} - unique id\n     */\n    GetYoDigits: function (length, namespace) {\n      length = length || 6;\n      return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n    },\n    /**\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n     */\n    reflow: function (elem, plugins) {\n\n      // If plugins is undefined, just grab everything\n      if (typeof plugins === 'undefined') {\n        plugins = Object.keys(this._plugins);\n      }\n      // If plugins is a string, convert it to an array with one item\n      else if (typeof plugins === 'string') {\n          plugins = [plugins];\n        }\n\n      var _this = this;\n\n      // Iterate through each plugin\n      $.each(plugins, function (i, name) {\n        // Get the current plugin\n        var plugin = _this._plugins[name];\n\n        // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n        var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\n\n        // For each plugin found, initialize it\n        $elem.each(function () {\n          var $el = $(this),\n              opts = {};\n          // Don't double-dip on plugins\n          if ($el.data('zfPlugin')) {\n            console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n            return;\n          }\n\n          if ($el.attr('data-options')) {\n            var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n              var opt = e.split(':').map(function (el) {\n                return el.trim();\n              });\n              if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n            });\n          }\n          try {\n            $el.data('zfPlugin', new plugin($(this), opts));\n          } catch (er) {\n            console.error(er);\n          } finally {\n            return;\n          }\n        });\n      });\n    },\n    getFnName: functionName,\n    transitionend: function ($elem) {\n      var transitions = {\n        'transition': 'transitionend',\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'otransitionend'\n      };\n      var elem = document.createElement('div'),\n          end;\n\n      for (var t in transitions) {\n        if (typeof elem.style[t] !== 'undefined') {\n          end = transitions[t];\n        }\n      }\n      if (end) {\n        return end;\n      } else {\n        end = setTimeout(function () {\n          $elem.triggerHandler('transitionend', [$elem]);\n        }, 1);\n        return 'transitionend';\n      }\n    }\n  };\n\n  Foundation.util = {\n    /**\n     * Function for applying a debounce effect to a function call.\n     * @function\n     * @param {Function} func - Function to be called at end of timeout.\n     * @param {Number} delay - Time in ms to delay the call of `func`.\n     * @returns function\n     */\n    throttle: function (func, delay) {\n      var timer = null;\n\n      return function () {\n        var context = this,\n            args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            func.apply(context, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    }\n  };\n\n  // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n  /**\n   * The Foundation jQuery method.\n   * @param {String|Array} method - An action to perform on the current jQuery object.\n   */\n  var foundation = function (method) {\n    var type = typeof method,\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError('We\\'re sorry, ' + type + ' is not a valid parameter. You must use a string representing the method you wish to invoke.');\n    }\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation;\n\n  // Polyfill for requestAnimationFrame\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\n     * Polyfill for performance.now, required by rAF\n     */\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function () {\n          return Date.now() - this.start;\n        }\n      };\n    }\n  })();\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function () {},\n          fBound = function () {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n  }\n  // Polyfill to get the name of a function in IE9\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n  function parseValue(str) {\n    if ('true' === str) return true;else if ('false' === str) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  }\n  // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  Foundation.Box = {\n    ImNotTouchingYou: ImNotTouchingYou,\n    GetDimensions: GetDimensions,\n    GetOffsets: GetOffsets\n  };\n\n  /**\n   * Compares the dimensions of an element to a container and determines collision events with container.\n   * @function\n   * @param {jQuery} element - jQuery object to test for collisions.\n   * @param {jQuery} parent - jQuery object to use as bounding container.\n   * @param {Boolean} lrOnly - set to true to check left and right values only.\n   * @param {Boolean} tbOnly - set to true to check top and bottom values only.\n   * @default if no parent object passed, detects collisions with `window`.\n   * @returns {Boolean} - true if collision free, false if a collision in any direction.\n   */\n  function ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\n    var eleDims = GetDimensions(element),\n        top,\n        bottom,\n        left,\n        right;\n\n    if (parent) {\n      var parDims = GetDimensions(parent);\n\n      bottom = eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top;\n      top = eleDims.offset.top >= parDims.offset.top;\n      left = eleDims.offset.left >= parDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= parDims.width + parDims.offset.left;\n    } else {\n      bottom = eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top;\n      top = eleDims.offset.top >= eleDims.windowDims.offset.top;\n      left = eleDims.offset.left >= eleDims.windowDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= eleDims.windowDims.width;\n    }\n\n    var allDirs = [bottom, top, left, right];\n\n    if (lrOnly) {\n      return left === right === true;\n    }\n\n    if (tbOnly) {\n      return top === bottom === true;\n    }\n\n    return allDirs.indexOf(false) === -1;\n  };\n\n  /**\n   * Uses native methods to return an object of dimension values.\n   * @function\n   * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\n   * @returns {Object} - nested object of integer pixel values\n   * TODO - if element is window, return only those values.\n   */\n  function GetDimensions(elem, test) {\n    elem = elem.length ? elem[0] : elem;\n\n    if (elem === window || elem === document) {\n      throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n    }\n\n    var rect = elem.getBoundingClientRect(),\n        parRect = elem.parentNode.getBoundingClientRect(),\n        winRect = document.body.getBoundingClientRect(),\n        winY = window.pageYOffset,\n        winX = window.pageXOffset;\n\n    return {\n      width: rect.width,\n      height: rect.height,\n      offset: {\n        top: rect.top + winY,\n        left: rect.left + winX\n      },\n      parentDims: {\n        width: parRect.width,\n        height: parRect.height,\n        offset: {\n          top: parRect.top + winY,\n          left: parRect.left + winX\n        }\n      },\n      windowDims: {\n        width: winRect.width,\n        height: winRect.height,\n        offset: {\n          top: winY,\n          left: winX\n        }\n      }\n    };\n  }\n\n  /**\n   * Returns an object of top and left integer pixel values for dynamically rendered elements,\n   * such as: Tooltip, Reveal, and Dropdown\n   * @function\n   * @param {jQuery} element - jQuery object for the element being positioned.\n   * @param {jQuery} anchor - jQuery object for the element's anchor point.\n   * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\n   * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\n   * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\n   * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\n   * TODO alter/rewrite to work with `em` values as well/instead of pixels\n   */\n  function GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\n    var $eleDims = GetDimensions(element),\n        $anchorDims = anchor ? GetDimensions(anchor) : null;\n\n    switch (position) {\n      case 'top':\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'center top':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'center bottom':\n        return {\n          left: isOverflow ? hOffset : $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'center left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center':\n        return {\n          left: $eleDims.windowDims.offset.left + $eleDims.windowDims.width / 2 - $eleDims.width / 2,\n          top: $eleDims.windowDims.offset.top + $eleDims.windowDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'reveal':\n        return {\n          left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n          top: $eleDims.windowDims.offset.top + vOffset\n        };\n      case 'reveal full':\n        return {\n          left: $eleDims.windowDims.offset.left,\n          top: $eleDims.windowDims.offset.top\n        };\n        break;\n      case 'left bottom':\n        return {\n          left: $anchorDims.offset.left,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'right bottom':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset - $eleDims.width,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      default:\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left + hOffset,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n    }\n  }\n}(jQuery);\n/*******************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n ******************************************/\n\n'use strict';\n\n!function ($) {\n\n  var keyCodes = {\n    9: 'TAB',\n    13: 'ENTER',\n    27: 'ESCAPE',\n    32: 'SPACE',\n    37: 'ARROW_LEFT',\n    38: 'ARROW_UP',\n    39: 'ARROW_RIGHT',\n    40: 'ARROW_DOWN'\n  };\n\n  var commands = {};\n\n  var Keyboard = {\n    keys: getKeyCodes(keyCodes),\n\n    /**\n     * Parses the (keyboard) event and returns a String that represents its key\n     * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n     * @param {Event} event - the event generated by the event handler\n     * @return String key - String that represents the key pressed\n     */\n    parseKey: function (event) {\n      var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n\n      // Remove un-printable characters, e.g. for `fromCharCode` calls for CTRL only events\n      key = key.replace(/\\W+/, '');\n\n      if (event.shiftKey) key = 'SHIFT_' + key;\n      if (event.ctrlKey) key = 'CTRL_' + key;\n      if (event.altKey) key = 'ALT_' + key;\n\n      // Remove trailing underscore, in case only modifiers were used (e.g. only `CTRL_ALT`)\n      key = key.replace(/_$/, '');\n\n      return key;\n    },\n\n\n    /**\n     * Handles the given (keyboard) event\n     * @param {Event} event - the event generated by the event handler\n     * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n     * @param {Objects} functions - collection of functions that are to be executed\n     */\n    handleKey: function (event, component, functions) {\n      var commandList = commands[component],\n          keyCode = this.parseKey(event),\n          cmds,\n          command,\n          fn;\n\n      if (!commandList) return console.warn('Component not defined!');\n\n      if (typeof commandList.ltr === 'undefined') {\n        // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n      } else {\n        // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n        if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n      }\n      command = cmds[keyCode];\n\n      fn = functions[command];\n      if (fn && typeof fn === 'function') {\n        // execute function  if exists\n        var returnValue = fn.apply();\n        if (functions.handled || typeof functions.handled === 'function') {\n          // execute function when event was handled\n          functions.handled(returnValue);\n        }\n      } else {\n        if (functions.unhandled || typeof functions.unhandled === 'function') {\n          // execute function when event was not handled\n          functions.unhandled();\n        }\n      }\n    },\n\n\n    /**\n     * Finds all focusable elements within the given `$element`\n     * @param {jQuery} $element - jQuery object to search within\n     * @return {jQuery} $focusable - all focusable elements within `$element`\n     */\n    findFocusable: function ($element) {\n      if (!$element) {\n        return false;\n      }\n      return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function () {\n        if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) {\n          return false;\n        } //only have visible elements and those that have a tabindex greater or equal 0\n        return true;\n      });\n    },\n\n\n    /**\n     * Returns the component name name\n     * @param {Object} component - Foundation component, e.g. Slider or Reveal\n     * @return String componentName\n     */\n\n    register: function (componentName, cmds) {\n      commands[componentName] = cmds;\n    },\n\n\n    /**\n     * Traps the focus in the given element.\n     * @param  {jQuery} $element  jQuery object to trap the foucs into.\n     */\n    trapFocus: function ($element) {\n      var $focusable = Foundation.Keyboard.findFocusable($element),\n          $firstFocusable = $focusable.eq(0),\n          $lastFocusable = $focusable.eq(-1);\n\n      $element.on('keydown.zf.trapfocus', function (event) {\n        if (event.target === $lastFocusable[0] && Foundation.Keyboard.parseKey(event) === 'TAB') {\n          event.preventDefault();\n          $firstFocusable.focus();\n        } else if (event.target === $firstFocusable[0] && Foundation.Keyboard.parseKey(event) === 'SHIFT_TAB') {\n          event.preventDefault();\n          $lastFocusable.focus();\n        }\n      });\n    },\n\n    /**\n     * Releases the trapped focus from the given element.\n     * @param  {jQuery} $element  jQuery object to release the focus for.\n     */\n    releaseFocus: function ($element) {\n      $element.off('keydown.zf.trapfocus');\n    }\n  };\n\n  /*\n   * Constants for easier comparing.\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   */\n  function getKeyCodes(kcs) {\n    var k = {};\n    for (var kc in kcs) {\n      k[kcs[kc]] = kcs[kc];\n    }return k;\n  }\n\n  Foundation.Keyboard = Keyboard;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  // Default set of media queries\n  var defaultQueries = {\n    'default': 'only screen',\n    landscape: 'only screen and (orientation: landscape)',\n    portrait: 'only screen and (orientation: portrait)',\n    retina: 'only screen and (-webkit-min-device-pixel-ratio: 2),' + 'only screen and (min--moz-device-pixel-ratio: 2),' + 'only screen and (-o-min-device-pixel-ratio: 2/1),' + 'only screen and (min-device-pixel-ratio: 2),' + 'only screen and (min-resolution: 192dpi),' + 'only screen and (min-resolution: 2dppx)'\n  };\n\n  var MediaQuery = {\n    queries: [],\n\n    current: '',\n\n    /**\n     * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n     * @function\n     * @private\n     */\n    _init: function () {\n      var self = this;\n      var extractedStyles = $('.foundation-mq').css('font-family');\n      var namedQueries;\n\n      namedQueries = parseStyleToObject(extractedStyles);\n\n      for (var key in namedQueries) {\n        if (namedQueries.hasOwnProperty(key)) {\n          self.queries.push({\n            name: key,\n            value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n          });\n        }\n      }\n\n      this.current = this._getCurrentSize();\n\n      this._watcher();\n    },\n\n\n    /**\n     * Checks if the screen is at least as wide as a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to check.\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n     */\n    atLeast: function (size) {\n      var query = this.get(size);\n\n      if (query) {\n        return window.matchMedia(query).matches;\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Checks if the screen matches to a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to check, either 'small only' or 'small'. Omitting 'only' falls back to using atLeast() method.\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it does not.\n     */\n    is: function (size) {\n      size = size.trim().split(' ');\n      if (size.length > 1 && size[1] === 'only') {\n        if (size[0] === this._getCurrentSize()) return true;\n      } else {\n        return this.atLeast(size[0]);\n      }\n      return false;\n    },\n\n\n    /**\n     * Gets the media query of a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to get.\n     * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n     */\n    get: function (size) {\n      for (var i in this.queries) {\n        if (this.queries.hasOwnProperty(i)) {\n          var query = this.queries[i];\n          if (size === query.name) return query.value;\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n     * @function\n     * @private\n     * @returns {String} Name of the current breakpoint.\n     */\n    _getCurrentSize: function () {\n      var matched;\n\n      for (var i = 0; i < this.queries.length; i++) {\n        var query = this.queries[i];\n\n        if (window.matchMedia(query.value).matches) {\n          matched = query;\n        }\n      }\n\n      if (typeof matched === 'object') {\n        return matched.name;\n      } else {\n        return matched;\n      }\n    },\n\n\n    /**\n     * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n     * @function\n     * @private\n     */\n    _watcher: function () {\n      var _this = this;\n\n      $(window).on('resize.zf.mediaquery', function () {\n        var newSize = _this._getCurrentSize(),\n            currentSize = _this.current;\n\n        if (newSize !== currentSize) {\n          // Change the current media query\n          _this.current = newSize;\n\n          // Broadcast the media query change on the window\n          $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\n        }\n      });\n    }\n  };\n\n  Foundation.MediaQuery = MediaQuery;\n\n  // matchMedia() polyfill - Test a CSS media type/query in JS.\n  // Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\n  window.matchMedia || (window.matchMedia = function () {\n    'use strict';\n\n    // For browsers that support matchMedium api such as IE 9 and webkit\n\n    var styleMedia = window.styleMedia || window.media;\n\n    // For those that don't support matchMedium\n    if (!styleMedia) {\n      var style = document.createElement('style'),\n          script = document.getElementsByTagName('script')[0],\n          info = null;\n\n      style.type = 'text/css';\n      style.id = 'matchmediajs-test';\n\n      script && script.parentNode && script.parentNode.insertBefore(style, script);\n\n      // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n      info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n\n      styleMedia = {\n        matchMedium: function (media) {\n          var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n          // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n          if (style.styleSheet) {\n            style.styleSheet.cssText = text;\n          } else {\n            style.textContent = text;\n          }\n\n          // Test if media query is true or false\n          return info.width === '1px';\n        }\n      };\n    }\n\n    return function (media) {\n      return {\n        matches: styleMedia.matchMedium(media || 'all'),\n        media: media || 'all'\n      };\n    };\n  }());\n\n  // Thank you: https://github.com/sindresorhus/query-string\n  function parseStyleToObject(str) {\n    var styleObject = {};\n\n    if (typeof str !== 'string') {\n      return styleObject;\n    }\n\n    str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n    if (!str) {\n      return styleObject;\n    }\n\n    styleObject = str.split('&').reduce(function (ret, param) {\n      var parts = param.replace(/\\+/g, ' ').split('=');\n      var key = parts[0];\n      var val = parts[1];\n      key = decodeURIComponent(key);\n\n      // missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n      val = val === undefined ? null : decodeURIComponent(val);\n\n      if (!ret.hasOwnProperty(key)) {\n        ret[key] = val;\n      } else if (Array.isArray(ret[key])) {\n        ret[key].push(val);\n      } else {\n        ret[key] = [ret[key], val];\n      }\n      return ret;\n    }, {});\n\n    return styleObject;\n  }\n\n  Foundation.MediaQuery = MediaQuery;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  /**\n   * Motion module.\n   * @module foundation.motion\n   */\n\n  var initClasses = ['mui-enter', 'mui-leave'];\n  var activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\n  var Motion = {\n    animateIn: function (element, animation, cb) {\n      animate(true, element, animation, cb);\n    },\n\n    animateOut: function (element, animation, cb) {\n      animate(false, element, animation, cb);\n    }\n  };\n\n  function Move(duration, elem, fn) {\n    var anim,\n        prog,\n        start = null;\n    // console.log('called');\n\n    if (duration === 0) {\n      fn.apply(elem);\n      elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n      return;\n    }\n\n    function move(ts) {\n      if (!start) start = ts;\n      // console.log(start, ts);\n      prog = ts - start;\n      fn.apply(elem);\n\n      if (prog < duration) {\n        anim = window.requestAnimationFrame(move, elem);\n      } else {\n        window.cancelAnimationFrame(anim);\n        elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n      }\n    }\n    anim = window.requestAnimationFrame(move);\n  }\n\n  /**\n   * Animates an element in or out using a CSS transition class.\n   * @function\n   * @private\n   * @param {Boolean} isIn - Defines if the animation is in or out.\n   * @param {Object} element - jQuery or HTML object to animate.\n   * @param {String} animation - CSS class to use.\n   * @param {Function} cb - Callback to run when animation is finished.\n   */\n  function animate(isIn, element, animation, cb) {\n    element = $(element).eq(0);\n\n    if (!element.length) return;\n\n    var initClass = isIn ? initClasses[0] : initClasses[1];\n    var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n    // Set up the animation\n    reset();\n\n    element.addClass(animation).css('transition', 'none');\n\n    requestAnimationFrame(function () {\n      element.addClass(initClass);\n      if (isIn) element.show();\n    });\n\n    // Start the animation\n    requestAnimationFrame(function () {\n      element[0].offsetWidth;\n      element.css('transition', '').addClass(activeClass);\n    });\n\n    // Clean up the animation when it finishes\n    element.one(Foundation.transitionend(element), finish);\n\n    // Hides the element (for out animations), resets the element, and runs a callback\n    function finish() {\n      if (!isIn) element.hide();\n      reset();\n      if (cb) cb.apply(element);\n    }\n\n    // Resets transitions and removes motion-specific classes\n    function reset() {\n      element[0].style.transitionDuration = 0;\n      element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\n    }\n  }\n\n  Foundation.Move = Move;\n  Foundation.Motion = Motion;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  var Nest = {\n    Feather: function (menu) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'zf';\n\n      menu.attr('role', 'menubar');\n\n      var items = menu.find('li').attr({ 'role': 'menuitem' }),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      items.each(function () {\n        var $item = $(this),\n            $sub = $item.children('ul');\n\n        if ($sub.length) {\n          $item.addClass(hasSubClass).attr({\n            'aria-haspopup': true,\n            'aria-label': $item.children('a:first').text()\n          });\n          // Note:  Drilldowns behave differently in how they hide, and so need\n          // additional attributes.  We should look if this possibly over-generalized\n          // utility (Nest) is appropriate when we rework menus in 6.4\n          if (type === 'drilldown') {\n            $item.attr({ 'aria-expanded': false });\n          }\n\n          $sub.addClass('submenu ' + subMenuClass).attr({\n            'data-submenu': '',\n            'role': 'menu'\n          });\n          if (type === 'drilldown') {\n            $sub.attr({ 'aria-hidden': true });\n          }\n        }\n\n        if ($item.parent('[data-submenu]').length) {\n          $item.addClass('is-submenu-item ' + subItemClass);\n        }\n      });\n\n      return;\n    },\n    Burn: function (menu, type) {\n      var //items = menu.find('li'),\n      subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      menu.find('>li, .menu, .menu > li').removeClass(subMenuClass + ' ' + subItemClass + ' ' + hasSubClass + ' is-submenu-item submenu is-active').removeAttr('data-submenu').css('display', '');\n\n      // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n      //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n      //           .removeAttr('data-submenu'));\n      // items.each(function(){\n      //   var $item = $(this),\n      //       $sub = $item.children('ul');\n      //   if($item.parent('[data-submenu]').length){\n      //     $item.removeClass('is-submenu-item ' + subItemClass);\n      //   }\n      //   if($sub.length){\n      //     $item.removeClass('has-submenu');\n      //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n      //   }\n      // });\n    }\n  };\n\n  Foundation.Nest = Nest;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  function Timer(elem, options, cb) {\n    var _this = this,\n        duration = options.duration,\n        //options is an object for easily adding features later.\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.isPaused = false;\n\n    this.restart = function () {\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function () {\n      this.isPaused = false;\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function () {\n        if (options.infinite) {\n          _this.restart(); //rerun the timer.\n        }\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function () {\n      this.isPaused = true;\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  }\n\n  /**\n   * Runs a callback function when images are fully loaded.\n   * @param {Object} images - Image(s) to check if loaded.\n   * @param {Func} callback - Function to execute when image is fully loaded.\n   */\n  function onImagesLoaded(images, callback) {\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    images.each(function () {\n      // Check if image is loaded\n      if (this.complete || this.readyState === 4 || this.readyState === 'complete') {\n        singleImageLoaded();\n      }\n      // Force load the image\n      else {\n          // fix for IE. See https://css-tricks.com/snippets/jquery/fixing-load-in-ie-for-cached-images/\n          var src = $(this).attr('src');\n          $(this).attr('src', src + '?' + new Date().getTime());\n          $(this).one('load', function () {\n            singleImageLoaded();\n          });\n        }\n    });\n\n    function singleImageLoaded() {\n      unloaded--;\n      if (unloaded === 0) {\n        callback();\n      }\n    }\n  }\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery);\n//**************************************************\n//**Work inspired by multiple jquery swipe plugins**\n//**Done by Yohai Ararat ***************************\n//**************************************************\n(function ($) {\n\n\t$.spotSwipe = {\n\t\tversion: '1.0.0',\n\t\tenabled: 'ontouchstart' in document.documentElement,\n\t\tpreventDefault: false,\n\t\tmoveThreshold: 75,\n\t\ttimeThreshold: 200\n\t};\n\n\tvar startPosX,\n\t    startPosY,\n\t    startTime,\n\t    elapsedTime,\n\t    isMoving = false;\n\n\tfunction onTouchEnd() {\n\t\t//  alert(this);\n\t\tthis.removeEventListener('touchmove', onTouchMove);\n\t\tthis.removeEventListener('touchend', onTouchEnd);\n\t\tisMoving = false;\n\t}\n\n\tfunction onTouchMove(e) {\n\t\tif ($.spotSwipe.preventDefault) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tif (isMoving) {\n\t\t\tvar x = e.touches[0].pageX;\n\t\t\tvar y = e.touches[0].pageY;\n\t\t\tvar dx = startPosX - x;\n\t\t\tvar dy = startPosY - y;\n\t\t\tvar dir;\n\t\t\telapsedTime = new Date().getTime() - startTime;\n\t\t\tif (Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t\tdir = dx > 0 ? 'left' : 'right';\n\t\t\t}\n\t\t\t// else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t//   dir = dy > 0 ? 'down' : 'up';\n\t\t\t// }\n\t\t\tif (dir) {\n\t\t\t\te.preventDefault();\n\t\t\t\tonTouchEnd.call(this);\n\t\t\t\t$(this).trigger('swipe', dir).trigger('swipe' + dir);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onTouchStart(e) {\n\t\tif (e.touches.length == 1) {\n\t\t\tstartPosX = e.touches[0].pageX;\n\t\t\tstartPosY = e.touches[0].pageY;\n\t\t\tisMoving = true;\n\t\t\tstartTime = new Date().getTime();\n\t\t\tthis.addEventListener('touchmove', onTouchMove, false);\n\t\t\tthis.addEventListener('touchend', onTouchEnd, false);\n\t\t}\n\t}\n\n\tfunction init() {\n\t\tthis.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\n\t}\n\n\tfunction teardown() {\n\t\tthis.removeEventListener('touchstart', onTouchStart);\n\t}\n\n\t$.event.special.swipe = { setup: init };\n\n\t$.each(['left', 'up', 'down', 'right'], function () {\n\t\t$.event.special['swipe' + this] = { setup: function () {\n\t\t\t\t$(this).on('swipe', $.noop);\n\t\t\t} };\n\t});\n})(jQuery);\n/****************************************************\n * Method for adding psuedo drag events to elements *\n ***************************************************/\n!function ($) {\n\t$.fn.addTouch = function () {\n\t\tthis.each(function (i, el) {\n\t\t\t$(el).bind('touchstart touchmove touchend touchcancel', function () {\n\t\t\t\t//we pass the original event object because the jQuery event\n\t\t\t\t//object is normalized to w3c specs and does not provide the TouchList\n\t\t\t\thandleTouch(event);\n\t\t\t});\n\t\t});\n\n\t\tvar handleTouch = function (event) {\n\t\t\tvar touches = event.changedTouches,\n\t\t\t    first = touches[0],\n\t\t\t    eventTypes = {\n\t\t\t\ttouchstart: 'mousedown',\n\t\t\t\ttouchmove: 'mousemove',\n\t\t\t\ttouchend: 'mouseup'\n\t\t\t},\n\t\t\t    type = eventTypes[event.type],\n\t\t\t    simulatedEvent;\n\n\t\t\tif ('MouseEvent' in window && typeof window.MouseEvent === 'function') {\n\t\t\t\tsimulatedEvent = new window.MouseEvent(type, {\n\t\t\t\t\t'bubbles': true,\n\t\t\t\t\t'cancelable': true,\n\t\t\t\t\t'screenX': first.screenX,\n\t\t\t\t\t'screenY': first.screenY,\n\t\t\t\t\t'clientX': first.clientX,\n\t\t\t\t\t'clientY': first.clientY\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsimulatedEvent = document.createEvent('MouseEvent');\n\t\t\t\tsimulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0 /*left*/, null);\n\t\t\t}\n\t\t\tfirst.target.dispatchEvent(simulatedEvent);\n\t\t};\n\t};\n}(jQuery);\n\n//**********************************\n//**From the jQuery Mobile Library**\n//**need to recreate functionality**\n//**and try to improve if possible**\n//**********************************\n\n/* Removing the jQuery function ****\n************************************\n\n(function( $, window, undefined ) {\n\n\tvar $document = $( document ),\n\t\t// supportTouch = $.mobile.support.touch,\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\n\n\t// setup new event shortcuts\n\t$.each( ( \"touchstart touchmove touchend \" +\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\n\n\t\t$.fn[ name ] = function( fn ) {\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\n\t\t};\n\n\t\t// jQuery < 1.8\n\t\tif ( $.attrFn ) {\n\t\t\t$.attrFn[ name ] = true;\n\t\t}\n\t});\n\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\n\t\tvar originalType = event.type;\n\t\tevent.type = eventType;\n\t\tif ( bubble ) {\n\t\t\t$.event.trigger( event, undefined, obj );\n\t\t} else {\n\t\t\t$.event.dispatch.call( obj, event );\n\t\t}\n\t\tevent.type = originalType;\n\t}\n\n\t// also handles taphold\n\n\t// Also handles swipeleft, swiperight\n\t$.event.special.swipe = {\n\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\n\t\tscrollSupressionThreshold: 30,\n\n\t\t// More time than this, and it isn't a swipe.\n\t\tdurationThreshold: 1000,\n\n\t\t// Swipe horizontal displacement must be more than this.\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\t// Swipe vertical displacement must be less than this.\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\tgetLocation: function ( event ) {\n\t\t\tvar winPageX = window.pageXOffset,\n\t\t\t\twinPageY = window.pageYOffset,\n\t\t\t\tx = event.clientX,\n\t\t\t\ty = event.clientY;\n\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\n\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\n\t\t\t\tx = x - winPageX;\n\t\t\t\ty = y - winPageY;\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\n\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\n\t\t\t\tx = event.pageX - winPageX;\n\t\t\t\ty = event.pageY - winPageY;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t},\n\n\t\tstart: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\n\t\t\t\t\t\torigin: $( event.target )\n\t\t\t\t\t};\n\t\t},\n\n\t\tstop: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\n\t\t\t\t\t};\n\t\t},\n\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\n\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\n\t\t},\n\n\t\t// This serves as a flag to ensure that at most one swipe event event is\n\t\t// in work at any given time\n\t\teventInProgress: false,\n\n\t\tsetup: function() {\n\t\t\tvar events,\n\t\t\t\tthisObject = this,\n\t\t\t\t$this = $( thisObject ),\n\t\t\t\tcontext = {};\n\n\t\t\t// Retrieve the events data for this element and add the swipe context\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( !events ) {\n\t\t\t\tevents = { length: 0 };\n\t\t\t\t$.data( this, \"mobile-events\", events );\n\t\t\t}\n\t\t\tevents.length++;\n\t\t\tevents.swipe = context;\n\n\t\t\tcontext.start = function( event ) {\n\n\t\t\t\t// Bail if we're already working on a swipe event\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\n\n\t\t\t\tvar stop,\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\n\t\t\t\t\torigTarget = event.target,\n\t\t\t\t\temitted = false;\n\n\t\t\t\tcontext.move = function( event ) {\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\n\t\t\t\t\tif ( !emitted ) {\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\n\t\t\t\t\t\tif ( emitted ) {\n\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// prevent scrolling\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tcontext.stop = function() {\n\t\t\t\t\t\temitted = true;\n\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t\t\tcontext.move = null;\n\t\t\t\t};\n\n\t\t\t\t$document.on( touchMoveEvent, context.move )\n\t\t\t\t\t.one( touchStopEvent, context.stop );\n\t\t\t};\n\t\t\t$this.on( touchStartEvent, context.start );\n\t\t},\n\n\t\tteardown: function() {\n\t\t\tvar events, context;\n\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( events ) {\n\t\t\t\tcontext = events.swipe;\n\t\t\t\tdelete events.swipe;\n\t\t\t\tevents.length--;\n\t\t\t\tif ( events.length === 0 ) {\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( context ) {\n\t\t\t\tif ( context.start ) {\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\n\t\t\t\t}\n\t\t\t\tif ( context.move ) {\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t}\n\t\t\t\tif ( context.stop ) {\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t$.each({\n\t\tswipeleft: \"swipe.left\",\n\t\tswiperight: \"swipe.right\"\n\t}, function( event, sourceEvent ) {\n\n\t\t$.event.special[ event ] = {\n\t\t\tsetup: function() {\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\t$( this ).unbind( sourceEvent );\n\t\t\t}\n\t\t};\n\t});\n})( jQuery, this );\n*/\n'use strict';\n\n!function ($) {\n\n  var MutationObserver = function () {\n    var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n    for (var i = 0; i < prefixes.length; i++) {\n      if (prefixes[i] + 'MutationObserver' in window) {\n        return window[prefixes[i] + 'MutationObserver'];\n      }\n    }\n    return false;\n  }();\n\n  var triggers = function (el, type) {\n    el.data(type).split(' ').forEach(function (id) {\n      $('#' + id)[type === 'close' ? 'trigger' : 'triggerHandler'](type + '.zf.trigger', [el]);\n    });\n  };\n  // Elements with [data-open] will reveal a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-open]', function () {\n    triggers($(this), 'open');\n  });\n\n  // Elements with [data-close] will close a plugin that supports it when clicked.\n  // If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n  $(document).on('click.zf.trigger', '[data-close]', function () {\n    var id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    } else {\n      $(this).trigger('close.zf.trigger');\n    }\n  });\n\n  // Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-toggle]', function () {\n    var id = $(this).data('toggle');\n    if (id) {\n      triggers($(this), 'toggle');\n    } else {\n      $(this).trigger('toggle.zf.trigger');\n    }\n  });\n\n  // Elements with [data-closable] will respond to close.zf.trigger events.\n  $(document).on('close.zf.trigger', '[data-closable]', function (e) {\n    e.stopPropagation();\n    var animation = $(this).data('closable');\n\n    if (animation !== '') {\n      Foundation.Motion.animateOut($(this), animation, function () {\n        $(this).trigger('closed.zf');\n      });\n    } else {\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  });\n\n  $(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function () {\n    var id = $(this).data('toggle-focus');\n    $('#' + id).triggerHandler('toggle.zf.trigger', [$(this)]);\n  });\n\n  /**\n  * Fires once after all other scripts have loaded\n  * @function\n  * @private\n  */\n  $(window).on('load', function () {\n    checkListeners();\n  });\n\n  function checkListeners() {\n    eventsListener();\n    resizeListener();\n    scrollListener();\n    mutateListener();\n    closemeListener();\n  }\n\n  //******** only fires this function once on load, if there's something to watch ********\n  function closemeListener(pluginName) {\n    var yetiBoxes = $('[data-yeti-box]'),\n        plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n    if (pluginName) {\n      if (typeof pluginName === 'string') {\n        plugNames.push(pluginName);\n      } else if (typeof pluginName === 'object' && typeof pluginName[0] === 'string') {\n        plugNames.concat(pluginName);\n      } else {\n        console.error('Plugin names must be strings');\n      }\n    }\n    if (yetiBoxes.length) {\n      var listeners = plugNames.map(function (name) {\n        return 'closeme.zf.' + name;\n      }).join(' ');\n\n      $(window).off(listeners).on(listeners, function (e, pluginId) {\n        var plugin = e.namespace.split('.')[0];\n        var plugins = $('[data-' + plugin + ']').not('[data-yeti-box=\"' + pluginId + '\"]');\n\n        plugins.each(function () {\n          var _this = $(this);\n\n          _this.triggerHandler('close.zf.trigger', [_this]);\n        });\n      });\n    }\n  }\n\n  function resizeListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-resize]');\n    if ($nodes.length) {\n      $(window).off('resize.zf.trigger').on('resize.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('resizeme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a resize event\n          $nodes.attr('data-events', \"resize\");\n        }, debounce || 10); //default time to emit resize event\n      });\n    }\n  }\n\n  function scrollListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-scroll]');\n    if ($nodes.length) {\n      $(window).off('scroll.zf.trigger').on('scroll.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('scrollme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a scroll event\n          $nodes.attr('data-events', \"scroll\");\n        }, debounce || 10); //default time to emit scroll event\n      });\n    }\n  }\n\n  function mutateListener(debounce) {\n    var $nodes = $('[data-mutate]');\n    if ($nodes.length && MutationObserver) {\n      //trigger all listening elements and signal a mutate event\n      //no IE 9 or 10\n      $nodes.each(function () {\n        $(this).triggerHandler('mutateme.zf.trigger');\n      });\n    }\n  }\n\n  function eventsListener() {\n    if (!MutationObserver) {\n      return false;\n    }\n    var nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n    //element callback\n    var listeningElementsMutation = function (mutationRecordsList) {\n      var $target = $(mutationRecordsList[0].target);\n\n      //trigger the event handler for the element depending on type\n      switch (mutationRecordsList[0].type) {\n\n        case \"attributes\":\n          if ($target.attr(\"data-events\") === \"scroll\" && mutationRecordsList[0].attributeName === \"data-events\") {\n            $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n          }\n          if ($target.attr(\"data-events\") === \"resize\" && mutationRecordsList[0].attributeName === \"data-events\") {\n            $target.triggerHandler('resizeme.zf.trigger', [$target]);\n          }\n          if (mutationRecordsList[0].attributeName === \"style\") {\n            $target.closest(\"[data-mutate]\").attr(\"data-events\", \"mutate\");\n            $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n          }\n          break;\n\n        case \"childList\":\n          $target.closest(\"[data-mutate]\").attr(\"data-events\", \"mutate\");\n          $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n          break;\n\n        default:\n          return false;\n        //nothing\n      }\n    };\n\n    if (nodes.length) {\n      //for each element that needs to listen for resizing, scrolling, or mutation add a single observer\n      for (var i = 0; i <= nodes.length - 1; i++) {\n        var elementObserver = new MutationObserver(listeningElementsMutation);\n        elementObserver.observe(nodes[i], { attributes: true, childList: true, characterData: false, subtree: true, attributeFilter: [\"data-events\", \"style\"] });\n      }\n    }\n  }\n\n  // ------------------------------------\n\n  // [PH]\n  // Foundation.CheckWatchers = checkWatchers;\n  Foundation.IHearYou = checkListeners;\n  // Foundation.ISeeYou = scrollListener;\n  // Foundation.IFeelYou = closemeListener;\n}(jQuery);\n\n// function domMutationObserver(debounce) {\n//   // !!! This is coming soon and needs more work; not active  !!! //\n//   var timer,\n//   nodes = document.querySelectorAll('[data-mutate]');\n//   //\n//   if (nodes.length) {\n//     // var MutationObserver = (function () {\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n//     //   for (var i=0; i < prefixes.length; i++) {\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\n//     //       return window[prefixes[i] + 'MutationObserver'];\n//     //     }\n//     //   }\n//     //   return false;\n//     // }());\n//\n//\n//     //for the body, we need to listen for all changes effecting the style and class attributes\n//     var bodyObserver = new MutationObserver(bodyMutation);\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n//\n//\n//     //body callback\n//     function bodyMutation(mutate) {\n//       //trigger all listening elements and signal a mutation event\n//       if (timer) { clearTimeout(timer); }\n//\n//       timer = setTimeout(function() {\n//         bodyObserver.disconnect();\n//         $('[data-mutate]').attr('data-events',\"mutate\");\n//       }, debounce || 150);\n//     }\n//   }\n// }\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Abide module.\n   * @module foundation.abide\n   */\n\n  var Abide = function () {\n    /**\n     * Creates a new instance of Abide.\n     * @class\n     * @fires Abide#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Abide(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Abide);\n\n      this.$element = element;\n      this.options = $.extend({}, Abide.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Abide');\n    }\n\n    /**\n     * Initializes the Abide plugin and calls functions to get Abide functioning on load.\n     * @private\n     */\n\n\n    _createClass(Abide, [{\n      key: '_init',\n      value: function _init() {\n        this.$inputs = this.$element.find('input, textarea, select');\n\n        this._events();\n      }\n\n      /**\n       * Initializes events for Abide.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        this.$element.off('.abide').on('reset.zf.abide', function () {\n          _this2.resetForm();\n        }).on('submit.zf.abide', function () {\n          return _this2.validateForm();\n        });\n\n        if (this.options.validateOn === 'fieldChange') {\n          this.$inputs.off('change.zf.abide').on('change.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n\n        if (this.options.liveValidate) {\n          this.$inputs.off('input.zf.abide').on('input.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n\n        if (this.options.validateOnBlur) {\n          this.$inputs.off('blur.zf.abide').on('blur.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n      }\n\n      /**\n       * Calls necessary functions to update Abide upon DOM change\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        this._init();\n      }\n\n      /**\n       * Checks whether or not a form element has the required attribute and if it's checked or not\n       * @param {Object} element - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'requiredCheck',\n      value: function requiredCheck($el) {\n        if (!$el.attr('required')) return true;\n\n        var isGood = true;\n\n        switch ($el[0].type) {\n          case 'checkbox':\n            isGood = $el[0].checked;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            var opt = $el.find('option:selected');\n            if (!opt.length || !opt.val()) isGood = false;\n            break;\n\n          default:\n            if (!$el.val() || !$el.val().length) isGood = false;\n        }\n\n        return isGood;\n      }\n\n      /**\n       * Based on $el, get the first element with selector in this order:\n       * 1. The element's direct sibling('s).\n       * 3. The element's parent's children.\n       *\n       * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\n       *\n       * @param {Object} $el - jQuery object to use as reference to find the form error selector.\n       * @returns {Object} jQuery object with the selector.\n       */\n\n    }, {\n      key: 'findFormError',\n      value: function findFormError($el) {\n        var $error = $el.siblings(this.options.formErrorSelector);\n\n        if (!$error.length) {\n          $error = $el.parent().find(this.options.formErrorSelector);\n        }\n\n        return $error;\n      }\n\n      /**\n       * Get the first element in this order:\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\n       * 3. The `.closest()` <label>\n       *\n       * @param {Object} $el - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'findLabel',\n      value: function findLabel($el) {\n        var id = $el[0].id;\n        var $label = this.$element.find('label[for=\"' + id + '\"]');\n\n        if (!$label.length) {\n          return $el.closest('label');\n        }\n\n        return $label;\n      }\n\n      /**\n       * Get the set of labels associated with a set of radio els in this order\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\n       * 3. The `.closest()` <label>\n       *\n       * @param {Object} $el - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'findRadioLabels',\n      value: function findRadioLabels($els) {\n        var _this3 = this;\n\n        var labels = $els.map(function (i, el) {\n          var id = el.id;\n          var $label = _this3.$element.find('label[for=\"' + id + '\"]');\n\n          if (!$label.length) {\n            $label = $(el).closest('label');\n          }\n          return $label[0];\n        });\n\n        return $(labels);\n      }\n\n      /**\n       * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\n       * @param {Object} $el - jQuery object to add the class to\n       */\n\n    }, {\n      key: 'addErrorClasses',\n      value: function addErrorClasses($el) {\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.addClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.addClass(this.options.formErrorClass);\n        }\n\n        $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\n      }\n\n      /**\n       * Remove CSS error classes etc from an entire radio button group\n       * @param {String} groupName - A string that specifies the name of a radio button group\n       *\n       */\n\n    }, {\n      key: 'removeRadioErrorClasses',\n      value: function removeRadioErrorClasses(groupName) {\n        var $els = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var $labels = this.findRadioLabels($els);\n        var $formErrors = this.findFormError($els);\n\n        if ($labels.length) {\n          $labels.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formErrors.length) {\n          $formErrors.removeClass(this.options.formErrorClass);\n        }\n\n        $els.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\n       * Removes CSS error class as specified by the Abide settings from the label, input, and the form\n       * @param {Object} $el - jQuery object to remove the class from\n       */\n\n    }, {\n      key: 'removeErrorClasses',\n      value: function removeErrorClasses($el) {\n        // radios need to clear all of the els\n        if ($el[0].type == 'radio') {\n          return this.removeRadioErrorClasses($el.attr('name'));\n        }\n\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.removeClass(this.options.formErrorClass);\n        }\n\n        $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\n       * Goes through a form to find inputs and proceeds to validate them in ways specific to their type\n       * @fires Abide#invalid\n       * @fires Abide#valid\n       * @param {Object} element - jQuery object to validate, should be an HTML input\n       * @returns {Boolean} goodToGo - If the input is valid or not.\n       */\n\n    }, {\n      key: 'validateInput',\n      value: function validateInput($el) {\n        var _this4 = this;\n\n        var clearRequire = this.requiredCheck($el),\n            validated = false,\n            customValidator = true,\n            validator = $el.attr('data-validator'),\n            equalTo = true;\n\n        // don't validate ignored inputs or hidden inputs\n        if ($el.is('[data-abide-ignore]') || $el.is('[type=\"hidden\"]')) {\n          return true;\n        }\n\n        switch ($el[0].type) {\n          case 'radio':\n            validated = this.validateRadio($el.attr('name'));\n            break;\n\n          case 'checkbox':\n            validated = clearRequire;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            validated = clearRequire;\n            break;\n\n          default:\n            validated = this.validateText($el);\n        }\n\n        if (validator) {\n          customValidator = this.matchValidation($el, validator, $el.attr('required'));\n        }\n\n        if ($el.attr('data-equalto')) {\n          equalTo = this.options.validators.equalTo($el);\n        }\n\n        var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\n        var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\n\n        if (goodToGo) {\n          // Re-validate inputs that depend on this one with equalto\n          var dependentElements = this.$element.find('[data-equalto=\"' + $el.attr('id') + '\"]');\n          if (dependentElements.length) {\n            (function () {\n              var _this = _this4;\n              dependentElements.each(function () {\n                if ($(this).val()) {\n                  _this.validateInput($(this));\n                }\n              });\n            })();\n          }\n        }\n\n        this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\n\n        /**\n         * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\n         * Trigger includes the DOM element of the input.\n         * @event Abide#valid\n         * @event Abide#invalid\n         */\n        $el.trigger(message, [$el]);\n\n        return goodToGo;\n      }\n\n      /**\n       * Goes through a form and if there are any invalid inputs, it will display the form error element\n       * @returns {Boolean} noError - true if no errors were detected...\n       * @fires Abide#formvalid\n       * @fires Abide#forminvalid\n       */\n\n    }, {\n      key: 'validateForm',\n      value: function validateForm() {\n        var acc = [];\n        var _this = this;\n\n        this.$inputs.each(function () {\n          acc.push(_this.validateInput($(this)));\n        });\n\n        var noError = acc.indexOf(false) === -1;\n\n        this.$element.find('[data-abide-error]').css('display', noError ? 'none' : 'block');\n\n        /**\n         * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\n         * Trigger includes the element of the form.\n         * @event Abide#formvalid\n         * @event Abide#forminvalid\n         */\n        this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\n\n        return noError;\n      }\n\n      /**\n       * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\n       * @param {Object} $el - jQuery object to validate, should be a text input HTML element\n       * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\n       * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\n       */\n\n    }, {\n      key: 'validateText',\n      value: function validateText($el, pattern) {\n        // A pattern can be passed to this function, or it will be infered from the input's \"pattern\" attribute, or it's \"type\" attribute\n        pattern = pattern || $el.attr('pattern') || $el.attr('type');\n        var inputText = $el.val();\n        var valid = false;\n\n        if (inputText.length) {\n          // If the pattern attribute on the element is in Abide's list of patterns, then test that regexp\n          if (this.options.patterns.hasOwnProperty(pattern)) {\n            valid = this.options.patterns[pattern].test(inputText);\n          }\n          // If the pattern name isn't also the type attribute of the field, then test it as a regexp\n          else if (pattern !== $el.attr('type')) {\n              valid = new RegExp(pattern).test(inputText);\n            } else {\n              valid = true;\n            }\n        }\n        // An empty field is valid if it's not required\n        else if (!$el.prop('required')) {\n            valid = true;\n          }\n\n        return valid;\n      }\n\n      /**\n       * Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `<input>`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.\n       * @param {String} groupName - A string that specifies the name of a radio button group\n       * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\n       */\n\n    }, {\n      key: 'validateRadio',\n      value: function validateRadio(groupName) {\n        // If at least one radio in the group has the `required` attribute, the group is considered required\n        // Per W3C spec, all radio buttons in a group should have `required`, but we're being nice\n        var $group = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var valid = false,\n            required = false;\n\n        // For the group to be required, at least one radio needs to be required\n        $group.each(function (i, e) {\n          if ($(e).attr('required')) {\n            required = true;\n          }\n        });\n        if (!required) valid = true;\n\n        if (!valid) {\n          // For the group to be valid, at least one radio needs to be checked\n          $group.each(function (i, e) {\n            if ($(e).prop('checked')) {\n              valid = true;\n            }\n          });\n        };\n\n        return valid;\n      }\n\n      /**\n       * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\n       * @param {Object} $el - jQuery input element.\n       * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\n       * @param {Boolean} required - self explanatory?\n       * @returns {Boolean} - true if validations passed.\n       */\n\n    }, {\n      key: 'matchValidation',\n      value: function matchValidation($el, validators, required) {\n        var _this5 = this;\n\n        required = required ? true : false;\n\n        var clear = validators.split(' ').map(function (v) {\n          return _this5.options.validators[v]($el, required, $el.parent());\n        });\n        return clear.indexOf(false) === -1;\n      }\n\n      /**\n       * Resets form inputs and styles\n       * @fires Abide#formreset\n       */\n\n    }, {\n      key: 'resetForm',\n      value: function resetForm() {\n        var $form = this.$element,\n            opts = this.options;\n\n        $('.' + opts.labelErrorClass, $form).not('small').removeClass(opts.labelErrorClass);\n        $('.' + opts.inputErrorClass, $form).not('small').removeClass(opts.inputErrorClass);\n        $(opts.formErrorSelector + '.' + opts.formErrorClass).removeClass(opts.formErrorClass);\n        $form.find('[data-abide-error]').css('display', 'none');\n        $(':input', $form).not(':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]').val('').removeAttr('data-invalid');\n        $(':input:radio', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        $(':input:checkbox', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        /**\n         * Fires when the form has been reset.\n         * @event Abide#formreset\n         */\n        $form.trigger('formreset.zf.abide', [$form]);\n      }\n\n      /**\n       * Destroys an instance of Abide.\n       * Removes error styles and classes from elements, without resetting their values.\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        var _this = this;\n        this.$element.off('.abide').find('[data-abide-error]').css('display', 'none');\n\n        this.$inputs.off('.abide').each(function () {\n          _this.removeErrorClasses($(this));\n        });\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Abide;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Abide.defaults = {\n    /**\n     * The default event to validate inputs. Checkboxes and radios validate immediately.\n     * Remove or change this value for manual validation.\n     * @option\n     * @example 'fieldChange'\n     */\n    validateOn: 'fieldChange',\n\n    /**\n     * Class to be applied to input labels on failed validation.\n     * @option\n     * @example 'is-invalid-label'\n     */\n    labelErrorClass: 'is-invalid-label',\n\n    /**\n     * Class to be applied to inputs on failed validation.\n     * @option\n     * @example 'is-invalid-input'\n     */\n    inputErrorClass: 'is-invalid-input',\n\n    /**\n     * Class selector to use to target Form Errors for show/hide.\n     * @option\n     * @example '.form-error'\n     */\n    formErrorSelector: '.form-error',\n\n    /**\n     * Class added to Form Errors on failed validation.\n     * @option\n     * @example 'is-visible'\n     */\n    formErrorClass: 'is-visible',\n\n    /**\n     * Set to true to validate text inputs on any value change.\n     * @option\n     * @example false\n     */\n    liveValidate: false,\n\n    /**\n     * Set to true to validate inputs on blur.\n     * @option\n     * @example false\n     */\n    validateOnBlur: false,\n\n    patterns: {\n      alpha: /^[a-zA-Z]+$/,\n      alpha_numeric: /^[a-zA-Z0-9]+$/,\n      integer: /^[-+]?\\d+$/,\n      number: /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\n\n      // amex, visa, diners\n      card: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n      cvv: /^([0-9]){3,4}$/,\n\n      // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\n      email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\n\n      url: /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\n      // abc.de\n      domain: /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\n\n      datetime: /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\n      // YYYY-MM-DD\n      date: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\n      // HH:MM:SS\n      time: /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\n      dateISO: /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\n      // MM/DD/YYYY\n      month_day_year: /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\n      // DD/MM/YYYY\n      day_month_year: /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\n\n      // #FFF or #FFFFFF\n      color: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\n    },\n\n    /**\n     * Optional validation functions to be used. `equalTo` being the only default included function.\n     * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\n     * el : The jQuery element to validate.\n     * required : Boolean value of the required attribute be present or not.\n     * parent : The direct parent of the input.\n     * @option\n     */\n    validators: {\n      equalTo: function (el, required, parent) {\n        return $('#' + el.attr('data-equalto')).val() === el.val();\n      }\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(Abide, 'Abide');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Accordion module.\n   * @module foundation.accordion\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   */\n\n  var Accordion = function () {\n    /**\n     * Creates a new instance of an accordion.\n     * @class\n     * @fires Accordion#init\n     * @param {jQuery} element - jQuery object to make into an accordion.\n     * @param {Object} options - a plain object with settings to override the default options.\n     */\n    function Accordion(element, options) {\n      _classCallCheck(this, Accordion);\n\n      this.$element = element;\n      this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Accordion');\n      Foundation.Keyboard.register('Accordion', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_DOWN': 'next',\n        'ARROW_UP': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the accordion by animating the preset active pane(s).\n     * @private\n     */\n\n\n    _createClass(Accordion, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.attr('role', 'tablist');\n        this.$tabs = this.$element.children('[data-accordion-item]');\n\n        this.$tabs.each(function (idx, el) {\n          var $el = $(el),\n              $content = $el.children('[data-tab-content]'),\n              id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n              linkId = el.id || id + '-label';\n\n          $el.find('a:first').attr({\n            'aria-controls': id,\n            'role': 'tab',\n            'id': linkId,\n            'aria-expanded': false,\n            'aria-selected': false\n          });\n\n          $content.attr({ 'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id });\n        });\n        var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n        if ($initActive.length) {\n          this.down($initActive, true);\n        }\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the accordion.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$tabs.each(function () {\n          var $elem = $(this);\n          var $tabContent = $elem.children('[data-tab-content]');\n          if ($tabContent.length) {\n            $elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion', function (e) {\n              e.preventDefault();\n              _this.toggle($tabContent);\n            }).on('keydown.zf.accordion', function (e) {\n              Foundation.Keyboard.handleKey(e, 'Accordion', {\n                toggle: function () {\n                  _this.toggle($tabContent);\n                },\n                next: function () {\n                  var $a = $elem.next().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                previous: function () {\n                  var $a = $elem.prev().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                handled: function () {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n              });\n            });\n          }\n        });\n      }\n\n      /**\n       * Toggles the selected content pane's open/close state.\n       * @param {jQuery} $target - jQuery object of the pane to toggle (`.accordion-content`).\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if ($target.parent().hasClass('is-active')) {\n          this.up($target);\n        } else {\n          this.down($target);\n        }\n      }\n\n      /**\n       * Opens the accordion tab defined by `$target`.\n       * @param {jQuery} $target - Accordion pane to open (`.accordion-content`).\n       * @param {Boolean} firstTime - flag to determine if reflow should happen.\n       * @fires Accordion#down\n       * @function\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target, firstTime) {\n        var _this2 = this;\n\n        $target.attr('aria-hidden', false).parent('[data-tab-content]').addBack().parent().addClass('is-active');\n\n        if (!this.options.multiExpand && !firstTime) {\n          var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\n          if ($currentActive.length) {\n            this.up($currentActive.not($target));\n          }\n        }\n\n        $target.slideDown(this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done opening.\n           * @event Accordion#down\n           */\n          _this2.$element.trigger('down.zf.accordion', [$target]);\n        });\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': true,\n          'aria-selected': true\n        });\n      }\n\n      /**\n       * Closes the tab defined by `$target`.\n       * @param {jQuery} $target - Accordion tab to close (`.accordion-content`).\n       * @fires Accordion#up\n       * @function\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var $aunts = $target.parent().siblings(),\n            _this = this;\n\n        if (!this.options.allowAllClosed && !$aunts.hasClass('is-active') || !$target.parent().hasClass('is-active')) {\n          return;\n        }\n\n        // Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done collapsing up.\n           * @event Accordion#up\n           */\n          _this.$element.trigger('up.zf.accordion', [$target]);\n        });\n        // });\n\n        $target.attr('aria-hidden', true).parent().removeClass('is-active');\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': false,\n          'aria-selected': false\n        });\n      }\n\n      /**\n       * Destroys an instance of an accordion.\n       * @fires Accordion#destroyed\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\n        this.$element.find('a').off('.zf.accordion');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Accordion;\n  }();\n\n  Accordion.defaults = {\n    /**\n     * Amount of time to animate the opening of an accordion pane.\n     * @option\n     * @example 250\n     */\n    slideSpeed: 250,\n    /**\n     * Allow the accordion to have multiple open panes.\n     * @option\n     * @example false\n     */\n    multiExpand: false,\n    /**\n     * Allow the accordion to close all panes.\n     * @option\n     * @example false\n     */\n    allowAllClosed: false\n  };\n\n  // Window exports\n  Foundation.plugin(Accordion, 'Accordion');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * AccordionMenu module.\n   * @module foundation.accordionMenu\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.nest\n   */\n\n  var AccordionMenu = function () {\n    /**\n     * Creates a new instance of an accordion menu.\n     * @class\n     * @fires AccordionMenu#init\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function AccordionMenu(element, options) {\n      _classCallCheck(this, AccordionMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, AccordionMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'accordion');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'AccordionMenu');\n      Foundation.Keyboard.register('AccordionMenu', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_RIGHT': 'open',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'close',\n        'ESCAPE': 'closeAll'\n      });\n    }\n\n    /**\n     * Initializes the accordion menu by hiding all nested menus.\n     * @private\n     */\n\n\n    _createClass(AccordionMenu, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.find('[data-submenu]').not('.is-active').slideUp(0); //.find('a').css('padding-left', '1rem');\n        this.$element.attr({\n          'role': 'menu',\n          'aria-multiselectable': this.options.multiOpen\n        });\n\n        this.$menuLinks = this.$element.find('.is-accordion-submenu-parent');\n        this.$menuLinks.each(function () {\n          var linkId = this.id || Foundation.GetYoDigits(6, 'acc-menu-link'),\n              $elem = $(this),\n              $sub = $elem.children('[data-submenu]'),\n              subId = $sub[0].id || Foundation.GetYoDigits(6, 'acc-menu'),\n              isActive = $sub.hasClass('is-active');\n          $elem.attr({\n            'aria-controls': subId,\n            'aria-expanded': isActive,\n            'role': 'menuitem',\n            'id': linkId\n          });\n          $sub.attr({\n            'aria-labelledby': linkId,\n            'aria-hidden': !isActive,\n            'role': 'menu',\n            'id': subId\n          });\n        });\n        var initPanes = this.$element.find('.is-active');\n        if (initPanes.length) {\n          var _this = this;\n          initPanes.each(function () {\n            _this.down($(this));\n          });\n        }\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the menu.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$element.find('li').each(function () {\n          var $submenu = $(this).children('[data-submenu]');\n\n          if ($submenu.length) {\n            $(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu', function (e) {\n              e.preventDefault();\n\n              _this.toggle($submenu);\n            });\n          }\n        }).on('keydown.zf.accordionmenu', function (e) {\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement,\n              $target = $element.children('[data-submenu]');\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1)).find('a').first();\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1)).find('a').first();\n\n              if ($(this).children('[data-submenu]:visible').length) {\n                // has open sub menu\n                $nextElement = $element.find('li:first-child').find('a').first();\n              }\n              if ($(this).is(':first-child')) {\n                // is first element of sub menu\n                $prevElement = $element.parents('li').first().find('a').first();\n              } else if ($prevElement.parents('li').first().children('[data-submenu]:visible').length) {\n                // if previous element has open sub menu\n                $prevElement = $prevElement.parents('li').find('li:last-child').find('a').first();\n              }\n              if ($(this).is(':last-child')) {\n                // is last element of sub menu\n                $nextElement = $element.parents('li').first().next('li').find('a').first();\n              }\n\n              return;\n            }\n          });\n\n          Foundation.Keyboard.handleKey(e, 'AccordionMenu', {\n            open: function () {\n              if ($target.is(':hidden')) {\n                _this.down($target);\n                $target.find('li').first().find('a').first().focus();\n              }\n            },\n            close: function () {\n              if ($target.length && !$target.is(':hidden')) {\n                // close active sub of this item\n                _this.up($target);\n              } else if ($element.parent('[data-submenu]').length) {\n                // close currently open sub\n                _this.up($element.parent('[data-submenu]'));\n                $element.parents('li').first().find('a').first().focus();\n              }\n            },\n            up: function () {\n              $prevElement.focus();\n              return true;\n            },\n            down: function () {\n              $nextElement.focus();\n              return true;\n            },\n            toggle: function () {\n              if ($element.children('[data-submenu]').length) {\n                _this.toggle($element.children('[data-submenu]'));\n              }\n            },\n            closeAll: function () {\n              _this.hideAll();\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n              e.stopImmediatePropagation();\n            }\n          });\n        }); //.attr('tabindex', 0);\n      }\n\n      /**\n       * Closes all panes of the menu.\n       * @function\n       */\n\n    }, {\n      key: 'hideAll',\n      value: function hideAll() {\n        this.up(this.$element.find('[data-submenu]'));\n      }\n\n      /**\n       * Opens all panes of the menu.\n       * @function\n       */\n\n    }, {\n      key: 'showAll',\n      value: function showAll() {\n        this.down(this.$element.find('[data-submenu]'));\n      }\n\n      /**\n       * Toggles the open/close state of a submenu.\n       * @function\n       * @param {jQuery} $target - the submenu to toggle\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if (!$target.is(':animated')) {\n          if (!$target.is(':hidden')) {\n            this.up($target);\n          } else {\n            this.down($target);\n          }\n        }\n      }\n\n      /**\n       * Opens the sub-menu defined by `$target`.\n       * @param {jQuery} $target - Sub-menu to open.\n       * @fires AccordionMenu#down\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target) {\n        var _this = this;\n\n        if (!this.options.multiOpen) {\n          this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));\n        }\n\n        $target.addClass('is-active').attr({ 'aria-hidden': false }).parent('.is-accordion-submenu-parent').attr({ 'aria-expanded': true });\n\n        //Foundation.Move(this.options.slideSpeed, $target, function() {\n        $target.slideDown(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the menu is done opening.\n           * @event AccordionMenu#down\n           */\n          _this.$element.trigger('down.zf.accordionMenu', [$target]);\n        });\n        //});\n      }\n\n      /**\n       * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\n       * @param {jQuery} $target - Sub-menu to close.\n       * @fires AccordionMenu#up\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var _this = this;\n        //Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the menu is done collapsing up.\n           * @event AccordionMenu#up\n           */\n          _this.$element.trigger('up.zf.accordionMenu', [$target]);\n        });\n        //});\n\n        var $menus = $target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden', true);\n\n        $menus.parent('.is-accordion-submenu-parent').attr('aria-expanded', false);\n      }\n\n      /**\n       * Destroys an instance of accordion menu.\n       * @fires AccordionMenu#destroyed\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-submenu]').slideDown(0).css('display', '');\n        this.$element.find('a').off('click.zf.accordionMenu');\n\n        Foundation.Nest.Burn(this.$element, 'accordion');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return AccordionMenu;\n  }();\n\n  AccordionMenu.defaults = {\n    /**\n     * Amount of time to animate the opening of a submenu in ms.\n     * @option\n     * @example 250\n     */\n    slideSpeed: 250,\n    /**\n     * Allow the menu to have multiple open panes.\n     * @option\n     * @example true\n     */\n    multiOpen: true\n  };\n\n  // Window exports\n  Foundation.plugin(AccordionMenu, 'AccordionMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Drilldown module.\n   * @module foundation.drilldown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.nest\n   */\n\n  var Drilldown = function () {\n    /**\n     * Creates a new instance of a drilldown menu.\n     * @class\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Drilldown(element, options) {\n      _classCallCheck(this, Drilldown);\n\n      this.$element = element;\n      this.options = $.extend({}, Drilldown.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'drilldown');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Drilldown');\n      Foundation.Keyboard.register('Drilldown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close',\n        'TAB': 'down',\n        'SHIFT_TAB': 'up'\n      });\n    }\n\n    /**\n     * Initializes the drilldown by creating jQuery collections of elements\n     * @private\n     */\n\n\n    _createClass(Drilldown, [{\n      key: '_init',\n      value: function _init() {\n        this.$submenuAnchors = this.$element.find('li.is-drilldown-submenu-parent').children('a');\n        this.$submenus = this.$submenuAnchors.parent('li').children('[data-submenu]');\n        this.$menuItems = this.$element.find('li').not('.js-drilldown-back').attr('role', 'menuitem').find('a');\n        this.$element.attr('data-mutate', this.$element.attr('data-drilldown') || Foundation.GetYoDigits(6, 'drilldown'));\n\n        this._prepareMenu();\n        this._registerEvents();\n\n        this._keyboardEvents();\n      }\n\n      /**\n       * prepares drilldown menu by setting attributes to links and elements\n       * sets a min height to prevent content jumping\n       * wraps the element if not already wrapped\n       * @private\n       * @function\n       */\n\n    }, {\n      key: '_prepareMenu',\n      value: function _prepareMenu() {\n        var _this = this;\n        // if(!this.options.holdOpen){\n        //   this._menuLinkEvents();\n        // }\n        this.$submenuAnchors.each(function () {\n          var $link = $(this);\n          var $sub = $link.parent();\n          if (_this.options.parentLink) {\n            $link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');\n          }\n          $link.data('savedHref', $link.attr('href')).removeAttr('href').attr('tabindex', 0);\n          $link.children('[data-submenu]').attr({\n            'aria-hidden': true,\n            'tabindex': 0,\n            'role': 'menu'\n          });\n          _this._events($link);\n        });\n        this.$submenus.each(function () {\n          var $menu = $(this),\n              $back = $menu.find('.js-drilldown-back');\n          if (!$back.length) {\n            switch (_this.options.backButtonPosition) {\n              case \"bottom\":\n                $menu.append(_this.options.backButton);\n                break;\n              case \"top\":\n                $menu.prepend(_this.options.backButton);\n                break;\n              default:\n                console.error(\"Unsupported backButtonPosition value '\" + _this.options.backButtonPosition + \"'\");\n            }\n          }\n          _this._back($menu);\n        });\n\n        if (!this.options.autoHeight) {\n          this.$submenus.addClass('drilldown-submenu-cover-previous');\n        }\n\n        if (!this.$element.parent().hasClass('is-drilldown')) {\n          this.$wrapper = $(this.options.wrapper).addClass('is-drilldown');\n          if (this.options.animateHeight) this.$wrapper.addClass('animate-height');\n          this.$wrapper = this.$element.wrap(this.$wrapper).parent().css(this._getMaxDims());\n        }\n      }\n    }, {\n      key: '_resize',\n      value: function _resize() {\n        this.$wrapper.css({ 'max-width': 'none', 'min-height': 'none' });\n        // _getMaxDims has side effects (boo) but calling it should update all other necessary heights & widths\n        this.$wrapper.css(this._getMaxDims());\n      }\n\n      /**\n       * Adds event handlers to elements in the menu.\n       * @function\n       * @private\n       * @param {jQuery} $elem - the current menu item to add handlers to.\n       */\n\n    }, {\n      key: '_events',\n      value: function _events($elem) {\n        var _this = this;\n\n        $elem.off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          if ($(e.target).parentsUntil('ul', 'li').hasClass('is-drilldown-submenu-parent')) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n          }\n\n          // if(e.target !== e.currentTarget.firstElementChild){\n          //   return false;\n          // }\n          _this._show($elem.parent('li'));\n\n          if (_this.options.closeOnClick) {\n            var $body = $('body');\n            $body.off('.zf.drilldown').on('click.zf.drilldown', function (e) {\n              if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n                return;\n              }\n              e.preventDefault();\n              _this._hideAll();\n              $body.off('.zf.drilldown');\n            });\n          }\n        });\n        this.$element.on('mutateme.zf.trigger', this._resize.bind(this));\n      }\n\n      /**\n       * Adds event handlers to the menu element.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_registerEvents',\n      value: function _registerEvents() {\n        if (this.options.scrollTop) {\n          this._bindHandler = this._scrollTop.bind(this);\n          this.$element.on('open.zf.drilldown hide.zf.drilldown closed.zf.drilldown', this._bindHandler);\n        }\n      }\n\n      /**\n       * Scroll to Top of Element or data-scroll-top-element\n       * @function\n       * @fires Drilldown#scrollme\n       */\n\n    }, {\n      key: '_scrollTop',\n      value: function _scrollTop() {\n        var _this = this;\n        var $scrollTopElement = _this.options.scrollTopElement != '' ? $(_this.options.scrollTopElement) : _this.$element,\n            scrollPos = parseInt($scrollTopElement.offset().top + _this.options.scrollTopOffset);\n        $('html, body').stop(true).animate({ scrollTop: scrollPos }, _this.options.animationDuration, _this.options.animationEasing, function () {\n          /**\n            * Fires after the menu has scrolled\n            * @event Drilldown#scrollme\n            */\n          if (this === $('html')[0]) _this.$element.trigger('scrollme.zf.drilldown');\n        });\n      }\n\n      /**\n       * Adds keydown event listener to `li`'s in the menu.\n       * @private\n       */\n\n    }, {\n      key: '_keyboardEvents',\n      value: function _keyboardEvents() {\n        var _this = this;\n\n        this.$menuItems.add(this.$element.find('.js-drilldown-back > a, .is-submenu-parent-item > a')).on('keydown.zf.drilldown', function (e) {\n          var $element = $(this),\n              $elements = $element.parent('li').parent('ul').children('li').children('a'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1));\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              return;\n            }\n          });\n\n          Foundation.Keyboard.handleKey(e, 'Drilldown', {\n            next: function () {\n              if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element.parent('li'));\n                $element.parent('li').one(Foundation.transitionend($element), function () {\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n                });\n                return true;\n              }\n            },\n            previous: function () {\n              _this._hide($element.parent('li').parent('ul'));\n              $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\n                setTimeout(function () {\n                  $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n                }, 1);\n              });\n              return true;\n            },\n            up: function () {\n              $prevElement.focus();\n              return true;\n            },\n            down: function () {\n              $nextElement.focus();\n              return true;\n            },\n            close: function () {\n              _this._back();\n              //_this.$menuItems.first().focus(); // focus to first element\n            },\n            open: function () {\n              if (!$element.is(_this.$menuItems)) {\n                // not menu item means back button\n                _this._hide($element.parent('li').parent('ul'));\n                $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\n                  setTimeout(function () {\n                    $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n                  }, 1);\n                });\n                return true;\n              } else if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element.parent('li'));\n                $element.parent('li').one(Foundation.transitionend($element), function () {\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n                });\n                return true;\n              }\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n              e.stopImmediatePropagation();\n            }\n          });\n        }); // end keyboardAccess\n      }\n\n      /**\n       * Closes all open elements, and returns to root menu.\n       * @function\n       * @fires Drilldown#closed\n       */\n\n    }, {\n      key: '_hideAll',\n      value: function _hideAll() {\n        var $elem = this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');\n        if (this.options.autoHeight) this.$wrapper.css({ height: $elem.parent().closest('ul').data('calcHeight') });\n        $elem.one(Foundation.transitionend($elem), function (e) {\n          $elem.removeClass('is-active is-closing');\n        });\n        /**\n         * Fires when the menu is fully closed.\n         * @event Drilldown#closed\n         */\n        this.$element.trigger('closed.zf.drilldown');\n      }\n\n      /**\n       * Adds event listener for each `back` button, and closes open menus.\n       * @function\n       * @fires Drilldown#back\n       * @param {jQuery} $elem - the current sub-menu to add `back` event.\n       */\n\n    }, {\n      key: '_back',\n      value: function _back($elem) {\n        var _this = this;\n        $elem.off('click.zf.drilldown');\n        $elem.children('.js-drilldown-back').on('click.zf.drilldown', function (e) {\n          e.stopImmediatePropagation();\n          // console.log('mouseup on back');\n          _this._hide($elem);\n\n          // If there is a parent submenu, call show\n          var parentSubMenu = $elem.parent('li').parent('ul').parent('li');\n          if (parentSubMenu.length) {\n            _this._show(parentSubMenu);\n          }\n        });\n      }\n\n      /**\n       * Adds event listener to menu items w/o submenus to close open menus on click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_menuLinkEvents',\n      value: function _menuLinkEvents() {\n        var _this = this;\n        this.$menuItems.not('.is-drilldown-submenu-parent').off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          // e.stopImmediatePropagation();\n          setTimeout(function () {\n            _this._hideAll();\n          }, 0);\n        });\n      }\n\n      /**\n       * Opens a submenu.\n       * @function\n       * @fires Drilldown#open\n       * @param {jQuery} $elem - the current element with a submenu to open, i.e. the `li` tag.\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($elem) {\n        if (this.options.autoHeight) this.$wrapper.css({ height: $elem.children('[data-submenu]').data('calcHeight') });\n        $elem.attr('aria-expanded', true);\n        $elem.children('[data-submenu]').addClass('is-active').attr('aria-hidden', false);\n        /**\n         * Fires when the submenu has opened.\n         * @event Drilldown#open\n         */\n        this.$element.trigger('open.zf.drilldown', [$elem]);\n      }\n    }, {\n      key: '_hide',\n\n\n      /**\n       * Hides a submenu\n       * @function\n       * @fires Drilldown#hide\n       * @param {jQuery} $elem - the current sub-menu to hide, i.e. the `ul` tag.\n       */\n      value: function _hide($elem) {\n        if (this.options.autoHeight) this.$wrapper.css({ height: $elem.parent().closest('ul').data('calcHeight') });\n        var _this = this;\n        $elem.parent('li').attr('aria-expanded', false);\n        $elem.attr('aria-hidden', true).addClass('is-closing');\n        $elem.addClass('is-closing').one(Foundation.transitionend($elem), function () {\n          $elem.removeClass('is-active is-closing');\n          $elem.blur();\n        });\n        /**\n         * Fires when the submenu has closed.\n         * @event Drilldown#hide\n         */\n        $elem.trigger('hide.zf.drilldown', [$elem]);\n      }\n\n      /**\n       * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\n       * Prevents content jumping.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_getMaxDims',\n      value: function _getMaxDims() {\n        var maxHeight = 0,\n            result = {},\n            _this = this;\n        this.$submenus.add(this.$element).each(function () {\n          var numOfElems = $(this).children('li').length;\n          var height = Foundation.Box.GetDimensions(this).height;\n          maxHeight = height > maxHeight ? height : maxHeight;\n          if (_this.options.autoHeight) {\n            $(this).data('calcHeight', height);\n            if (!$(this).hasClass('is-drilldown-submenu')) result['height'] = height;\n          }\n        });\n\n        if (!this.options.autoHeight) result['min-height'] = maxHeight + 'px';\n\n        result['max-width'] = this.$element[0].getBoundingClientRect().width + 'px';\n\n        return result;\n      }\n\n      /**\n       * Destroys the Drilldown Menu\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        if (this.options.scrollTop) this.$element.off('.zf.drilldown', this._bindHandler);\n        this._hideAll();\n        this.$element.off('mutateme.zf.trigger');\n        Foundation.Nest.Burn(this.$element, 'drilldown');\n        this.$element.unwrap().find('.js-drilldown-back, .is-submenu-parent-item').remove().end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu').end().find('[data-submenu]').removeAttr('aria-hidden tabindex role');\n        this.$submenuAnchors.each(function () {\n          $(this).off('.zf.drilldown');\n        });\n\n        this.$submenus.removeClass('drilldown-submenu-cover-previous');\n\n        this.$element.find('a').each(function () {\n          var $link = $(this);\n          $link.removeAttr('tabindex');\n          if ($link.data('savedHref')) {\n            $link.attr('href', $link.data('savedHref')).removeData('savedHref');\n          } else {\n            return;\n          }\n        });\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Drilldown;\n  }();\n\n  Drilldown.defaults = {\n    /**\n     * Markup used for JS generated back button. Prepended  or appended (see backButtonPosition) to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\n     * @option\n     * @example '<\\li><\\a>Back<\\/a><\\/li>'\n     */\n    backButton: '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>',\n    /**\n     * Position the back button either at the top or bottom of drilldown submenus.\n     * @option\n     * @example bottom\n     */\n    backButtonPosition: 'top',\n    /**\n     * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\n     * @option\n     * @example '<\\div class=\"is-drilldown\"><\\/div>'\n     */\n    wrapper: '<div></div>',\n    /**\n     * Adds the parent link to the submenu.\n     * @option\n     * @example false\n     */\n    parentLink: false,\n    /**\n     * Allow the menu to return to root list on body click.\n     * @option\n     * @example false\n     */\n    closeOnClick: false,\n    /**\n     * Allow the menu to auto adjust height.\n     * @option\n     * @example false\n     */\n    autoHeight: false,\n    /**\n     * Animate the auto adjust height.\n     * @option\n     * @example false\n     */\n    animateHeight: false,\n    /**\n     * Scroll to the top of the menu after opening a submenu or navigating back using the menu back button\n     * @option\n     * @example false\n     */\n    scrollTop: false,\n    /**\n     * String jquery selector (for example 'body') of element to take offset().top from, if empty string the drilldown menu offset().top is taken\n     * @option\n     * @example ''\n     */\n    scrollTopElement: '',\n    /**\n     * ScrollTop offset\n     * @option\n     * @example 100\n     */\n    scrollTopOffset: 0,\n    /**\n     * Scroll animation duration\n     * @option\n     * @example 500\n     */\n    animationDuration: 500,\n    /**\n     * Scroll animation easing\n     * @option\n     * @example 'swing'\n     */\n    animationEasing: 'swing'\n    // holdOpen: false\n  };\n\n  // Window exports\n  Foundation.plugin(Drilldown, 'Drilldown');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Dropdown module.\n   * @module foundation.dropdown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   */\n\n  var Dropdown = function () {\n    /**\n     * Creates a new instance of a dropdown.\n     * @class\n     * @param {jQuery} element - jQuery object to make into a dropdown.\n     *        Object should be of the dropdown panel, rather than its anchor.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Dropdown(element, options) {\n      _classCallCheck(this, Dropdown);\n\n      this.$element = element;\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Dropdown');\n      Foundation.Keyboard.register('Dropdown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Dropdown, [{\n      key: '_init',\n      value: function _init() {\n        var $id = this.$element.attr('id');\n\n        this.$anchor = $('[data-toggle=\"' + $id + '\"]').length ? $('[data-toggle=\"' + $id + '\"]') : $('[data-open=\"' + $id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': $id,\n          'data-is-focus': false,\n          'data-yeti-box': $id,\n          'aria-haspopup': true,\n          'aria-expanded': false\n\n        });\n\n        if (this.options.parentClass) {\n          this.$parent = this.$element.parents('.' + this.options.parentClass);\n        } else {\n          this.$parent = null;\n        }\n        this.options.positionClass = this.getPositionClass();\n        this.counter = 4;\n        this.usedPositions = [];\n        this.$element.attr({\n          'aria-hidden': 'true',\n          'data-yeti-box': $id,\n          'data-resize': $id,\n          'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n        });\n        this._events();\n      }\n\n      /**\n       * Helper function to determine current orientation of dropdown pane.\n       * @function\n       * @returns {String} position - string value of a position class.\n       */\n\n    }, {\n      key: 'getPositionClass',\n      value: function getPositionClass() {\n        var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\n        var horizontalPosition = /float-(\\S+)/.exec(this.$anchor[0].className);\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\n        var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\n\n        return position;\n      }\n\n      /**\n       * Adjusts the dropdown panes orientation by adding/removing positioning classes.\n       * @function\n       * @private\n       * @param {String} position - position class to remove.\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.$element.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.$element.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.$element.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.$element.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.$element.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\n       * Sets the position and orientation of the dropdown pane, checks for collisions.\n       * Recursively calls itself if a collision is detected, with a new position class.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        if (this.$anchor.attr('aria-expanded') === 'false') {\n          return false;\n        }\n        var position = this.getPositionClass(),\n            $eleDims = Foundation.Box.GetDimensions(this.$element),\n            $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n            _this = this,\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset;\n\n        if ($eleDims.width >= $eleDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.$element, this.$parent)) {\n          var newWidth = $eleDims.windowDims.width,\n              parentHOffset = 0;\n          if (this.$parent) {\n            var $parentDims = Foundation.Box.GetDimensions(this.$parent),\n                parentHOffset = $parentDims.offset.left;\n            if ($parentDims.width < newWidth) {\n              newWidth = $parentDims.width;\n            }\n          }\n\n          this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset + parentHOffset, true)).css({\n            'width': newWidth - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          this.classChanged = true;\n          return false;\n        }\n\n        this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.$element, this.$parent, true) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\n       * Adds event listeners to the element utilizing the triggers utility library.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': this._setPosition.bind(this)\n        });\n\n        if (this.options.hover) {\n          this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n            var bodyData = $('body').data();\n            if (typeof bodyData.whatinput === 'undefined' || bodyData.whatinput === 'mouse') {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.open();\n                _this.$anchor.data('hover', true);\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.close();\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n          if (this.options.hoverPane) {\n            this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n          }\n        }\n        this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\n\n          var $target = $(this),\n              visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n          Foundation.Keyboard.handleKey(e, 'Dropdown', {\n            open: function () {\n              if ($target.is(_this.$anchor)) {\n                _this.open();\n                _this.$element.attr('tabindex', -1).focus();\n                e.preventDefault();\n              }\n            },\n            close: function () {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          });\n        });\n      }\n\n      /**\n       * Adds an event handler to the body to close any dropdowns on a click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body).not(this.$element),\n            _this = this;\n        $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\n          if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n            return;\n          }\n          if (_this.$element.find(e.target).length) {\n            return;\n          }\n          _this.close();\n          $body.off('click.zf.dropdown');\n        });\n      }\n\n      /**\n       * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n       * @function\n       * @fires Dropdown#closeme\n       * @fires Dropdown#show\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        // var _this = this;\n        /**\n         * Fires to close other open dropdowns\n         * @event Dropdown#closeme\n         */\n        this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n        this.$anchor.addClass('hover').attr({ 'aria-expanded': true });\n        // this.$element/*.show()*/;\n        this._setPosition();\n        this.$element.addClass('is-open').attr({ 'aria-hidden': false });\n\n        if (this.options.autoFocus) {\n          var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n          if ($focusable.length) {\n            $focusable.eq(0).focus();\n          }\n        }\n\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n\n        if (this.options.trapFocus) {\n          Foundation.Keyboard.trapFocus(this.$element);\n        }\n\n        /**\n         * Fires once the dropdown is visible.\n         * @event Dropdown#show\n         */\n        this.$element.trigger('show.zf.dropdown', [this.$element]);\n      }\n\n      /**\n       * Closes the open dropdown pane.\n       * @function\n       * @fires Dropdown#hide\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.$element.hasClass('is-open')) {\n          return false;\n        }\n        this.$element.removeClass('is-open').attr({ 'aria-hidden': true });\n\n        this.$anchor.removeClass('hover').attr('aria-expanded', false);\n\n        if (this.classChanged) {\n          var curPositionClass = this.getPositionClass();\n          if (curPositionClass) {\n            this.$element.removeClass(curPositionClass);\n          }\n          this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({ height: '', width: '' });\n          this.classChanged = false;\n          this.counter = 4;\n          this.usedPositions.length = 0;\n        }\n        this.$element.trigger('hide.zf.dropdown', [this.$element]);\n\n        if (this.options.trapFocus) {\n          Foundation.Keyboard.releaseFocus(this.$element);\n        }\n      }\n\n      /**\n       * Toggles the dropdown pane's visibility.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.$element.hasClass('is-open')) {\n          if (this.$anchor.data('hover')) return;\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n\n      /**\n       * Destroys the dropdown.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger').hide();\n        this.$anchor.off('.zf.dropdown');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Dropdown;\n  }();\n\n  Dropdown.defaults = {\n    /**\n     * Class that designates bounding container of Dropdown (Default: window)\n     * @option\n     * @example 'dropdown-parent'\n     */\n    parentClass: null,\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 250\n     */\n    hoverDelay: 250,\n    /**\n     * Allow submenus to open on hover events\n     * @option\n     * @example false\n     */\n    hover: false,\n    /**\n     * Don't close dropdown when hovering over dropdown pane\n     * @option\n     * @example true\n     */\n    hoverPane: false,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    vOffset: 1,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    hOffset: 1,\n    /**\n     * Class applied to adjust open position. JS will test and fill this in.\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n     * @option\n     * @example false\n     */\n    trapFocus: false,\n    /**\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n     * @option\n     * @example true\n     */\n    autoFocus: false,\n    /**\n     * Allows a click on the body to close the dropdown.\n     * @option\n     * @example false\n     */\n    closeOnClick: false\n  };\n\n  // Window exports\n  Foundation.plugin(Dropdown, 'Dropdown');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * DropdownMenu module.\n   * @module foundation.dropdown-menu\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.nest\n   */\n\n  var DropdownMenu = function () {\n    /**\n     * Creates a new instance of DropdownMenu.\n     * @class\n     * @fires DropdownMenu#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function DropdownMenu(element, options) {\n      _classCallCheck(this, DropdownMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'dropdown');\n      this._init();\n\n      Foundation.registerPlugin(this, 'DropdownMenu');\n      Foundation.Keyboard.register('DropdownMenu', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\n     * Initializes the plugin, and calls _prepareMenu\n     * @private\n     * @function\n     */\n\n\n    _createClass(DropdownMenu, [{\n      key: '_init',\n      value: function _init() {\n        var subs = this.$element.find('li.is-dropdown-submenu-parent');\n        this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n        this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n        this.$tabs = this.$element.children('[role=\"menuitem\"]');\n        this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n        if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl() || this.$element.parents('.top-bar-right').is('*')) {\n          this.options.alignment = 'right';\n          subs.addClass('opens-left');\n        } else {\n          subs.addClass('opens-right');\n        }\n        this.changed = false;\n        this._events();\n      }\n    }, {\n      key: '_isVertical',\n      value: function _isVertical() {\n        return this.$tabs.css('display') === 'block';\n      }\n\n      /**\n       * Adds event listeners to elements within the menu\n       * @private\n       * @function\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this,\n            hasTouch = 'ontouchstart' in window || typeof window.ontouchstart !== 'undefined',\n            parClass = 'is-dropdown-submenu-parent';\n\n        // used for onClick and in the keyboard handlers\n        var handleClickFn = function (e) {\n          var $elem = $(e.target).parentsUntil('ul', '.' + parClass),\n              hasSub = $elem.hasClass(parClass),\n              hasClicked = $elem.attr('data-is-click') === 'true',\n              $sub = $elem.children('.is-dropdown-submenu');\n\n          if (hasSub) {\n            if (hasClicked) {\n              if (!_this.options.closeOnClick || !_this.options.clickOpen && !hasTouch || _this.options.forceFollow && hasTouch) {\n                return;\n              } else {\n                e.stopImmediatePropagation();\n                e.preventDefault();\n                _this._hide($elem);\n              }\n            } else {\n              e.preventDefault();\n              e.stopImmediatePropagation();\n              _this._show($sub);\n              $elem.add($elem.parentsUntil(_this.$element, '.' + parClass)).attr('data-is-click', true);\n            }\n          }\n        };\n\n        if (this.options.clickOpen || hasTouch) {\n          this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', handleClickFn);\n        }\n\n        // Handle Leaf element Clicks\n        if (_this.options.closeOnClickInside) {\n          this.$menuItems.on('click.zf.dropdownmenu touchend.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n            if (!hasSub) {\n              _this._hide();\n            }\n          });\n        }\n\n        if (!this.options.disableHover) {\n          this.$menuItems.on('mouseenter.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n\n            if (hasSub) {\n              clearTimeout($elem.data('_delay'));\n              $elem.data('_delay', setTimeout(function () {\n                _this._show($elem.children('.is-dropdown-submenu'));\n              }, _this.options.hoverDelay));\n            }\n          }).on('mouseleave.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n            if (hasSub && _this.options.autoclose) {\n              if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) {\n                return false;\n              }\n\n              clearTimeout($elem.data('_delay'));\n              $elem.data('_delay', setTimeout(function () {\n                _this._hide($elem);\n              }, _this.options.closingTime));\n            }\n          });\n        }\n        this.$menuItems.on('keydown.zf.dropdownmenu', function (e) {\n          var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n              isTab = _this.$tabs.index($element) > -1,\n              $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(i - 1);\n              $nextElement = $elements.eq(i + 1);\n              return;\n            }\n          });\n\n          var nextSibling = function () {\n            if (!$element.is(':last-child')) {\n              $nextElement.children('a:first').focus();\n              e.preventDefault();\n            }\n          },\n              prevSibling = function () {\n            $prevElement.children('a:first').focus();\n            e.preventDefault();\n          },\n              openSub = function () {\n            var $sub = $element.children('ul.is-dropdown-submenu');\n            if ($sub.length) {\n              _this._show($sub);\n              $element.find('li > a:first').focus();\n              e.preventDefault();\n            } else {\n              return;\n            }\n          },\n              closeSub = function () {\n            //if ($element.is(':first-child')) {\n            var close = $element.parent('ul').parent('li');\n            close.children('a:first').focus();\n            _this._hide(close);\n            e.preventDefault();\n            //}\n          };\n          var functions = {\n            open: openSub,\n            close: function () {\n              _this._hide(_this.$element);\n              _this.$menuItems.find('a:first').focus(); // focus to first element\n              e.preventDefault();\n            },\n            handled: function () {\n              e.stopImmediatePropagation();\n            }\n          };\n\n          if (isTab) {\n            if (_this._isVertical()) {\n              // vertical menu\n              if (Foundation.rtl()) {\n                // right aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: closeSub,\n                  previous: openSub\n                });\n              } else {\n                // left aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: openSub,\n                  previous: closeSub\n                });\n              }\n            } else {\n              // horizontal menu\n              if (Foundation.rtl()) {\n                // right aligned\n                $.extend(functions, {\n                  next: prevSibling,\n                  previous: nextSibling,\n                  down: openSub,\n                  up: closeSub\n                });\n              } else {\n                // left aligned\n                $.extend(functions, {\n                  next: nextSibling,\n                  previous: prevSibling,\n                  down: openSub,\n                  up: closeSub\n                });\n              }\n            }\n          } else {\n            // not tabs -> one sub\n            if (Foundation.rtl()) {\n              // right aligned\n              $.extend(functions, {\n                next: closeSub,\n                previous: openSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            } else {\n              // left aligned\n              $.extend(functions, {\n                next: openSub,\n                previous: closeSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            }\n          }\n          Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n        });\n      }\n\n      /**\n       * Adds an event handler to the body to close any dropdowns on a click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body),\n            _this = this;\n        $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu').on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function (e) {\n          var $link = _this.$element.find(e.target);\n          if ($link.length) {\n            return;\n          }\n\n          _this._hide();\n          $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n        });\n      }\n\n      /**\n       * Opens a dropdown pane, and checks for collisions first.\n       * @param {jQuery} $sub - ul element that is a submenu to show\n       * @function\n       * @private\n       * @fires DropdownMenu#show\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($sub) {\n        var idx = this.$tabs.index(this.$tabs.filter(function (i, el) {\n          return $(el).find($sub).length > 0;\n        }));\n        var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n        this._hide($sibs, idx);\n        $sub.css('visibility', 'hidden').addClass('js-dropdown-active').parent('li.is-dropdown-submenu-parent').addClass('is-active');\n        var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n        if (!clear) {\n          var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n              $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n          $parentLi.removeClass('opens' + oldClass).addClass('opens-' + this.options.alignment);\n          clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n          if (!clear) {\n            $parentLi.removeClass('opens-' + this.options.alignment).addClass('opens-inner');\n          }\n          this.changed = true;\n        }\n        $sub.css('visibility', '');\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n        /**\n         * Fires when the new dropdown pane is visible.\n         * @event DropdownMenu#show\n         */\n        this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n      }\n\n      /**\n       * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\n       * @function\n       * @param {jQuery} $elem - element with a submenu to hide\n       * @param {Number} idx - index of the $tabs collection to hide\n       * @private\n       */\n\n    }, {\n      key: '_hide',\n      value: function _hide($elem, idx) {\n        var $toClose;\n        if ($elem && $elem.length) {\n          $toClose = $elem;\n        } else if (idx !== undefined) {\n          $toClose = this.$tabs.not(function (i, el) {\n            return i === idx;\n          });\n        } else {\n          $toClose = this.$element;\n        }\n        var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n        if (somethingToClose) {\n          $toClose.find('li.is-active').add($toClose).attr({\n            'data-is-click': false\n          }).removeClass('is-active');\n\n          $toClose.find('ul.js-dropdown-active').removeClass('js-dropdown-active');\n\n          if (this.changed || $toClose.find('opens-inner').length) {\n            var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n            $toClose.find('li.is-dropdown-submenu-parent').add($toClose).removeClass('opens-inner opens-' + this.options.alignment).addClass('opens-' + oldClass);\n            this.changed = false;\n          }\n          /**\n           * Fires when the open menus are closed.\n           * @event DropdownMenu#hide\n           */\n          this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n        }\n      }\n\n      /**\n       * Destroys the plugin.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click').removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n        $(document.body).off('.zf.dropdownmenu');\n        Foundation.Nest.Burn(this.$element, 'dropdown');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return DropdownMenu;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  DropdownMenu.defaults = {\n    /**\n     * Disallows hover events from opening submenus\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\n     * @option\n     * @example true\n     */\n    autoclose: true,\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 50\n     */\n    hoverDelay: 50,\n    /**\n     * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\n     * @option\n     * @example true\n     */\n    clickOpen: false,\n    /**\n     * Amount of time to delay closing a submenu on a mouseleave event.\n     * @option\n     * @example 500\n     */\n\n    closingTime: 500,\n    /**\n     * Position of the menu relative to what direction the submenus should open. Handled by JS.\n     * @option\n     * @example 'left'\n     */\n    alignment: 'left',\n    /**\n     * Allow clicks on the body to close any open submenus.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Allow clicks on leaf anchor links to close any open submenus.\n     * @option\n     * @example true\n     */\n    closeOnClickInside: true,\n    /**\n     * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\n     * @option\n     * @example 'vertical'\n     */\n    verticalClass: 'vertical',\n    /**\n     * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\n     * @option\n     * @example 'align-right'\n     */\n    rightClass: 'align-right',\n    /**\n     * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\n     * @option\n     * @example false\n     */\n    forceFollow: true\n  };\n\n  // Window exports\n  Foundation.plugin(DropdownMenu, 'DropdownMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Equalizer module.\n   * @module foundation.equalizer\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.timerAndImageLoader if equalizer contains images\n   */\n\n  var Equalizer = function () {\n    /**\n     * Creates a new instance of Equalizer.\n     * @class\n     * @fires Equalizer#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Equalizer(element, options) {\n      _classCallCheck(this, Equalizer);\n\n      this.$element = element;\n      this.options = $.extend({}, Equalizer.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Equalizer');\n    }\n\n    /**\n     * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\n     * @private\n     */\n\n\n    _createClass(Equalizer, [{\n      key: '_init',\n      value: function _init() {\n        var eqId = this.$element.attr('data-equalizer') || '';\n        var $watched = this.$element.find('[data-equalizer-watch=\"' + eqId + '\"]');\n\n        this.$watched = $watched.length ? $watched : this.$element.find('[data-equalizer-watch]');\n        this.$element.attr('data-resize', eqId || Foundation.GetYoDigits(6, 'eq'));\n        this.$element.attr('data-mutate', eqId || Foundation.GetYoDigits(6, 'eq'));\n\n        this.hasNested = this.$element.find('[data-equalizer]').length > 0;\n        this.isNested = this.$element.parentsUntil(document.body, '[data-equalizer]').length > 0;\n        this.isOn = false;\n        this._bindHandler = {\n          onResizeMeBound: this._onResizeMe.bind(this),\n          onPostEqualizedBound: this._onPostEqualized.bind(this)\n        };\n\n        var imgs = this.$element.find('img');\n        var tooSmall;\n        if (this.options.equalizeOn) {\n          tooSmall = this._checkMQ();\n          $(window).on('changed.zf.mediaquery', this._checkMQ.bind(this));\n        } else {\n          this._events();\n        }\n        if (tooSmall !== undefined && tooSmall === false || tooSmall === undefined) {\n          if (imgs.length) {\n            Foundation.onImagesLoaded(imgs, this._reflow.bind(this));\n          } else {\n            this._reflow();\n          }\n        }\n      }\n\n      /**\n       * Removes event listeners if the breakpoint is too small.\n       * @private\n       */\n\n    }, {\n      key: '_pauseEvents',\n      value: function _pauseEvents() {\n        this.isOn = false;\n        this.$element.off({\n          '.zf.equalizer': this._bindHandler.onPostEqualizedBound,\n          'resizeme.zf.trigger': this._bindHandler.onResizeMeBound,\n          'mutateme.zf.trigger': this._bindHandler.onResizeMeBound\n        });\n      }\n\n      /**\n       * function to handle $elements resizeme.zf.trigger, with bound this on _bindHandler.onResizeMeBound\n       * @private\n       */\n\n    }, {\n      key: '_onResizeMe',\n      value: function _onResizeMe(e) {\n        this._reflow();\n      }\n\n      /**\n       * function to handle $elements postequalized.zf.equalizer, with bound this on _bindHandler.onPostEqualizedBound\n       * @private\n       */\n\n    }, {\n      key: '_onPostEqualized',\n      value: function _onPostEqualized(e) {\n        if (e.target !== this.$element[0]) {\n          this._reflow();\n        }\n      }\n\n      /**\n       * Initializes events for Equalizer.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this._pauseEvents();\n        if (this.hasNested) {\n          this.$element.on('postequalized.zf.equalizer', this._bindHandler.onPostEqualizedBound);\n        } else {\n          this.$element.on('resizeme.zf.trigger', this._bindHandler.onResizeMeBound);\n          this.$element.on('mutateme.zf.trigger', this._bindHandler.onResizeMeBound);\n        }\n        this.isOn = true;\n      }\n\n      /**\n       * Checks the current breakpoint to the minimum required size.\n       * @private\n       */\n\n    }, {\n      key: '_checkMQ',\n      value: function _checkMQ() {\n        var tooSmall = !Foundation.MediaQuery.is(this.options.equalizeOn);\n        if (tooSmall) {\n          if (this.isOn) {\n            this._pauseEvents();\n            this.$watched.css('height', 'auto');\n          }\n        } else {\n          if (!this.isOn) {\n            this._events();\n          }\n        }\n        return tooSmall;\n      }\n\n      /**\n       * A noop version for the plugin\n       * @private\n       */\n\n    }, {\n      key: '_killswitch',\n      value: function _killswitch() {\n        return;\n      }\n\n      /**\n       * Calls necessary functions to update Equalizer upon DOM change\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        if (!this.options.equalizeOnStack) {\n          if (this._isStacked()) {\n            this.$watched.css('height', 'auto');\n            return false;\n          }\n        }\n        if (this.options.equalizeByRow) {\n          this.getHeightsByRow(this.applyHeightByRow.bind(this));\n        } else {\n          this.getHeights(this.applyHeight.bind(this));\n        }\n      }\n\n      /**\n       * Manually determines if the first 2 elements are *NOT* stacked.\n       * @private\n       */\n\n    }, {\n      key: '_isStacked',\n      value: function _isStacked() {\n        if (!this.$watched[0] || !this.$watched[1]) {\n          return true;\n        }\n        return this.$watched[0].getBoundingClientRect().top !== this.$watched[1].getBoundingClientRect().top;\n      }\n\n      /**\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n       * @param {Function} cb - A non-optional callback to return the heights array to.\n       * @returns {Array} heights - An array of heights of children within Equalizer container\n       */\n\n    }, {\n      key: 'getHeights',\n      value: function getHeights(cb) {\n        var heights = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          heights.push(this.$watched[i].offsetHeight);\n        }\n        cb(heights);\n      }\n\n      /**\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n       * @param {Function} cb - A non-optional callback to return the heights array to.\n       * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n       */\n\n    }, {\n      key: 'getHeightsByRow',\n      value: function getHeightsByRow(cb) {\n        var lastElTopOffset = this.$watched.length ? this.$watched.first().offset().top : 0,\n            groups = [],\n            group = 0;\n        //group by Row\n        groups[group] = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          //maybe could use this.$watched[i].offsetTop\n          var elOffsetTop = $(this.$watched[i]).offset().top;\n          if (elOffsetTop != lastElTopOffset) {\n            group++;\n            groups[group] = [];\n            lastElTopOffset = elOffsetTop;\n          }\n          groups[group].push([this.$watched[i], this.$watched[i].offsetHeight]);\n        }\n\n        for (var j = 0, ln = groups.length; j < ln; j++) {\n          var heights = $(groups[j]).map(function () {\n            return this[1];\n          }).get();\n          var max = Math.max.apply(null, heights);\n          groups[j].push(max);\n        }\n        cb(groups);\n      }\n\n      /**\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest\n       * @param {array} heights - An array of heights of children within Equalizer container\n       * @fires Equalizer#preequalized\n       * @fires Equalizer#postequalized\n       */\n\n    }, {\n      key: 'applyHeight',\n      value: function applyHeight(heights) {\n        var max = Math.max.apply(null, heights);\n        /**\n         * Fires before the heights are applied\n         * @event Equalizer#preequalized\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n\n        this.$watched.css('height', max);\n\n        /**\n         * Fires when the heights have been applied\n         * @event Equalizer#postequalized\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\n       * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n       * @fires Equalizer#preequalized\n       * @fires Equalizer#preequalizedrow\n       * @fires Equalizer#postequalizedrow\n       * @fires Equalizer#postequalized\n       */\n\n    }, {\n      key: 'applyHeightByRow',\n      value: function applyHeightByRow(groups) {\n        /**\n         * Fires before the heights are applied\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n        for (var i = 0, len = groups.length; i < len; i++) {\n          var groupsILength = groups[i].length,\n              max = groups[i][groupsILength - 1];\n          if (groupsILength <= 2) {\n            $(groups[i][0][0]).css({ 'height': 'auto' });\n            continue;\n          }\n          /**\n            * Fires before the heights per row are applied\n            * @event Equalizer#preequalizedrow\n            */\n          this.$element.trigger('preequalizedrow.zf.equalizer');\n          for (var j = 0, lenJ = groupsILength - 1; j < lenJ; j++) {\n            $(groups[i][j][0]).css({ 'height': max });\n          }\n          /**\n            * Fires when the heights per row have been applied\n            * @event Equalizer#postequalizedrow\n            */\n          this.$element.trigger('postequalizedrow.zf.equalizer');\n        }\n        /**\n         * Fires when the heights have been applied\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\n       * Destroys an instance of Equalizer.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._pauseEvents();\n        this.$watched.css('height', 'auto');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Equalizer;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Equalizer.defaults = {\n    /**\n     * Enable height equalization when stacked on smaller screens.\n     * @option\n     * @example true\n     */\n    equalizeOnStack: false,\n    /**\n     * Enable height equalization row by row.\n     * @option\n     * @example false\n     */\n    equalizeByRow: false,\n    /**\n     * String representing the minimum breakpoint size the plugin should equalize heights on.\n     * @option\n     * @example 'medium'\n     */\n    equalizeOn: ''\n  };\n\n  // Window exports\n  Foundation.plugin(Equalizer, 'Equalizer');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Interchange module.\n   * @module foundation.interchange\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.timerAndImageLoader\n   */\n\n  var Interchange = function () {\n    /**\n     * Creates a new instance of Interchange.\n     * @class\n     * @fires Interchange#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Interchange(element, options) {\n      _classCallCheck(this, Interchange);\n\n      this.$element = element;\n      this.options = $.extend({}, Interchange.defaults, options);\n      this.rules = [];\n      this.currentPath = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Interchange');\n    }\n\n    /**\n     * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Interchange, [{\n      key: '_init',\n      value: function _init() {\n        this._addBreakpoints();\n        this._generateRules();\n        this._reflow();\n      }\n\n      /**\n       * Initializes events for Interchange.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        $(window).on('resize.zf.interchange', Foundation.util.throttle(function () {\n          _this2._reflow();\n        }, 50));\n      }\n\n      /**\n       * Calls necessary functions to update Interchange upon DOM change\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        var match;\n\n        // Iterate through each rule, but only save the last match\n        for (var i in this.rules) {\n          if (this.rules.hasOwnProperty(i)) {\n            var rule = this.rules[i];\n            if (window.matchMedia(rule.query).matches) {\n              match = rule;\n            }\n          }\n        }\n\n        if (match) {\n          this.replace(match.path);\n        }\n      }\n\n      /**\n       * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBreakpoints',\n      value: function _addBreakpoints() {\n        for (var i in Foundation.MediaQuery.queries) {\n          if (Foundation.MediaQuery.queries.hasOwnProperty(i)) {\n            var query = Foundation.MediaQuery.queries[i];\n            Interchange.SPECIAL_QUERIES[query.name] = query.value;\n          }\n        }\n      }\n\n      /**\n       * Checks the Interchange element for the provided media query + content pairings\n       * @function\n       * @private\n       * @param {Object} element - jQuery object that is an Interchange instance\n       * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\n       */\n\n    }, {\n      key: '_generateRules',\n      value: function _generateRules(element) {\n        var rulesList = [];\n        var rules;\n\n        if (this.options.rules) {\n          rules = this.options.rules;\n        } else {\n          rules = this.$element.data('interchange').match(/\\[.*?\\]/g);\n        }\n\n        for (var i in rules) {\n          if (rules.hasOwnProperty(i)) {\n            var rule = rules[i].slice(1, -1).split(', ');\n            var path = rule.slice(0, -1).join('');\n            var query = rule[rule.length - 1];\n\n            if (Interchange.SPECIAL_QUERIES[query]) {\n              query = Interchange.SPECIAL_QUERIES[query];\n            }\n\n            rulesList.push({\n              path: path,\n              query: query\n            });\n          }\n        }\n\n        this.rules = rulesList;\n      }\n\n      /**\n       * Update the `src` property of an image, or change the HTML of a container, to the specified path.\n       * @function\n       * @param {String} path - Path to the image or HTML partial.\n       * @fires Interchange#replaced\n       */\n\n    }, {\n      key: 'replace',\n      value: function replace(path) {\n        if (this.currentPath === path) return;\n\n        var _this = this,\n            trigger = 'replaced.zf.interchange';\n\n        // Replacing images\n        if (this.$element[0].nodeName === 'IMG') {\n          this.$element.attr('src', path).on('load', function () {\n            _this.currentPath = path;\n          }).trigger(trigger);\n        }\n        // Replacing background images\n        else if (path.match(/\\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)) {\n            this.$element.css({ 'background-image': 'url(' + path + ')' }).trigger(trigger);\n          }\n          // Replacing HTML\n          else {\n              $.get(path, function (response) {\n                _this.$element.html(response).trigger(trigger);\n                $(response).foundation();\n                _this.currentPath = path;\n              });\n            }\n\n        /**\n         * Fires when content in an Interchange element is done being loaded.\n         * @event Interchange#replaced\n         */\n        // this.$element.trigger('replaced.zf.interchange');\n      }\n\n      /**\n       * Destroys an instance of interchange.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        //TODO this.\n      }\n    }]);\n\n    return Interchange;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Interchange.defaults = {\n    /**\n     * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\n     * @option\n     */\n    rules: null\n  };\n\n  Interchange.SPECIAL_QUERIES = {\n    'landscape': 'screen and (orientation: landscape)',\n    'portrait': 'screen and (orientation: portrait)',\n    'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\n  };\n\n  // Window exports\n  Foundation.plugin(Interchange, 'Interchange');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Magellan module.\n   * @module foundation.magellan\n   */\n\n  var Magellan = function () {\n    /**\n     * Creates a new instance of Magellan.\n     * @class\n     * @fires Magellan#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Magellan(element, options) {\n      _classCallCheck(this, Magellan);\n\n      this.$element = element;\n      this.options = $.extend({}, Magellan.defaults, this.$element.data(), options);\n\n      this._init();\n      this.calcPoints();\n\n      Foundation.registerPlugin(this, 'Magellan');\n    }\n\n    /**\n     * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\n     * @private\n     */\n\n\n    _createClass(Magellan, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\n        var _this = this;\n        this.$targets = $('[data-magellan-target]');\n        this.$links = this.$element.find('a');\n        this.$element.attr({\n          'data-resize': id,\n          'data-scroll': id,\n          'id': id\n        });\n        this.$active = $();\n        this.scrollPos = parseInt(window.pageYOffset, 10);\n\n        this._events();\n      }\n\n      /**\n       * Calculates an array of pixel values that are the demarcation lines between locations on the page.\n       * Can be invoked if new elements are added or the size of a location changes.\n       * @function\n       */\n\n    }, {\n      key: 'calcPoints',\n      value: function calcPoints() {\n        var _this = this,\n            body = document.body,\n            html = document.documentElement;\n\n        this.points = [];\n        this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\n        this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\n\n        this.$targets.each(function () {\n          var $tar = $(this),\n              pt = Math.round($tar.offset().top - _this.options.threshold);\n          $tar.targetPoint = pt;\n          _this.points.push(pt);\n        });\n      }\n\n      /**\n       * Initializes events for Magellan.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this,\n            $body = $('html, body'),\n            opts = {\n          duration: _this.options.animationDuration,\n          easing: _this.options.animationEasing\n        };\n        $(window).one('load', function () {\n          if (_this.options.deepLinking) {\n            if (location.hash) {\n              _this.scrollToLoc(location.hash);\n            }\n          }\n          _this.calcPoints();\n          _this._updateActive();\n        });\n\n        this.$element.on({\n          'resizeme.zf.trigger': this.reflow.bind(this),\n          'scrollme.zf.trigger': this._updateActive.bind(this)\n        }).on('click.zf.magellan', 'a[href^=\"#\"]', function (e) {\n          e.preventDefault();\n          var arrival = this.getAttribute('href');\n          _this.scrollToLoc(arrival);\n        });\n        $(window).on('popstate', function (e) {\n          if (_this.options.deepLinking) {\n            _this.scrollToLoc(window.location.hash);\n          }\n        });\n      }\n\n      /**\n       * Function to scroll to a given location on the page.\n       * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\n       * @function\n       */\n\n    }, {\n      key: 'scrollToLoc',\n      value: function scrollToLoc(loc) {\n        // Do nothing if target does not exist to prevent errors\n        if (!$(loc).length) {\n          return false;\n        }\n        this._inTransition = true;\n        var _this = this,\n            scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\n\n        $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing, function () {\n          _this._inTransition = false;_this._updateActive();\n        });\n      }\n\n      /**\n       * Calls necessary functions to update Magellan upon DOM change\n       * @function\n       */\n\n    }, {\n      key: 'reflow',\n      value: function reflow() {\n        this.calcPoints();\n        this._updateActive();\n      }\n\n      /**\n       * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\n       * @private\n       * @function\n       * @fires Magellan#update\n       */\n\n    }, {\n      key: '_updateActive',\n      value: function _updateActive() /*evt, elem, scrollPos*/{\n        if (this._inTransition) {\n          return;\n        }\n        var winPos = /*scrollPos ||*/parseInt(window.pageYOffset, 10),\n            curIdx;\n\n        if (winPos + this.winHeight === this.docHeight) {\n          curIdx = this.points.length - 1;\n        } else if (winPos < this.points[0]) {\n          curIdx = undefined;\n        } else {\n          var isDown = this.scrollPos < winPos,\n              _this = this,\n              curVisible = this.points.filter(function (p, i) {\n            return isDown ? p - _this.options.barOffset <= winPos : p - _this.options.barOffset - _this.options.threshold <= winPos;\n          });\n          curIdx = curVisible.length ? curVisible.length - 1 : 0;\n        }\n\n        this.$active.removeClass(this.options.activeClass);\n        this.$active = this.$links.filter('[href=\"#' + this.$targets.eq(curIdx).data('magellan-target') + '\"]').addClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = \"\";\n          if (curIdx != undefined) {\n            hash = this.$active[0].getAttribute('href');\n          }\n          if (hash !== window.location.hash) {\n            if (window.history.pushState) {\n              window.history.pushState(null, null, hash);\n            } else {\n              window.location.hash = hash;\n            }\n          }\n        }\n\n        this.scrollPos = winPos;\n        /**\n         * Fires when magellan is finished updating to the new active element.\n         * @event Magellan#update\n         */\n        this.$element.trigger('update.zf.magellan', [this.$active]);\n      }\n\n      /**\n       * Destroys an instance of Magellan and resets the url of the window.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger .zf.magellan').find('.' + this.options.activeClass).removeClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = this.$active[0].getAttribute('href');\n          window.location.hash.replace(hash, '');\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Magellan;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Magellan.defaults = {\n    /**\n     * Amount of time, in ms, the animated scrolling should take between locations.\n     * @option\n     * @example 500\n     */\n    animationDuration: 500,\n    /**\n     * Animation style to use when scrolling between locations.\n     * @option\n     * @example 'ease-in-out'\n     */\n    animationEasing: 'linear',\n    /**\n     * Number of pixels to use as a marker for location changes.\n     * @option\n     * @example 50\n     */\n    threshold: 50,\n    /**\n     * Class applied to the active locations link on the magellan container.\n     * @option\n     * @example 'active'\n     */\n    activeClass: 'active',\n    /**\n     * Allows the script to manipulate the url of the current page, and if supported, alter the history.\n     * @option\n     * @example true\n     */\n    deepLinking: false,\n    /**\n     * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\n     * @option\n     * @example 25\n     */\n    barOffset: 0\n  };\n\n  // Window exports\n  Foundation.plugin(Magellan, 'Magellan');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * OffCanvas module.\n   * @module foundation.offcanvas\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.triggers\n   * @requires foundation.util.motion\n   */\n\n  var OffCanvas = function () {\n    /**\n     * Creates a new instance of an off-canvas wrapper.\n     * @class\n     * @fires OffCanvas#init\n     * @param {Object} element - jQuery object to initialize.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function OffCanvas(element, options) {\n      _classCallCheck(this, OffCanvas);\n\n      this.$element = element;\n      this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n      this.$lastTrigger = $();\n      this.$triggers = $();\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'OffCanvas');\n      Foundation.Keyboard.register('OffCanvas', {\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\n     * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\n     * @function\n     * @private\n     */\n\n\n    _createClass(OffCanvas, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element.attr('id');\n\n        this.$element.attr('aria-hidden', 'true');\n\n        this.$element.addClass('is-transition-' + this.options.transition);\n\n        // Find triggers that affect this element and add aria-expanded to them\n        this.$triggers = $(document).find('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-expanded', 'false').attr('aria-controls', id);\n\n        // Add an overlay over the content if necessary\n        if (this.options.contentOverlay === true) {\n          var overlay = document.createElement('div');\n          var overlayPosition = $(this.$element).css(\"position\") === 'fixed' ? 'is-overlay-fixed' : 'is-overlay-absolute';\n          overlay.setAttribute('class', 'js-off-canvas-overlay ' + overlayPosition);\n          this.$overlay = $(overlay);\n          if (overlayPosition === 'is-overlay-fixed') {\n            $('body').append(this.$overlay);\n          } else {\n            this.$element.siblings('[data-off-canvas-content]').append(this.$overlay);\n          }\n        }\n\n        this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n        if (this.options.isRevealed === true) {\n          this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n          this._setMQChecker();\n        }\n        if (!this.options.transitionTime === true) {\n          this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas]')[0]).transitionDuration) * 1000;\n        }\n      }\n\n      /**\n       * Adds event handlers to the off-canvas wrapper and the exit overlay.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('.zf.trigger .zf.offcanvas').on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n        });\n\n        if (this.options.closeOnClick === true) {\n          var $target = this.options.contentOverlay ? this.$overlay : $('[data-off-canvas-content]');\n          $target.on({ 'click.zf.offcanvas': this.close.bind(this) });\n        }\n      }\n\n      /**\n       * Applies event listener for elements that will reveal at certain breakpoints.\n       * @private\n       */\n\n    }, {\n      key: '_setMQChecker',\n      value: function _setMQChecker() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          } else {\n            _this.reveal(false);\n          }\n        }).one('load.zf.offcanvas', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          }\n        });\n      }\n\n      /**\n       * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\n       * @param {Boolean} isRevealed - true if element should be revealed.\n       * @function\n       */\n\n    }, {\n      key: 'reveal',\n      value: function reveal(isRevealed) {\n        var $closer = this.$element.find('[data-close]');\n        if (isRevealed) {\n          this.close();\n          this.isRevealed = true;\n          this.$element.attr('aria-hidden', 'false');\n          this.$element.off('open.zf.trigger toggle.zf.trigger');\n          if ($closer.length) {\n            $closer.hide();\n          }\n        } else {\n          this.isRevealed = false;\n          this.$element.attr('aria-hidden', 'true');\n          this.$element.on({\n            'open.zf.trigger': this.open.bind(this),\n            'toggle.zf.trigger': this.toggle.bind(this)\n          });\n          if ($closer.length) {\n            $closer.show();\n          }\n        }\n      }\n\n      /**\n       * Stops scrolling of the body when offcanvas is open on mobile Safari and other troublesome browsers.\n       * @private\n       */\n\n    }, {\n      key: '_stopScrolling',\n      value: function _stopScrolling(event) {\n        return false;\n      }\n\n      /**\n       * Opens the off-canvas menu.\n       * @function\n       * @param {Object} event - Event object passed from listener.\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\n       * @fires OffCanvas#opened\n       */\n\n    }, {\n      key: 'open',\n      value: function open(event, trigger) {\n        if (this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n        var _this = this;\n\n        if (trigger) {\n          this.$lastTrigger = trigger;\n        }\n\n        if (this.options.forceTo === 'top') {\n          window.scrollTo(0, 0);\n        } else if (this.options.forceTo === 'bottom') {\n          window.scrollTo(0, document.body.scrollHeight);\n        }\n\n        /**\n         * Fires when the off-canvas menu opens.\n         * @event OffCanvas#opened\n         */\n        _this.$element.addClass('is-open');\n\n        this.$triggers.attr('aria-expanded', 'true');\n        this.$element.attr('aria-hidden', 'false').trigger('opened.zf.offcanvas');\n\n        // If `contentScroll` is set to false, add class and disable scrolling on touch devices.\n        if (this.options.contentScroll === false) {\n          $('body').addClass('is-off-canvas-open').on('touchmove', this._stopScrolling);\n        }\n\n        if (this.options.contentOverlay === true) {\n          this.$overlay.addClass('is-visible');\n        }\n\n        if (this.options.closeOnClick === true && this.options.contentOverlay === true) {\n          this.$overlay.addClass('is-closable');\n        }\n\n        if (this.options.autoFocus === true) {\n          this.$element.one(Foundation.transitionend(this.$element), function () {\n            _this.$element.find('a, button').eq(0).focus();\n          });\n        }\n\n        if (this.options.trapFocus === true) {\n          this.$element.siblings('[data-off-canvas-content]').attr('tabindex', '-1');\n          Foundation.Keyboard.trapFocus(this.$element);\n        }\n      }\n\n      /**\n       * Closes the off-canvas menu.\n       * @function\n       * @param {Function} cb - optional cb to fire after closure.\n       * @fires OffCanvas#closed\n       */\n\n    }, {\n      key: 'close',\n      value: function close(cb) {\n        if (!this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n\n        var _this = this;\n\n        _this.$element.removeClass('is-open');\n\n        this.$element.attr('aria-hidden', 'true')\n        /**\n         * Fires when the off-canvas menu opens.\n         * @event OffCanvas#closed\n         */\n        .trigger('closed.zf.offcanvas');\n\n        // If `contentScroll` is set to false, remove class and re-enable scrolling on touch devices.\n        if (this.options.contentScroll === false) {\n          $('body').removeClass('is-off-canvas-open').off('touchmove', this._stopScrolling);\n        }\n\n        if (this.options.contentOverlay === true) {\n          this.$overlay.removeClass('is-visible');\n        }\n\n        if (this.options.closeOnClick === true && this.options.contentOverlay === true) {\n          this.$overlay.removeClass('is-closable');\n        }\n\n        this.$triggers.attr('aria-expanded', 'false');\n\n        if (this.options.trapFocus === true) {\n          this.$element.siblings('[data-off-canvas-content]').removeAttr('tabindex');\n          Foundation.Keyboard.releaseFocus(this.$element);\n        }\n      }\n\n      /**\n       * Toggles the off-canvas menu open or closed.\n       * @function\n       * @param {Object} event - Event object passed from listener.\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle(event, trigger) {\n        if (this.$element.hasClass('is-open')) {\n          this.close(event, trigger);\n        } else {\n          this.open(event, trigger);\n        }\n      }\n\n      /**\n       * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_handleKeyboard',\n      value: function _handleKeyboard(e) {\n        var _this2 = this;\n\n        Foundation.Keyboard.handleKey(e, 'OffCanvas', {\n          close: function () {\n            _this2.close();\n            _this2.$lastTrigger.focus();\n            return true;\n          },\n          handled: function () {\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        });\n      }\n\n      /**\n       * Destroys the offcanvas plugin.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.close();\n        this.$element.off('.zf.trigger .zf.offcanvas');\n        this.$overlay.off('.zf.offcanvas');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return OffCanvas;\n  }();\n\n  OffCanvas.defaults = {\n    /**\n     * Allow the user to click outside of the menu to close it.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n\n    /**\n     * Adds an overlay on top of `[data-off-canvas-content]`.\n     * @option\n     * @example true\n     */\n    contentOverlay: true,\n\n    /**\n     * Enable/disable scrolling of the main content when an off canvas panel is open.\n     * @option\n     * @example true\n     */\n    contentScroll: true,\n\n    /**\n     * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\n     * @option\n     * @example 500\n     */\n    transitionTime: 0,\n\n    /**\n     * Type of transition for the offcanvas menu. Options are 'push', 'detached' or 'slide'.\n     * @option\n     * @example push\n     */\n    transition: 'push',\n\n    /**\n     * Force the page to scroll to top or bottom on open.\n     * @option\n     * @example top\n     */\n    forceTo: null,\n\n    /**\n     * Allow the offcanvas to remain open for certain breakpoints.\n     * @option\n     * @example false\n     */\n    isRevealed: false,\n\n    /**\n     * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\n     * @option\n     * @example reveal-for-large\n     */\n    revealOn: null,\n\n    /**\n     * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\n     * @option\n     * @example true\n     */\n    autoFocus: true,\n\n    /**\n     * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\n     * @option\n     * TODO improve the regex testing for this.\n     * @example reveal-for-large\n     */\n    revealClass: 'reveal-for-',\n\n    /**\n     * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\n     * @option\n     * @example true\n     */\n    trapFocus: false\n  };\n\n  // Window exports\n  Foundation.plugin(OffCanvas, 'OffCanvas');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Orbit module.\n   * @module foundation.orbit\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.timerAndImageLoader\n   * @requires foundation.util.touch\n   */\n\n  var Orbit = function () {\n    /**\n    * Creates a new instance of an orbit carousel.\n    * @class\n    * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\n    * @param {Object} options - Overrides to the default plugin settings.\n    */\n    function Orbit(element, options) {\n      _classCallCheck(this, Orbit);\n\n      this.$element = element;\n      this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Orbit');\n      Foundation.Keyboard.register('Orbit', {\n        'ltr': {\n          'ARROW_RIGHT': 'next',\n          'ARROW_LEFT': 'previous'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'next',\n          'ARROW_RIGHT': 'previous'\n        }\n      });\n    }\n\n    /**\n    * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n    * @function\n    * @private\n    */\n\n\n    _createClass(Orbit, [{\n      key: '_init',\n      value: function _init() {\n        // @TODO: consider discussion on PR #9278 about DOM pollution by changeSlide\n        this._reset();\n\n        this.$wrapper = this.$element.find('.' + this.options.containerClass);\n        this.$slides = this.$element.find('.' + this.options.slideClass);\n\n        var $images = this.$element.find('img'),\n            initActive = this.$slides.filter('.is-active'),\n            id = this.$element[0].id || Foundation.GetYoDigits(6, 'orbit');\n\n        this.$element.attr({\n          'data-resize': id,\n          'id': id\n        });\n\n        if (!initActive.length) {\n          this.$slides.eq(0).addClass('is-active');\n        }\n\n        if (!this.options.useMUI) {\n          this.$slides.addClass('no-motionui');\n        }\n\n        if ($images.length) {\n          Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n        } else {\n          this._prepareForOrbit(); //hehe\n        }\n\n        if (this.options.bullets) {\n          this._loadBullets();\n        }\n\n        this._events();\n\n        if (this.options.autoPlay && this.$slides.length > 1) {\n          this.geoSync();\n        }\n\n        if (this.options.accessible) {\n          // allow wrapper to be focusable to enable arrow navigation\n          this.$wrapper.attr('tabindex', 0);\n        }\n      }\n\n      /**\n      * Creates a jQuery collection of bullets, if they are being used.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_loadBullets',\n      value: function _loadBullets() {\n        this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\n      }\n\n      /**\n      * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n      * @function\n      */\n\n    }, {\n      key: 'geoSync',\n      value: function geoSync() {\n        var _this = this;\n        this.timer = new Foundation.Timer(this.$element, {\n          duration: this.options.timerDelay,\n          infinite: false\n        }, function () {\n          _this.changeSlide(true);\n        });\n        this.timer.start();\n      }\n\n      /**\n      * Sets wrapper and slide heights for the orbit.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_prepareForOrbit',\n      value: function _prepareForOrbit() {\n        var _this = this;\n        this._setWrapperHeight();\n      }\n\n      /**\n      * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n      * @function\n      * @private\n      * @param {Function} cb - a callback function to fire when complete.\n      */\n\n    }, {\n      key: '_setWrapperHeight',\n      value: function _setWrapperHeight(cb) {\n        //rewrite this to `for` loop\n        var max = 0,\n            temp,\n            counter = 0,\n            _this = this;\n\n        this.$slides.each(function () {\n          temp = this.getBoundingClientRect().height;\n          $(this).attr('data-slide', counter);\n\n          if (_this.$slides.filter('.is-active')[0] !== _this.$slides.eq(counter)[0]) {\n            //if not the active slide, set css position and display property\n            $(this).css({ 'position': 'relative', 'display': 'none' });\n          }\n          max = temp > max ? temp : max;\n          counter++;\n        });\n\n        if (counter === this.$slides.length) {\n          this.$wrapper.css({ 'height': max }); //only change the wrapper height property once.\n          if (cb) {\n            cb(max);\n          } //fire callback with max height dimension.\n        }\n      }\n\n      /**\n      * Sets the max-height of each slide.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_setSlideHeight',\n      value: function _setSlideHeight(height) {\n        this.$slides.each(function () {\n          $(this).css('max-height', height);\n        });\n      }\n\n      /**\n      * Adds event listeners to basically everything within the element.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        //***************************************\n        //**Now using custom event - thanks to:**\n        //**      Yohai Ararat of Toronto      **\n        //***************************************\n        //\n        this.$element.off('.resizeme.zf.trigger').on({\n          'resizeme.zf.trigger': this._prepareForOrbit.bind(this)\n        });\n        if (this.$slides.length > 1) {\n\n          if (this.options.swipe) {\n            this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(true);\n            }).on('swiperight.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(false);\n            });\n          }\n          //***************************************\n\n          if (this.options.autoPlay) {\n            this.$slides.on('click.zf.orbit', function () {\n              _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n              _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n            });\n\n            if (this.options.pauseOnHover) {\n              this.$element.on('mouseenter.zf.orbit', function () {\n                _this.timer.pause();\n              }).on('mouseleave.zf.orbit', function () {\n                if (!_this.$element.data('clickedOn')) {\n                  _this.timer.start();\n                }\n              });\n            }\n          }\n\n          if (this.options.navButtons) {\n            var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\n            $controls.attr('tabindex', 0)\n            //also need to handle enter/return and spacebar key presses\n            .on('click.zf.orbit touchend.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide($(this).hasClass(_this.options.nextClass));\n            });\n          }\n\n          if (this.options.bullets) {\n            this.$bullets.on('click.zf.orbit touchend.zf.orbit', function () {\n              if (/is-active/g.test(this.className)) {\n                return false;\n              } //if this is active, kick out of function.\n              var idx = $(this).data('slide'),\n                  ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n                  $slide = _this.$slides.eq(idx);\n\n              _this.changeSlide(ltr, $slide, idx);\n            });\n          }\n\n          if (this.options.accessible) {\n            this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function (e) {\n              // handle keyboard event with keyboard util\n              Foundation.Keyboard.handleKey(e, 'Orbit', {\n                next: function () {\n                  _this.changeSlide(true);\n                },\n                previous: function () {\n                  _this.changeSlide(false);\n                },\n                handled: function () {\n                  // if bullet is focused, make sure focus moves\n                  if ($(e.target).is(_this.$bullets)) {\n                    _this.$bullets.filter('.is-active').focus();\n                  }\n                }\n              });\n            });\n          }\n        }\n      }\n\n      /**\n       * Resets Orbit so it can be reinitialized\n       */\n\n    }, {\n      key: '_reset',\n      value: function _reset() {\n        // Don't do anything if there are no slides (first run)\n        if (typeof this.$slides == 'undefined') {\n          return;\n        }\n\n        if (this.$slides.length > 1) {\n          // Remove old events\n          this.$element.off('.zf.orbit').find('*').off('.zf.orbit');\n\n          // Restart timer if autoPlay is enabled\n          if (this.options.autoPlay) {\n            this.timer.restart();\n          }\n\n          // Reset all sliddes\n          this.$slides.each(function (el) {\n            $(el).removeClass('is-active is-active is-in').removeAttr('aria-live').hide();\n          });\n\n          // Show the first slide\n          this.$slides.first().addClass('is-active').show();\n\n          // Triggers when the slide has finished animating\n          this.$element.trigger('slidechange.zf.orbit', [this.$slides.first()]);\n\n          // Select first bullet if bullets are present\n          if (this.options.bullets) {\n            this._updateBullets(0);\n          }\n        }\n      }\n\n      /**\n      * Changes the current slide to a new one.\n      * @function\n      * @param {Boolean} isLTR - flag if the slide should move left to right.\n      * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n      * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n      * @fires Orbit#slidechange\n      */\n\n    }, {\n      key: 'changeSlide',\n      value: function changeSlide(isLTR, chosenSlide, idx) {\n        if (!this.$slides) {\n          return;\n        } // Don't freak out if we're in the middle of cleanup\n        var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n        if (/mui/g.test($curSlide[0].className)) {\n          return false;\n        } //if the slide is currently animating, kick out of the function\n\n        var $firstSlide = this.$slides.first(),\n            $lastSlide = this.$slides.last(),\n            dirIn = isLTR ? 'Right' : 'Left',\n            dirOut = isLTR ? 'Left' : 'Right',\n            _this = this,\n            $newSlide;\n\n        if (!chosenSlide) {\n          //most of the time, this will be auto played or clicked from the navButtons.\n          $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n          this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass) : //pick next slide if moving left to right\n          this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass); //pick prev slide if moving right to left\n        } else {\n          $newSlide = chosenSlide;\n        }\n\n        if ($newSlide.length) {\n          /**\n          * Triggers before the next slide starts animating in and only if a next slide has been found.\n          * @event Orbit#beforeslidechange\n          */\n          this.$element.trigger('beforeslidechange.zf.orbit', [$curSlide, $newSlide]);\n\n          if (this.options.bullets) {\n            idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n            this._updateBullets(idx);\n          }\n\n          if (this.options.useMUI && !this.$element.is(':hidden')) {\n            Foundation.Motion.animateIn($newSlide.addClass('is-active').css({ 'position': 'absolute', 'top': 0 }), this.options['animInFrom' + dirIn], function () {\n              $newSlide.css({ 'position': 'relative', 'display': 'block' }).attr('aria-live', 'polite');\n            });\n\n            Foundation.Motion.animateOut($curSlide.removeClass('is-active'), this.options['animOutTo' + dirOut], function () {\n              $curSlide.removeAttr('aria-live');\n              if (_this.options.autoPlay && !_this.timer.isPaused) {\n                _this.timer.restart();\n              }\n              //do stuff?\n            });\n          } else {\n            $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n            $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n            if (this.options.autoPlay && !this.timer.isPaused) {\n              this.timer.restart();\n            }\n          }\n          /**\n          * Triggers when the slide has finished animating in.\n          * @event Orbit#slidechange\n          */\n          this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n        }\n      }\n\n      /**\n      * Updates the active state of the bullets, if displayed.\n      * @function\n      * @private\n      * @param {Number} idx - the index of the current slide.\n      */\n\n    }, {\n      key: '_updateBullets',\n      value: function _updateBullets(idx) {\n        var $oldBullet = this.$element.find('.' + this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),\n            span = $oldBullet.find('span:last').detach(),\n            $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n      }\n\n      /**\n      * Destroys the carousel and hides the element.\n      * @function\n      */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Orbit;\n  }();\n\n  Orbit.defaults = {\n    /**\n    * Tells the JS to look for and loadBullets.\n    * @option\n    * @example true\n    */\n    bullets: true,\n    /**\n    * Tells the JS to apply event listeners to nav buttons\n    * @option\n    * @example true\n    */\n    navButtons: true,\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-right'\n    */\n    animInFromRight: 'slide-in-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-right'\n    */\n    animOutToRight: 'slide-out-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-left'\n    *\n    */\n    animInFromLeft: 'slide-in-left',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-left'\n    */\n    animOutToLeft: 'slide-out-left',\n    /**\n    * Allows Orbit to automatically animate on page load.\n    * @option\n    * @example true\n    */\n    autoPlay: true,\n    /**\n    * Amount of time, in ms, between slide transitions\n    * @option\n    * @example 5000\n    */\n    timerDelay: 5000,\n    /**\n    * Allows Orbit to infinitely loop through the slides\n    * @option\n    * @example true\n    */\n    infiniteWrap: true,\n    /**\n    * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n    * @option\n    * @example true\n    */\n    swipe: true,\n    /**\n    * Allows the timing function to pause animation on hover.\n    * @option\n    * @example true\n    */\n    pauseOnHover: true,\n    /**\n    * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n    * @option\n    * @example true\n    */\n    accessible: true,\n    /**\n    * Class applied to the container of Orbit\n    * @option\n    * @example 'orbit-container'\n    */\n    containerClass: 'orbit-container',\n    /**\n    * Class applied to individual slides.\n    * @option\n    * @example 'orbit-slide'\n    */\n    slideClass: 'orbit-slide',\n    /**\n    * Class applied to the bullet container. You're welcome.\n    * @option\n    * @example 'orbit-bullets'\n    */\n    boxOfBullets: 'orbit-bullets',\n    /**\n    * Class applied to the `next` navigation button.\n    * @option\n    * @example 'orbit-next'\n    */\n    nextClass: 'orbit-next',\n    /**\n    * Class applied to the `previous` navigation button.\n    * @option\n    * @example 'orbit-previous'\n    */\n    prevClass: 'orbit-previous',\n    /**\n    * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\n    * @option\n    * @example true\n    */\n    useMUI: true\n  };\n\n  // Window exports\n  Foundation.plugin(Orbit, 'Orbit');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveMenu module.\n   * @module foundation.responsiveMenu\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.accordionMenu\n   * @requires foundation.util.drilldown\n   * @requires foundation.util.dropdown-menu\n   */\n\n  var ResponsiveMenu = function () {\n    /**\n     * Creates a new instance of a responsive menu.\n     * @class\n     * @fires ResponsiveMenu#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function ResponsiveMenu(element, options) {\n      _classCallCheck(this, ResponsiveMenu);\n\n      this.$element = $(element);\n      this.rules = this.$element.data('responsive-menu');\n      this.currentMq = null;\n      this.currentPlugin = null;\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveMenu');\n    }\n\n    /**\n     * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveMenu, [{\n      key: '_init',\n      value: function _init() {\n        // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n        if (typeof this.rules === 'string') {\n          var rulesTree = {};\n\n          // Parse rules from \"classes\" pulled from data attribute\n          var rules = this.rules.split(' ');\n\n          // Iterate through every rule found\n          for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i].split('-');\n            var ruleSize = rule.length > 1 ? rule[0] : 'small';\n            var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n            if (MenuPlugins[rulePlugin] !== null) {\n              rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n            }\n          }\n\n          this.rules = rulesTree;\n        }\n\n        if (!$.isEmptyObject(this.rules)) {\n          this._checkMediaQueries();\n        }\n        // Add data-mutate since children may need it.\n        this.$element.attr('data-mutate', this.$element.attr('data-mutate') || Foundation.GetYoDigits(6, 'responsive-menu'));\n      }\n\n      /**\n       * Initializes events for the Menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          _this._checkMediaQueries();\n        });\n        // $(window).on('resize.zf.ResponsiveMenu', function() {\n        //   _this._checkMediaQueries();\n        // });\n      }\n\n      /**\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_checkMediaQueries',\n      value: function _checkMediaQueries() {\n        var matchedMq,\n            _this = this;\n        // Iterate through each rule and find the last matching rule\n        $.each(this.rules, function (key) {\n          if (Foundation.MediaQuery.atLeast(key)) {\n            matchedMq = key;\n          }\n        });\n\n        // No match? No dice\n        if (!matchedMq) return;\n\n        // Plugin already initialized? We good\n        if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n        // Remove existing plugin-specific CSS classes\n        $.each(MenuPlugins, function (key, value) {\n          _this.$element.removeClass(value.cssClass);\n        });\n\n        // Add the CSS class for the new plugin\n        this.$element.addClass(this.rules[matchedMq].cssClass);\n\n        // Create an instance of the new plugin\n        if (this.currentPlugin) this.currentPlugin.destroy();\n        this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n      }\n\n      /**\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.currentPlugin.destroy();\n        $(window).off('.zf.ResponsiveMenu');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveMenu;\n  }();\n\n  ResponsiveMenu.defaults = {};\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    dropdown: {\n      cssClass: 'dropdown',\n      plugin: Foundation._plugins['dropdown-menu'] || null\n    },\n    drilldown: {\n      cssClass: 'drilldown',\n      plugin: Foundation._plugins['drilldown'] || null\n    },\n    accordion: {\n      cssClass: 'accordion-menu',\n      plugin: Foundation._plugins['accordion-menu'] || null\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveToggle module.\n   * @module foundation.responsiveToggle\n   * @requires foundation.util.mediaQuery\n   */\n\n  var ResponsiveToggle = function () {\n    /**\n     * Creates a new instance of Tab Bar.\n     * @class\n     * @fires ResponsiveToggle#init\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function ResponsiveToggle(element, options) {\n      _classCallCheck(this, ResponsiveToggle);\n\n      this.$element = $(element);\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveToggle');\n    }\n\n    /**\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveToggle, [{\n      key: '_init',\n      value: function _init() {\n        var targetID = this.$element.data('responsive-toggle');\n        if (!targetID) {\n          console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n        }\n\n        this.$targetMenu = $('#' + targetID);\n        this.$toggler = this.$element.find('[data-toggle]');\n        this.options = $.extend({}, this.options, this.$targetMenu.data());\n\n        // If they were set, parse the animation classes\n        if (this.options.animate) {\n          var input = this.options.animate.split(' ');\n\n          this.animationIn = input[0];\n          this.animationOut = input[1] || null;\n        }\n\n        this._update();\n      }\n\n      /**\n       * Adds necessary event handlers for the tab bar to work.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this._updateMqHandler = this._update.bind(this);\n\n        $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n        this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n      }\n\n      /**\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_update',\n      value: function _update() {\n        // Mobile\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$element.show();\n          this.$targetMenu.hide();\n        }\n\n        // Desktop\n        else {\n            this.$element.hide();\n            this.$targetMenu.show();\n          }\n      }\n\n      /**\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n       * @function\n       * @fires ResponsiveToggle#toggled\n       */\n\n    }, {\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this2 = this;\n\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          if (this.options.animate) {\n            if (this.$targetMenu.is(':hidden')) {\n              Foundation.Motion.animateIn(this.$targetMenu, this.animationIn, function () {\n                /**\n                 * Fires when the element attached to the tab bar toggles.\n                 * @event ResponsiveToggle#toggled\n                 */\n                _this2.$element.trigger('toggled.zf.responsiveToggle');\n                _this2.$targetMenu.find('[data-mutate]').triggerHandler('mutateme.zf.trigger');\n              });\n            } else {\n              Foundation.Motion.animateOut(this.$targetMenu, this.animationOut, function () {\n                /**\n                 * Fires when the element attached to the tab bar toggles.\n                 * @event ResponsiveToggle#toggled\n                 */\n                _this2.$element.trigger('toggled.zf.responsiveToggle');\n              });\n            }\n          } else {\n            this.$targetMenu.toggle(0);\n            this.$targetMenu.find('[data-mutate]').trigger('mutateme.zf.trigger');\n\n            /**\n             * Fires when the element attached to the tab bar toggles.\n             * @event ResponsiveToggle#toggled\n             */\n            this.$element.trigger('toggled.zf.responsiveToggle');\n          }\n        }\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.responsiveToggle');\n        this.$toggler.off('.zf.responsiveToggle');\n\n        $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveToggle;\n  }();\n\n  ResponsiveToggle.defaults = {\n    /**\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n     * @option\n     * @example 'medium'\n     */\n    hideFor: 'medium',\n\n    /**\n     * To decide if the toggle should be animated or not.\n     * @option\n     * @example false\n     */\n    animate: false\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Reveal module.\n   * @module foundation.reveal\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.motion if using animations\n   */\n\n  var Reveal = function () {\n    /**\n     * Creates a new instance of Reveal.\n     * @class\n     * @param {jQuery} element - jQuery object to use for the modal.\n     * @param {Object} options - optional parameters.\n     */\n    function Reveal(element, options) {\n      _classCallCheck(this, Reveal);\n\n      this.$element = element;\n      this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Reveal');\n      Foundation.Keyboard.register('Reveal', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\n     * Initializes the modal by adding the overlay and close buttons, (if selected).\n     * @private\n     */\n\n\n    _createClass(Reveal, [{\n      key: '_init',\n      value: function _init() {\n        this.id = this.$element.attr('id');\n        this.isActive = false;\n        this.cached = { mq: Foundation.MediaQuery.current };\n        this.isMobile = mobileSniff();\n\n        this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': this.id,\n          'aria-haspopup': true,\n          'tabindex': 0\n        });\n\n        if (this.options.fullScreen || this.$element.hasClass('full')) {\n          this.options.fullScreen = true;\n          this.options.overlay = false;\n        }\n        if (this.options.overlay && !this.$overlay) {\n          this.$overlay = this._makeOverlay(this.id);\n        }\n\n        this.$element.attr({\n          'role': 'dialog',\n          'aria-hidden': true,\n          'data-yeti-box': this.id,\n          'data-resize': this.id\n        });\n\n        if (this.$overlay) {\n          this.$element.detach().appendTo(this.$overlay);\n        } else {\n          this.$element.detach().appendTo($(this.options.appendTo));\n          this.$element.addClass('without-overlay');\n        }\n        this._events();\n        if (this.options.deepLink && window.location.hash === '#' + this.id) {\n          $(window).one('load.zf.reveal', this.open.bind(this));\n        }\n      }\n\n      /**\n       * Creates an overlay div to display behind the modal.\n       * @private\n       */\n\n    }, {\n      key: '_makeOverlay',\n      value: function _makeOverlay() {\n        return $('<div></div>').addClass('reveal-overlay').appendTo(this.options.appendTo);\n      }\n\n      /**\n       * Updates position of modal\n       * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n       * @private\n       */\n\n    }, {\n      key: '_updatePosition',\n      value: function _updatePosition() {\n        var width = this.$element.outerWidth();\n        var outerWidth = $(window).width();\n        var height = this.$element.outerHeight();\n        var outerHeight = $(window).height();\n        var left, top;\n        if (this.options.hOffset === 'auto') {\n          left = parseInt((outerWidth - width) / 2, 10);\n        } else {\n          left = parseInt(this.options.hOffset, 10);\n        }\n        if (this.options.vOffset === 'auto') {\n          if (height > outerHeight) {\n            top = parseInt(Math.min(100, outerHeight / 10), 10);\n          } else {\n            top = parseInt((outerHeight - height) / 4, 10);\n          }\n        } else {\n          top = parseInt(this.options.vOffset, 10);\n        }\n        this.$element.css({ top: top + 'px' });\n        // only worry about left if we don't have an overlay or we havea  horizontal offset,\n        // otherwise we're perfectly in the middle\n        if (!this.$overlay || this.options.hOffset !== 'auto') {\n          this.$element.css({ left: left + 'px' });\n          this.$element.css({ margin: '0px' });\n        }\n      }\n\n      /**\n       * Adds event handlers for the modal.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        var _this = this;\n\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': function (event, $element) {\n            if (event.target === _this.$element[0] || $(event.target).parents('[data-closable]')[0] === $element) {\n              // only close reveal when it's explicitly called\n              return _this2.close.apply(_this2);\n            }\n          },\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': function () {\n            _this._updatePosition();\n          }\n        });\n\n        if (this.$anchor.length) {\n          this.$anchor.on('keydown.zf.reveal', function (e) {\n            if (e.which === 13 || e.which === 32) {\n              e.stopPropagation();\n              e.preventDefault();\n              _this.open();\n            }\n          });\n        }\n\n        if (this.options.closeOnClick && this.options.overlay) {\n          this.$overlay.off('.zf.reveal').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n        if (this.options.deepLink) {\n          $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\n        }\n      }\n\n      /**\n       * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n       * @private\n       */\n\n    }, {\n      key: '_handleState',\n      value: function _handleState(e) {\n        if (window.location.hash === '#' + this.id && !this.isActive) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n\n      /**\n       * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n       * @function\n       * @fires Reveal#closeme\n       * @fires Reveal#open\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        var _this3 = this;\n\n        if (this.options.deepLink) {\n          var hash = '#' + this.id;\n\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.isActive = true;\n\n        // Make elements invisible, but remove display: none so we can get size and positioning\n        this.$element.css({ 'visibility': 'hidden' }).show().scrollTop(0);\n        if (this.options.overlay) {\n          this.$overlay.css({ 'visibility': 'hidden' }).show();\n        }\n\n        this._updatePosition();\n\n        this.$element.hide().css({ 'visibility': '' });\n\n        if (this.$overlay) {\n          this.$overlay.css({ 'visibility': '' }).hide();\n          if (this.$element.hasClass('fast')) {\n            this.$overlay.addClass('fast');\n          } else if (this.$element.hasClass('slow')) {\n            this.$overlay.addClass('slow');\n          }\n        }\n\n        if (!this.options.multipleOpened) {\n          /**\n           * Fires immediately before the modal opens.\n           * Closes any other modals that are currently open\n           * @event Reveal#closeme\n           */\n          this.$element.trigger('closeme.zf.reveal', this.id);\n        }\n\n        var _this = this;\n\n        function addRevealOpenClasses() {\n          if (_this.isMobile) {\n            if (!_this.originalScrollPos) {\n              _this.originalScrollPos = window.pageYOffset;\n            }\n            $('html, body').addClass('is-reveal-open');\n          } else {\n            $('body').addClass('is-reveal-open');\n          }\n        }\n        // Motion UI method of reveal\n        if (this.options.animationIn) {\n          (function () {\n            var afterAnimation = function () {\n              _this.$element.attr({\n                'aria-hidden': false,\n                'tabindex': -1\n              }).focus();\n              addRevealOpenClasses();\n              Foundation.Keyboard.trapFocus(_this.$element);\n            };\n\n            if (_this3.options.overlay) {\n              Foundation.Motion.animateIn(_this3.$overlay, 'fade-in');\n            }\n            Foundation.Motion.animateIn(_this3.$element, _this3.options.animationIn, function () {\n              if (_this3.$element) {\n                // protect against object having been removed\n                _this3.focusableElements = Foundation.Keyboard.findFocusable(_this3.$element);\n                afterAnimation();\n              }\n            });\n          })();\n        }\n        // jQuery method of reveal\n        else {\n            if (this.options.overlay) {\n              this.$overlay.show(0);\n            }\n            this.$element.show(this.options.showDelay);\n          }\n\n        // handle accessibility\n        this.$element.attr({\n          'aria-hidden': false,\n          'tabindex': -1\n        }).focus();\n        Foundation.Keyboard.trapFocus(this.$element);\n\n        /**\n         * Fires when the modal has successfully opened.\n         * @event Reveal#open\n         */\n        this.$element.trigger('open.zf.reveal');\n\n        addRevealOpenClasses();\n\n        setTimeout(function () {\n          _this3._extraHandlers();\n        }, 0);\n      }\n\n      /**\n       * Adds extra event handlers for the body and window if necessary.\n       * @private\n       */\n\n    }, {\n      key: '_extraHandlers',\n      value: function _extraHandlers() {\n        var _this = this;\n        if (!this.$element) {\n          return;\n        } // If we're in the middle of cleanup, don't freak out\n        this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n        if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n          $('body').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n\n        if (this.options.closeOnEsc) {\n          $(window).on('keydown.zf.reveal', function (e) {\n            Foundation.Keyboard.handleKey(e, 'Reveal', {\n              close: function () {\n                if (_this.options.closeOnEsc) {\n                  _this.close();\n                  _this.$anchor.focus();\n                }\n              }\n            });\n          });\n        }\n\n        // lock focus within modal while tabbing\n        this.$element.on('keydown.zf.reveal', function (e) {\n          var $target = $(this);\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Reveal', {\n            open: function () {\n              if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n                setTimeout(function () {\n                  // set focus back to anchor if close button has been activated\n                  _this.$anchor.focus();\n                }, 1);\n              } else if ($target.is(_this.focusableElements)) {\n                // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n                _this.open();\n              }\n            },\n            close: function () {\n              if (_this.options.closeOnEsc) {\n                _this.close();\n                _this.$anchor.focus();\n              }\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n            }\n          });\n        });\n      }\n\n      /**\n       * Closes the modal.\n       * @function\n       * @fires Reveal#closed\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.isActive || !this.$element.is(':visible')) {\n          return false;\n        }\n        var _this = this;\n\n        // Motion UI method of hiding\n        if (this.options.animationOut) {\n          if (this.options.overlay) {\n            Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\n          } else {\n            finishUp();\n          }\n\n          Foundation.Motion.animateOut(this.$element, this.options.animationOut);\n        }\n        // jQuery method of hiding\n        else {\n            if (this.options.overlay) {\n              this.$overlay.hide(0, finishUp);\n            } else {\n              finishUp();\n            }\n\n            this.$element.hide(this.options.hideDelay);\n          }\n\n        // Conditionals to remove extra event listeners added on open\n        if (this.options.closeOnEsc) {\n          $(window).off('keydown.zf.reveal');\n        }\n\n        if (!this.options.overlay && this.options.closeOnClick) {\n          $('body').off('click.zf.reveal');\n        }\n\n        this.$element.off('keydown.zf.reveal');\n\n        function finishUp() {\n          if (_this.isMobile) {\n            $('html, body').removeClass('is-reveal-open');\n            if (_this.originalScrollPos) {\n              $('body').scrollTop(_this.originalScrollPos);\n              _this.originalScrollPos = null;\n            }\n          } else {\n            $('body').removeClass('is-reveal-open');\n          }\n\n          Foundation.Keyboard.releaseFocus(_this.$element);\n\n          _this.$element.attr('aria-hidden', true);\n\n          /**\n          * Fires when the modal is done closing.\n          * @event Reveal#closed\n          */\n          _this.$element.trigger('closed.zf.reveal');\n        }\n\n        /**\n        * Resets the modal content\n        * This prevents a running video to keep going in the background\n        */\n        if (this.options.resetOnClose) {\n          this.$element.html(this.$element.html());\n        }\n\n        this.isActive = false;\n        if (_this.options.deepLink) {\n          if (window.history.replaceState) {\n            window.history.replaceState('', document.title, window.location.href.replace('#' + this.id, ''));\n          } else {\n            window.location.hash = '';\n          }\n        }\n      }\n\n      /**\n       * Toggles the open/closed state of a modal.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n    }, {\n      key: 'destroy',\n\n\n      /**\n       * Destroys an instance of a modal.\n       * @function\n       */\n      value: function destroy() {\n        if (this.options.overlay) {\n          this.$element.appendTo($(this.options.appendTo)); // move $element outside of $overlay to prevent error unregisterPlugin()\n          this.$overlay.hide().off().remove();\n        }\n        this.$element.hide().off();\n        this.$anchor.off('.zf');\n        $(window).off('.zf.reveal:' + this.id);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Reveal;\n  }();\n\n  Reveal.defaults = {\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-in-left'\n     */\n    animationIn: '',\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-out-right'\n     */\n    animationOut: '',\n    /**\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    showDelay: 0,\n    /**\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    hideDelay: 0,\n    /**\n     * Allows a click on the body/overlay to close the modal.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Allows the modal to close if the user presses the `ESCAPE` key.\n     * @option\n     * @example true\n     */\n    closeOnEsc: true,\n    /**\n     * If true, allows multiple modals to be displayed at once.\n     * @option\n     * @example false\n     */\n    multipleOpened: false,\n    /**\n     * Distance, in pixels, the modal should push down from the top of the screen.\n     * @option\n     * @example auto\n     */\n    vOffset: 'auto',\n    /**\n     * Distance, in pixels, the modal should push in from the side of the screen.\n     * @option\n     * @example auto\n     */\n    hOffset: 'auto',\n    /**\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n     * @option\n     * @example false\n     */\n    fullScreen: false,\n    /**\n     * Percentage of screen height the modal should push up from the bottom of the view.\n     * @option\n     * @example 10\n     */\n    btmOffsetPct: 10,\n    /**\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n     * @option\n     * @example true\n     */\n    overlay: true,\n    /**\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n     * @option\n     * @example false\n     */\n    resetOnClose: false,\n    /**\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n     * @option\n     * @example false\n     */\n    deepLink: false,\n    /**\n    * Allows the modal to append to custom div.\n    * @option\n    * @example false\n    */\n    appendTo: \"body\"\n\n  };\n\n  // Window exports\n  Foundation.plugin(Reveal, 'Reveal');\n\n  function iPhoneSniff() {\n    return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n    );\n  }\n\n  function androidSniff() {\n    return (/Android/.test(window.navigator.userAgent)\n    );\n  }\n\n  function mobileSniff() {\n    return iPhoneSniff() || androidSniff();\n  }\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Slider module.\n   * @module foundation.slider\n   * @requires foundation.util.motion\n   * @requires foundation.util.triggers\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.touch\n   */\n\n  var Slider = function () {\n    /**\n     * Creates a new instance of a slider control.\n     * @class\n     * @param {jQuery} element - jQuery object to make into a slider control.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Slider(element, options) {\n      _classCallCheck(this, Slider);\n\n      this.$element = element;\n      this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Slider');\n      Foundation.Keyboard.register('Slider', {\n        'ltr': {\n          'ARROW_RIGHT': 'increase',\n          'ARROW_UP': 'increase',\n          'ARROW_DOWN': 'decrease',\n          'ARROW_LEFT': 'decrease',\n          'SHIFT_ARROW_RIGHT': 'increase_fast',\n          'SHIFT_ARROW_UP': 'increase_fast',\n          'SHIFT_ARROW_DOWN': 'decrease_fast',\n          'SHIFT_ARROW_LEFT': 'decrease_fast'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'increase',\n          'ARROW_RIGHT': 'decrease',\n          'SHIFT_ARROW_LEFT': 'increase_fast',\n          'SHIFT_ARROW_RIGHT': 'decrease_fast'\n        }\n      });\n    }\n\n    /**\n     * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\n     * @function\n     * @private\n     */\n\n\n    _createClass(Slider, [{\n      key: '_init',\n      value: function _init() {\n        this.inputs = this.$element.find('input');\n        this.handles = this.$element.find('[data-slider-handle]');\n\n        this.$handle = this.handles.eq(0);\n        this.$input = this.inputs.length ? this.inputs.eq(0) : $('#' + this.$handle.attr('aria-controls'));\n        this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n        var isDbl = false,\n            _this = this;\n        if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n          this.options.disabled = true;\n          this.$element.addClass(this.options.disabledClass);\n        }\n        if (!this.inputs.length) {\n          this.inputs = $().add(this.$input);\n          this.options.binding = true;\n        }\n\n        this._setInitAttr(0);\n\n        if (this.handles[1]) {\n          this.options.doubleSided = true;\n          this.$handle2 = this.handles.eq(1);\n          this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $('#' + this.$handle2.attr('aria-controls'));\n\n          if (!this.inputs[1]) {\n            this.inputs = this.inputs.add(this.$input2);\n          }\n          isDbl = true;\n\n          // this.$handle.triggerHandler('click.zf.slider');\n          this._setInitAttr(1);\n        }\n\n        // Set handle positions\n        this.setHandles();\n\n        this._events();\n      }\n    }, {\n      key: 'setHandles',\n      value: function setHandles() {\n        var _this2 = this;\n\n        if (this.handles[1]) {\n          this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true, function () {\n            _this2._setHandlePos(_this2.$handle2, _this2.inputs.eq(1).val(), true);\n          });\n        } else {\n          this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true);\n        }\n      }\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        this.setHandles();\n      }\n      /**\n      * @function\n      * @private\n      * @param {Number} value - floating point (the value) to be transformed using to a relative position on the slider (the inverse of _value)\n      */\n\n    }, {\n      key: '_pctOfBar',\n      value: function _pctOfBar(value) {\n        var pctOfBar = percent(value - this.options.start, this.options.end - this.options.start);\n\n        switch (this.options.positionValueFunction) {\n          case \"pow\":\n            pctOfBar = this._logTransform(pctOfBar);\n            break;\n          case \"log\":\n            pctOfBar = this._powTransform(pctOfBar);\n            break;\n        }\n\n        return pctOfBar.toFixed(2);\n      }\n\n      /**\n      * @function\n      * @private\n      * @param {Number} pctOfBar - floating point, the relative position of the slider (typically between 0-1) to be transformed to a value\n      */\n\n    }, {\n      key: '_value',\n      value: function _value(pctOfBar) {\n        switch (this.options.positionValueFunction) {\n          case \"pow\":\n            pctOfBar = this._powTransform(pctOfBar);\n            break;\n          case \"log\":\n            pctOfBar = this._logTransform(pctOfBar);\n            break;\n        }\n        var value = (this.options.end - this.options.start) * pctOfBar + this.options.start;\n\n        return value;\n      }\n\n      /**\n      * @function\n      * @private\n      * @param {Number} value - floating point (typically between 0-1) to be transformed using the log function\n      */\n\n    }, {\n      key: '_logTransform',\n      value: function _logTransform(value) {\n        return baseLog(this.options.nonLinearBase, value * (this.options.nonLinearBase - 1) + 1);\n      }\n\n      /**\n      * @function\n      * @private\n      * @param {Number} value - floating point (typically between 0-1) to be transformed using the power function\n      */\n\n    }, {\n      key: '_powTransform',\n      value: function _powTransform(value) {\n        return (Math.pow(this.options.nonLinearBase, value) - 1) / (this.options.nonLinearBase - 1);\n      }\n\n      /**\n       * Sets the position of the selected handle and fill bar.\n       * @function\n       * @private\n       * @param {jQuery} $hndl - the selected handle to move.\n       * @param {Number} location - floating point between the start and end values of the slider bar.\n       * @param {Function} cb - callback function to fire on completion.\n       * @fires Slider#moved\n       * @fires Slider#changed\n       */\n\n    }, {\n      key: '_setHandlePos',\n      value: function _setHandlePos($hndl, location, noInvert, cb) {\n        // don't move if the slider has been disabled since its initialization\n        if (this.$element.hasClass(this.options.disabledClass)) {\n          return;\n        }\n        //might need to alter that slightly for bars that will have odd number selections.\n        location = parseFloat(location); //on input change events, convert string to number...grumble.\n\n        // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n        if (location < this.options.start) {\n          location = this.options.start;\n        } else if (location > this.options.end) {\n          location = this.options.end;\n        }\n\n        var isDbl = this.options.doubleSided;\n\n        if (isDbl) {\n          //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n          if (this.handles.index($hndl) === 0) {\n            var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n            location = location >= h2Val ? h2Val - this.options.step : location;\n          } else {\n            var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n            location = location <= h1Val ? h1Val + this.options.step : location;\n          }\n        }\n\n        //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\n        //for click and drag events, it's weird due to the scale(-1, 1) css property\n        if (this.options.vertical && !noInvert) {\n          location = this.options.end - location;\n        }\n\n        var _this = this,\n            vert = this.options.vertical,\n            hOrW = vert ? 'height' : 'width',\n            lOrT = vert ? 'top' : 'left',\n            handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n            elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = this._pctOfBar(location),\n\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n        var css = {};\n\n        this._setValues($hndl, location);\n\n        // TODO update to calculate based on values set to respective inputs??\n        if (isDbl) {\n          var isLeftHndl = this.handles.index($hndl) === 0,\n\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n\n          //percentage w/h of the handle compared to the slider bar\n          handlePct = ~~(percent(handleDim, elemDim) * 100);\n          //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n          if (isLeftHndl) {\n            //left or top percentage value to apply to the fill bar.\n            css[lOrT] = movement + '%';\n            //calculate the new min-height/width for the fill bar.\n            dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n            //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n            //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n            if (cb && typeof cb === 'function') {\n              cb();\n            } //this is only needed for the initialization of 2 handled sliders\n          } else {\n            //just caching the value of the left/bottom handle's left/top property\n            var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n            //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n            //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n            dim = movement - (isNaN(handlePos) ? (this.options.initialStart - this.options.start) / ((this.options.end - this.options.start) / 100) : handlePos) + handlePct;\n          }\n          // assign the min-height/width to our css object\n          css['min-' + hOrW] = dim + '%';\n        }\n\n        this.$element.one('finished.zf.animate', function () {\n          /**\n           * Fires when the handle is done moving.\n           * @event Slider#moved\n           */\n          _this.$element.trigger('moved.zf.slider', [$hndl]);\n        });\n\n        //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n        var moveTime = this.$element.data('dragging') ? 1000 / 60 : this.options.moveTime;\n\n        Foundation.Move(moveTime, $hndl, function () {\n          // adjusting the left/top property of the handle, based on the percentage calculated above\n          // if movement isNaN, that is because the slider is hidden and we cannot determine handle width,\n          // fall back to next best guess.\n          if (isNaN(movement)) {\n            $hndl.css(lOrT, pctOfBar * 100 + '%');\n          } else {\n            $hndl.css(lOrT, movement + '%');\n          }\n\n          if (!_this.options.doubleSided) {\n            //if single-handled, a simple method to expand the fill bar\n            _this.$fill.css(hOrW, pctOfBar * 100 + '%');\n          } else {\n            //otherwise, use the css object we created above\n            _this.$fill.css(css);\n          }\n        });\n\n        /**\n         * Fires when the value has not been change for a given time.\n         * @event Slider#changed\n         */\n        clearTimeout(_this.timeout);\n        _this.timeout = setTimeout(function () {\n          _this.$element.trigger('changed.zf.slider', [$hndl]);\n        }, _this.options.changedDelay);\n      }\n\n      /**\n       * Sets the initial attribute for the slider element.\n       * @function\n       * @private\n       * @param {Number} idx - index of the current handle/input to use.\n       */\n\n    }, {\n      key: '_setInitAttr',\n      value: function _setInitAttr(idx) {\n        var initVal = idx === 0 ? this.options.initialStart : this.options.initialEnd;\n        var id = this.inputs.eq(idx).attr('id') || Foundation.GetYoDigits(6, 'slider');\n        this.inputs.eq(idx).attr({\n          'id': id,\n          'max': this.options.end,\n          'min': this.options.start,\n          'step': this.options.step\n        });\n        this.inputs.eq(idx).val(initVal);\n        this.handles.eq(idx).attr({\n          'role': 'slider',\n          'aria-controls': id,\n          'aria-valuemax': this.options.end,\n          'aria-valuemin': this.options.start,\n          'aria-valuenow': initVal,\n          'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n          'tabindex': 0\n        });\n      }\n\n      /**\n       * Sets the input and `aria-valuenow` values for the slider element.\n       * @function\n       * @private\n       * @param {jQuery} $handle - the currently selected handle.\n       * @param {Number} val - floating point of the new value.\n       */\n\n    }, {\n      key: '_setValues',\n      value: function _setValues($handle, val) {\n        var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n        this.inputs.eq(idx).val(val);\n        $handle.attr('aria-valuenow', val);\n      }\n\n      /**\n       * Handles events on the slider element.\n       * Calculates the new location of the current handle.\n       * If there are two handles and the bar was clicked, it determines which handle to move.\n       * @function\n       * @private\n       * @param {Object} e - the `event` object passed from the listener.\n       * @param {jQuery} $handle - the current handle to calculate for, if selected.\n       * @param {Number} val - floating point number for the new value of the slider.\n       * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\n       */\n\n    }, {\n      key: '_handleEvent',\n      value: function _handleEvent(e, $handle, val) {\n        var value, hasVal;\n        if (!val) {\n          //click or drag events\n          e.preventDefault();\n          var _this = this,\n              vertical = this.options.vertical,\n              param = vertical ? 'height' : 'width',\n              direction = vertical ? 'top' : 'left',\n              eventOffset = vertical ? e.pageY : e.pageX,\n              halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\n              barDim = this.$element[0].getBoundingClientRect()[param],\n              windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\n\n          var elemOffset = this.$element.offset()[direction];\n\n          // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\n          // best way to guess this is simulated is if clientY == pageY\n          if (e.clientY === e.pageY) {\n            eventOffset = eventOffset + windowScroll;\n          }\n          var eventFromBar = eventOffset - elemOffset;\n          var barXY;\n          if (eventFromBar < 0) {\n            barXY = 0;\n          } else if (eventFromBar > barDim) {\n            barXY = barDim;\n          } else {\n            barXY = eventFromBar;\n          }\n          var offsetPct = percent(barXY, barDim);\n\n          value = this._value(offsetPct);\n\n          // turn everything around for RTL, yay math!\n          if (Foundation.rtl() && !this.options.vertical) {\n            value = this.options.end - value;\n          }\n\n          value = _this._adjustValue(null, value);\n          //boolean flag for the setHandlePos fn, specifically for vertical sliders\n          hasVal = false;\n\n          if (!$handle) {\n            //figure out which handle it is, pass it to the next function.\n            var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n                secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n          }\n        } else {\n          //change event on input\n          value = this._adjustValue(null, val);\n          hasVal = true;\n        }\n\n        this._setHandlePos($handle, value, hasVal);\n      }\n\n      /**\n       * Adjustes value for handle in regard to step value. returns adjusted value\n       * @function\n       * @private\n       * @param {jQuery} $handle - the selected handle.\n       * @param {Number} value - value to adjust. used if $handle is falsy\n       */\n\n    }, {\n      key: '_adjustValue',\n      value: function _adjustValue($handle, value) {\n        var val,\n            step = this.options.step,\n            div = parseFloat(step / 2),\n            left,\n            prev_val,\n            next_val;\n        if (!!$handle) {\n          val = parseFloat($handle.attr('aria-valuenow'));\n        } else {\n          val = value;\n        }\n        left = val % step;\n        prev_val = val - left;\n        next_val = prev_val + step;\n        if (left === 0) {\n          return val;\n        }\n        val = val >= prev_val + div ? next_val : prev_val;\n        return val;\n      }\n\n      /**\n       * Adds event listeners to the slider elements.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this._eventsForHandle(this.$handle);\n        if (this.handles[1]) {\n          this._eventsForHandle(this.$handle2);\n        }\n      }\n\n      /**\n       * Adds event listeners a particular handle\n       * @function\n       * @private\n       * @param {jQuery} $handle - the current handle to apply listeners to.\n       */\n\n    }, {\n      key: '_eventsForHandle',\n      value: function _eventsForHandle($handle) {\n        var _this = this,\n            curHandle,\n            timer;\n\n        this.inputs.off('change.zf.slider').on('change.zf.slider', function (e) {\n          var idx = _this.inputs.index($(this));\n          _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n        });\n\n        if (this.options.clickSelect) {\n          this.$element.off('click.zf.slider').on('click.zf.slider', function (e) {\n            if (_this.$element.data('dragging')) {\n              return false;\n            }\n\n            if (!$(e.target).is('[data-slider-handle]')) {\n              if (_this.options.doubleSided) {\n                _this._handleEvent(e);\n              } else {\n                _this._handleEvent(e, _this.$handle);\n              }\n            }\n          });\n        }\n\n        if (this.options.draggable) {\n          this.handles.addTouch();\n\n          var $body = $('body');\n          $handle.off('mousedown.zf.slider').on('mousedown.zf.slider', function (e) {\n            $handle.addClass('is-dragging');\n            _this.$fill.addClass('is-dragging'); //\n            _this.$element.data('dragging', true);\n\n            curHandle = $(e.currentTarget);\n\n            $body.on('mousemove.zf.slider', function (e) {\n              e.preventDefault();\n              _this._handleEvent(e, curHandle);\n            }).on('mouseup.zf.slider', function (e) {\n              _this._handleEvent(e, curHandle);\n\n              $handle.removeClass('is-dragging');\n              _this.$fill.removeClass('is-dragging');\n              _this.$element.data('dragging', false);\n\n              $body.off('mousemove.zf.slider mouseup.zf.slider');\n            });\n          })\n          // prevent events triggered by touch\n          .on('selectstart.zf.slider touchmove.zf.slider', function (e) {\n            e.preventDefault();\n          });\n        }\n\n        $handle.off('keydown.zf.slider').on('keydown.zf.slider', function (e) {\n          var _$handle = $(this),\n              idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n              oldValue = parseFloat(_this.inputs.eq(idx).val()),\n              newValue;\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Slider', {\n            decrease: function () {\n              newValue = oldValue - _this.options.step;\n            },\n            increase: function () {\n              newValue = oldValue + _this.options.step;\n            },\n            decrease_fast: function () {\n              newValue = oldValue - _this.options.step * 10;\n            },\n            increase_fast: function () {\n              newValue = oldValue + _this.options.step * 10;\n            },\n            handled: function () {\n              // only set handle pos when event was handled specially\n              e.preventDefault();\n              _this._setHandlePos(_$handle, newValue, true);\n            }\n          });\n          /*if (newValue) { // if pressed key has special function, update value\n            e.preventDefault();\n            _this._setHandlePos(_$handle, newValue);\n          }*/\n        });\n      }\n\n      /**\n       * Destroys the slider plugin.\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.handles.off('.zf.slider');\n        this.inputs.off('.zf.slider');\n        this.$element.off('.zf.slider');\n\n        clearTimeout(this.timeout);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Slider;\n  }();\n\n  Slider.defaults = {\n    /**\n     * Minimum value for the slider scale.\n     * @option\n     * @example 0\n     */\n    start: 0,\n    /**\n     * Maximum value for the slider scale.\n     * @option\n     * @example 100\n     */\n    end: 100,\n    /**\n     * Minimum value change per change event.\n     * @option\n     * @example 1\n     */\n    step: 1,\n    /**\n     * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\n     * @option\n     * @example 0\n     */\n    initialStart: 0,\n    /**\n     * Value at which the right handle/second input should be set to on initialization.\n     * @option\n     * @example 100\n     */\n    initialEnd: 100,\n    /**\n     * Allows the input to be located outside the container and visible. Set to by the JS\n     * @option\n     * @example false\n     */\n    binding: false,\n    /**\n     * Allows the user to click/tap on the slider bar to select a value.\n     * @option\n     * @example true\n     */\n    clickSelect: true,\n    /**\n     * Set to true and use the `vertical` class to change alignment to vertical.\n     * @option\n     * @example false\n     */\n    vertical: false,\n    /**\n     * Allows the user to drag the slider handle(s) to select a value.\n     * @option\n     * @example true\n     */\n    draggable: true,\n    /**\n     * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\n     * @option\n     * @example false\n     */\n    disabled: false,\n    /**\n     * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\n     * @option\n     * @example false\n     */\n    doubleSided: false,\n    /**\n     * Potential future feature.\n     */\n    // steps: 100,\n    /**\n     * Number of decimal places the plugin should go to for floating point precision.\n     * @option\n     * @example 2\n     */\n    decimal: 2,\n    /**\n     * Time delay for dragged elements.\n     */\n    // dragDelay: 0,\n    /**\n     * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\n     * @option\n     * @example 200\n     */\n    moveTime: 200, //update this if changing the transition time in the sass\n    /**\n     * Class applied to disabled sliders.\n     * @option\n     * @example 'disabled'\n     */\n    disabledClass: 'disabled',\n    /**\n     * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\n     * @option\n     * @example false\n     */\n    invertVertical: false,\n    /**\n     * Milliseconds before the `changed.zf-slider` event is triggered after value change.\n     * @option\n     * @example 500\n     */\n    changedDelay: 500,\n    /**\n    * Basevalue for non-linear sliders\n    * @option\n    * @example 5\n    */\n    nonLinearBase: 5,\n    /**\n    * Basevalue for non-linear sliders, possible values are: 'linear', 'pow' & 'log'. Pow and Log use the nonLinearBase setting.\n    * @option\n    * @example 'linear'\n    */\n    positionValueFunction: 'linear'\n  };\n\n  function percent(frac, num) {\n    return frac / num;\n  }\n  function absPosition($handle, dir, clickPos, param) {\n    return Math.abs($handle.position()[dir] + $handle[param]() / 2 - clickPos);\n  }\n  function baseLog(base, value) {\n    return Math.log(value) / Math.log(base);\n  }\n\n  // Window exports\n  Foundation.plugin(Slider, 'Slider');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Sticky module.\n   * @module foundation.sticky\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   */\n\n  var Sticky = function () {\n    /**\n     * Creates a new instance of a sticky thing.\n     * @class\n     * @param {jQuery} element - jQuery object to make sticky.\n     * @param {Object} options - options object passed when creating the element programmatically.\n     */\n    function Sticky(element, options) {\n      _classCallCheck(this, Sticky);\n\n      this.$element = element;\n      this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Sticky');\n    }\n\n    /**\n     * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\n     * @function\n     * @private\n     */\n\n\n    _createClass(Sticky, [{\n      key: '_init',\n      value: function _init() {\n        var $parent = this.$element.parent('[data-sticky-container]'),\n            id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\n            _this = this;\n\n        if (!$parent.length) {\n          this.wasWrapped = true;\n        }\n        this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\n        this.$container.addClass(this.options.containerClass);\n\n        this.$element.addClass(this.options.stickyClass).attr({ 'data-resize': id });\n\n        this.scrollCount = this.options.checkEvery;\n        this.isStuck = false;\n        $(window).one('load.zf.sticky', function () {\n          //We calculate the container height to have correct values for anchor points offset calculation.\n          _this.containerHeight = _this.$element.css(\"display\") == \"none\" ? 0 : _this.$element[0].getBoundingClientRect().height;\n          _this.$container.css('height', _this.containerHeight);\n          _this.elemHeight = _this.containerHeight;\n          if (_this.options.anchor !== '') {\n            _this.$anchor = $('#' + _this.options.anchor);\n          } else {\n            _this._parsePoints();\n          }\n\n          _this._setSizes(function () {\n            var scroll = window.pageYOffset;\n            _this._calc(false, scroll);\n            //Unstick the element will ensure that proper classes are set.\n            if (!_this.isStuck) {\n              _this._removeSticky(scroll >= _this.topPoint ? false : true);\n            }\n          });\n          _this._events(id.split('-').reverse().join('-'));\n        });\n      }\n\n      /**\n       * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_parsePoints',\n      value: function _parsePoints() {\n        var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\n            btm = this.options.btmAnchor == \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\n            pts = [top, btm],\n            breaks = {};\n        for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\n          var pt;\n          if (typeof pts[i] === 'number') {\n            pt = pts[i];\n          } else {\n            var place = pts[i].split(':'),\n                anchor = $('#' + place[0]);\n\n            pt = anchor.offset().top;\n            if (place[1] && place[1].toLowerCase() === 'bottom') {\n              pt += anchor[0].getBoundingClientRect().height;\n            }\n          }\n          breaks[i] = pt;\n        }\n\n        this.points = breaks;\n        return;\n      }\n\n      /**\n       * Adds event handlers for the scrolling element.\n       * @private\n       * @param {String} id - psuedo-random id for unique scroll event listener.\n       */\n\n    }, {\n      key: '_events',\n      value: function _events(id) {\n        var _this = this,\n            scrollListener = this.scrollListener = 'scroll.zf.' + id;\n        if (this.isOn) {\n          return;\n        }\n        if (this.canStick) {\n          this.isOn = true;\n          $(window).off(scrollListener).on(scrollListener, function (e) {\n            if (_this.scrollCount === 0) {\n              _this.scrollCount = _this.options.checkEvery;\n              _this._setSizes(function () {\n                _this._calc(false, window.pageYOffset);\n              });\n            } else {\n              _this.scrollCount--;\n              _this._calc(false, window.pageYOffset);\n            }\n          });\n        }\n\n        this.$element.off('resizeme.zf.trigger').on('resizeme.zf.trigger', function (e, el) {\n          _this._setSizes(function () {\n            _this._calc(false);\n            if (_this.canStick) {\n              if (!_this.isOn) {\n                _this._events(id);\n              }\n            } else if (_this.isOn) {\n              _this._pauseListeners(scrollListener);\n            }\n          });\n        });\n      }\n\n      /**\n       * Removes event handlers for scroll and change events on anchor.\n       * @fires Sticky#pause\n       * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\n       */\n\n    }, {\n      key: '_pauseListeners',\n      value: function _pauseListeners(scrollListener) {\n        this.isOn = false;\n        $(window).off(scrollListener);\n\n        /**\n         * Fires when the plugin is paused due to resize event shrinking the view.\n         * @event Sticky#pause\n         * @private\n         */\n        this.$element.trigger('pause.zf.sticky');\n      }\n\n      /**\n       * Called on every `scroll` event and on `_init`\n       * fires functions based on booleans and cached values\n       * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\n       * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\n       */\n\n    }, {\n      key: '_calc',\n      value: function _calc(checkSizes, scroll) {\n        if (checkSizes) {\n          this._setSizes();\n        }\n\n        if (!this.canStick) {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n          return false;\n        }\n\n        if (!scroll) {\n          scroll = window.pageYOffset;\n        }\n\n        if (scroll >= this.topPoint) {\n          if (scroll <= this.bottomPoint) {\n            if (!this.isStuck) {\n              this._setSticky();\n            }\n          } else {\n            if (this.isStuck) {\n              this._removeSticky(false);\n            }\n          }\n        } else {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n        }\n      }\n\n      /**\n       * Causes the $element to become stuck.\n       * Adds `position: fixed;`, and helper classes.\n       * @fires Sticky#stuckto\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_setSticky',\n      value: function _setSticky() {\n        var _this = this,\n            stickTo = this.options.stickTo,\n            mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\n            css = {};\n\n        css[mrgn] = this.options[mrgn] + 'em';\n        css[stickTo] = 0;\n        css[notStuckTo] = 'auto';\n        this.isStuck = true;\n        this.$element.removeClass('is-anchored is-at-' + notStuckTo).addClass('is-stuck is-at-' + stickTo).css(css)\n        /**\n         * Fires when the $element has become `position: fixed;`\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\n         * @event Sticky#stuckto\n         */\n        .trigger('sticky.zf.stuckto:' + stickTo);\n        this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function () {\n          _this._setSizes();\n        });\n      }\n\n      /**\n       * Causes the $element to become unstuck.\n       * Removes `position: fixed;`, and helper classes.\n       * Adds other helper classes.\n       * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\n       * @fires Sticky#unstuckfrom\n       * @private\n       */\n\n    }, {\n      key: '_removeSticky',\n      value: function _removeSticky(isTop) {\n        var stickTo = this.options.stickTo,\n            stickToTop = stickTo === 'top',\n            css = {},\n            anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\n            mrgn = stickToTop ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickToTop ? 'bottom' : 'top',\n            topOrBottom = isTop ? 'top' : 'bottom';\n\n        css[mrgn] = 0;\n\n        css['bottom'] = 'auto';\n        if (isTop) {\n          css['top'] = 0;\n        } else {\n          css['top'] = anchorPt;\n        }\n\n        this.isStuck = false;\n        this.$element.removeClass('is-stuck is-at-' + stickTo).addClass('is-anchored is-at-' + topOrBottom).css(css)\n        /**\n         * Fires when the $element has become anchored.\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\n         * @event Sticky#unstuckfrom\n         */\n        .trigger('sticky.zf.unstuckfrom:' + topOrBottom);\n      }\n\n      /**\n       * Sets the $element and $container sizes for plugin.\n       * Calls `_setBreakPoints`.\n       * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\n       * @private\n       */\n\n    }, {\n      key: '_setSizes',\n      value: function _setSizes(cb) {\n        this.canStick = Foundation.MediaQuery.is(this.options.stickyOn);\n        if (!this.canStick) {\n          if (cb && typeof cb === 'function') {\n            cb();\n          }\n        }\n        var _this = this,\n            newElemWidth = this.$container[0].getBoundingClientRect().width,\n            comp = window.getComputedStyle(this.$container[0]),\n            pdngl = parseInt(comp['padding-left'], 10),\n            pdngr = parseInt(comp['padding-right'], 10);\n\n        if (this.$anchor && this.$anchor.length) {\n          this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\n        } else {\n          this._parsePoints();\n        }\n\n        this.$element.css({\n          'max-width': newElemWidth - pdngl - pdngr + 'px'\n        });\n\n        var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n        if (this.$element.css(\"display\") == \"none\") {\n          newContainerHeight = 0;\n        }\n        this.containerHeight = newContainerHeight;\n        this.$container.css({\n          height: newContainerHeight\n        });\n        this.elemHeight = newContainerHeight;\n\n        if (!this.isStuck) {\n          if (this.$element.hasClass('is-at-bottom')) {\n            var anchorPt = (this.points ? this.points[1] - this.$container.offset().top : this.anchorHeight) - this.elemHeight;\n            this.$element.css('top', anchorPt);\n          }\n        }\n\n        this._setBreakPoints(newContainerHeight, function () {\n          if (cb && typeof cb === 'function') {\n            cb();\n          }\n        });\n      }\n\n      /**\n       * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\n       * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\n       * @param {Function} cb - optional callback function to be called on completion.\n       * @private\n       */\n\n    }, {\n      key: '_setBreakPoints',\n      value: function _setBreakPoints(elemHeight, cb) {\n        if (!this.canStick) {\n          if (cb && typeof cb === 'function') {\n            cb();\n          } else {\n            return false;\n          }\n        }\n        var mTop = emCalc(this.options.marginTop),\n            mBtm = emCalc(this.options.marginBottom),\n            topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\n            bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\n\n        // topPoint = this.$anchor.offset().top || this.points[0],\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\n        winHeight = window.innerHeight;\n\n        if (this.options.stickTo === 'top') {\n          topPoint -= mTop;\n          bottomPoint -= elemHeight + mTop;\n        } else if (this.options.stickTo === 'bottom') {\n          topPoint -= winHeight - (elemHeight + mBtm);\n          bottomPoint -= winHeight - mBtm;\n        } else {\n          //this would be the stickTo: both option... tricky\n        }\n\n        this.topPoint = topPoint;\n        this.bottomPoint = bottomPoint;\n\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }\n\n      /**\n       * Destroys the current sticky element.\n       * Resets the element to the top position first.\n       * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._removeSticky(true);\n\n        this.$element.removeClass(this.options.stickyClass + ' is-anchored is-at-top').css({\n          height: '',\n          top: '',\n          bottom: '',\n          'max-width': ''\n        }).off('resizeme.zf.trigger');\n        if (this.$anchor && this.$anchor.length) {\n          this.$anchor.off('change.zf.sticky');\n        }\n        $(window).off(this.scrollListener);\n\n        if (this.wasWrapped) {\n          this.$element.unwrap();\n        } else {\n          this.$container.removeClass(this.options.containerClass).css({\n            height: ''\n          });\n        }\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Sticky;\n  }();\n\n  Sticky.defaults = {\n    /**\n     * Customizable container template. Add your own classes for styling and sizing.\n     * @option\n     * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\n     */\n    container: '<div data-sticky-container></div>',\n    /**\n     * Location in the view the element sticks to.\n     * @option\n     * @example 'top'\n     */\n    stickTo: 'top',\n    /**\n     * If anchored to a single element, the id of that element.\n     * @option\n     * @example 'exampleId'\n     */\n    anchor: '',\n    /**\n     * If using more than one element as anchor points, the id of the top anchor.\n     * @option\n     * @example 'exampleId:top'\n     */\n    topAnchor: '',\n    /**\n     * If using more than one element as anchor points, the id of the bottom anchor.\n     * @option\n     * @example 'exampleId:bottom'\n     */\n    btmAnchor: '',\n    /**\n     * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\n     * @option\n     * @example 1\n     */\n    marginTop: 1,\n    /**\n     * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\n     * @option\n     * @example 1\n     */\n    marginBottom: 1,\n    /**\n     * Breakpoint string that is the minimum screen size an element should become sticky.\n     * @option\n     * @example 'medium'\n     */\n    stickyOn: 'medium',\n    /**\n     * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\n     * @option\n     * @example 'sticky'\n     */\n    stickyClass: 'sticky',\n    /**\n     * Class applied to sticky container. Foundation defaults to `sticky-container`.\n     * @option\n     * @example 'sticky-container'\n     */\n    containerClass: 'sticky-container',\n    /**\n     * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\n     * @option\n     * @example 50\n     */\n    checkEvery: -1\n  };\n\n  /**\n   * Helper function to calculate em values\n   * @param Number {em} - number of em's to calculate into pixels\n   */\n  function emCalc(em) {\n    return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\n  }\n\n  // Window exports\n  Foundation.plugin(Sticky, 'Sticky');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Tabs module.\n   * @module foundation.tabs\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.timerAndImageLoader if tabs contain images\n   */\n\n  var Tabs = function () {\n    /**\n     * Creates a new instance of tabs.\n     * @class\n     * @fires Tabs#init\n     * @param {jQuery} element - jQuery object to make into tabs.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Tabs(element, options) {\n      _classCallCheck(this, Tabs);\n\n      this.$element = element;\n      this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n      this._init();\n      Foundation.registerPlugin(this, 'Tabs');\n      Foundation.Keyboard.register('Tabs', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'previous',\n        'ARROW_DOWN': 'next',\n        'ARROW_LEFT': 'previous'\n        // 'TAB': 'next',\n        // 'SHIFT_TAB': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n     * @private\n     */\n\n\n    _createClass(Tabs, [{\n      key: '_init',\n      value: function _init() {\n        var _this = this;\n\n        this.$element.attr({ 'role': 'tablist' });\n        this.$tabTitles = this.$element.find('.' + this.options.linkClass);\n        this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\n\n        this.$tabTitles.each(function () {\n          var $elem = $(this),\n              $link = $elem.find('a'),\n              isActive = $elem.hasClass('' + _this.options.linkActiveClass),\n              hash = $link[0].hash.slice(1),\n              linkId = $link[0].id ? $link[0].id : hash + '-label',\n              $tabContent = $('#' + hash);\n\n          $elem.attr({ 'role': 'presentation' });\n\n          $link.attr({\n            'role': 'tab',\n            'aria-controls': hash,\n            'aria-selected': isActive,\n            'id': linkId\n          });\n\n          $tabContent.attr({\n            'role': 'tabpanel',\n            'aria-hidden': !isActive,\n            'aria-labelledby': linkId\n          });\n\n          if (isActive && _this.options.autoFocus) {\n            $(window).load(function () {\n              $('html, body').animate({ scrollTop: $elem.offset().top }, _this.options.deepLinkSmudgeDelay, function () {\n                $link.focus();\n              });\n            });\n          }\n\n          //use browser to open a tab, if it exists in this tabset\n          if (_this.options.deepLink) {\n            var anchor = window.location.hash;\n            //need a hash and a relevant anchor in this tabset\n            if (anchor.length) {\n              var $link = $elem.find('[href=\"' + anchor + '\"]');\n              if ($link.length) {\n                _this.selectTab($(anchor));\n\n                //roll up a little to show the titles\n                if (_this.options.deepLinkSmudge) {\n                  $(window).load(function () {\n                    var offset = $elem.offset();\n                    $('html, body').animate({ scrollTop: offset.top }, _this.options.deepLinkSmudgeDelay);\n                  });\n                }\n\n                /**\n                  * Fires when the zplugin has deeplinked at pageload\n                  * @event Tabs#deeplink\n                  */\n                $elem.trigger('deeplink.zf.tabs', [$link, $(anchor)]);\n              }\n            }\n          }\n        });\n\n        if (this.options.matchHeight) {\n          var $images = this.$tabContent.find('img');\n\n          if ($images.length) {\n            Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n          } else {\n            this._setHeight();\n          }\n        }\n\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this._addKeyHandler();\n        this._addClickHandler();\n        this._setHeightMqHandler = null;\n\n        if (this.options.matchHeight) {\n          this._setHeightMqHandler = this._setHeight.bind(this);\n\n          $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n        }\n      }\n\n      /**\n       * Adds click handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addClickHandler',\n      value: function _addClickHandler() {\n        var _this = this;\n\n        this.$element.off('click.zf.tabs').on('click.zf.tabs', '.' + this.options.linkClass, function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          _this._handleTabChange($(this));\n        });\n      }\n\n      /**\n       * Adds keyboard event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addKeyHandler',\n      value: function _addKeyHandler() {\n        var _this = this;\n\n        this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\n          if (e.which === 9) return;\n\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              if (_this.options.wrapOnKeys) {\n                $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\n                $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\n              } else {\n                $prevElement = $elements.eq(Math.max(0, i - 1));\n                $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              }\n              return;\n            }\n          });\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Tabs', {\n            open: function () {\n              $element.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($element);\n            },\n            previous: function () {\n              $prevElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($prevElement);\n            },\n            next: function () {\n              $nextElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($nextElement);\n            },\n            handled: function () {\n              e.stopPropagation();\n              e.preventDefault();\n            }\n          });\n        });\n      }\n\n      /**\n       * Opens the tab `$targetContent` defined by `$target`. Collapses active tab.\n       * @param {jQuery} $target - Tab to open.\n       * @fires Tabs#change\n       * @function\n       */\n\n    }, {\n      key: '_handleTabChange',\n      value: function _handleTabChange($target) {\n\n        /**\n         * Check for active class on target. Collapse if exists.\n         */\n        if ($target.hasClass('' + this.options.linkActiveClass)) {\n          if (this.options.activeCollapse) {\n            this._collapseTab($target);\n\n            /**\n             * Fires when the zplugin has successfully collapsed tabs.\n             * @event Tabs#collapse\n             */\n            this.$element.trigger('collapse.zf.tabs', [$target]);\n          }\n          return;\n        }\n\n        var $oldTab = this.$element.find('.' + this.options.linkClass + '.' + this.options.linkActiveClass),\n            $tabLink = $target.find('[role=\"tab\"]'),\n            hash = $tabLink[0].hash,\n            $targetContent = this.$tabContent.find(hash);\n\n        //close old tab\n        this._collapseTab($oldTab);\n\n        //open new tab\n        this._openTab($target);\n\n        //either replace or update browser history\n        if (this.options.deepLink) {\n          var anchor = $target.find('a').attr('href');\n\n          if (this.options.updateHistory) {\n            history.pushState({}, '', anchor);\n          } else {\n            history.replaceState({}, '', anchor);\n          }\n        }\n\n        /**\n         * Fires when the plugin has successfully changed tabs.\n         * @event Tabs#change\n         */\n        this.$element.trigger('change.zf.tabs', [$target, $targetContent]);\n\n        //fire to children a mutation event\n        $targetContent.find(\"[data-mutate]\").trigger(\"mutateme.zf.trigger\");\n      }\n\n      /**\n       * Opens the tab `$targetContent` defined by `$target`.\n       * @param {jQuery} $target - Tab to Open.\n       * @function\n       */\n\n    }, {\n      key: '_openTab',\n      value: function _openTab($target) {\n        var $tabLink = $target.find('[role=\"tab\"]'),\n            hash = $tabLink[0].hash,\n            $targetContent = this.$tabContent.find(hash);\n\n        $target.addClass('' + this.options.linkActiveClass);\n\n        $tabLink.attr({ 'aria-selected': 'true' });\n\n        $targetContent.addClass('' + this.options.panelActiveClass).attr({ 'aria-hidden': 'false' });\n      }\n\n      /**\n       * Collapses `$targetContent` defined by `$target`.\n       * @param {jQuery} $target - Tab to Open.\n       * @function\n       */\n\n    }, {\n      key: '_collapseTab',\n      value: function _collapseTab($target) {\n        var $target_anchor = $target.removeClass('' + this.options.linkActiveClass).find('[role=\"tab\"]').attr({ 'aria-selected': 'false' });\n\n        $('#' + $target_anchor.attr('aria-controls')).removeClass('' + this.options.panelActiveClass).attr({ 'aria-hidden': 'true' });\n      }\n\n      /**\n       * Public method for selecting a content pane to display.\n       * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n       * @function\n       */\n\n    }, {\n      key: 'selectTab',\n      value: function selectTab(elem) {\n        var idStr;\n\n        if (typeof elem === 'object') {\n          idStr = elem[0].id;\n        } else {\n          idStr = elem;\n        }\n\n        if (idStr.indexOf('#') < 0) {\n          idStr = '#' + idStr;\n        }\n\n        var $target = this.$tabTitles.find('[href=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\n\n        this._handleTabChange($target);\n      }\n    }, {\n      key: '_setHeight',\n\n      /**\n       * Sets the height of each panel to the height of the tallest panel.\n       * If enabled in options, gets called on media query change.\n       * If loading content via external source, can be called directly or with _reflow.\n       * @function\n       * @private\n       */\n      value: function _setHeight() {\n        var max = 0;\n        this.$tabContent.find('.' + this.options.panelClass).css('height', '').each(function () {\n          var panel = $(this),\n              isActive = panel.hasClass('' + this.options.panelActiveClass);\n\n          if (!isActive) {\n            panel.css({ 'visibility': 'hidden', 'display': 'block' });\n          }\n\n          var temp = this.getBoundingClientRect().height;\n\n          if (!isActive) {\n            panel.css({\n              'visibility': '',\n              'display': ''\n            });\n          }\n\n          max = temp > max ? temp : max;\n        }).css('height', max + 'px');\n      }\n\n      /**\n       * Destroys an instance of an tabs.\n       * @fires Tabs#destroyed\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('.' + this.options.linkClass).off('.zf.tabs').hide().end().find('.' + this.options.panelClass).hide();\n\n        if (this.options.matchHeight) {\n          if (this._setHeightMqHandler != null) {\n            $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n          }\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tabs;\n  }();\n\n  Tabs.defaults = {\n    /**\n     * Allows the window to scroll to content of pane specified by hash anchor\n     * @option\n     * @example false\n     */\n    deepLink: false,\n\n    /**\n     * Adjust the deep link scroll to make sure the top of the tab panel is visible\n     * @option\n     * @example false\n     */\n    deepLinkSmudge: false,\n\n    /**\n     * Animation time (ms) for the deep link adjustment\n     * @option\n     * @example 300\n     */\n    deepLinkSmudgeDelay: 300,\n\n    /**\n     * Update the browser history with the open tab\n     * @option\n     * @example false\n     */\n    updateHistory: false,\n\n    /**\n     * Allows the window to scroll to content of active pane on load if set to true.\n     * Not recommended if more than one tab panel per page.\n     * @option\n     * @example false\n     */\n    autoFocus: false,\n\n    /**\n     * Allows keyboard input to 'wrap' around the tab links.\n     * @option\n     * @example true\n     */\n    wrapOnKeys: true,\n\n    /**\n     * Allows the tab content panes to match heights if set to true.\n     * @option\n     * @example false\n     */\n    matchHeight: false,\n\n    /**\n     * Allows active tabs to collapse when clicked.\n     * @option\n     * @example false\n     */\n    activeCollapse: false,\n\n    /**\n     * Class applied to `li`'s in tab link list.\n     * @option\n     * @example 'tabs-title'\n     */\n    linkClass: 'tabs-title',\n\n    /**\n     * Class applied to the active `li` in tab link list.\n     * @option\n     * @example 'is-active'\n     */\n    linkActiveClass: 'is-active',\n\n    /**\n     * Class applied to the content containers.\n     * @option\n     * @example 'tabs-panel'\n     */\n    panelClass: 'tabs-panel',\n\n    /**\n     * Class applied to the active content container.\n     * @option\n     * @example 'is-active'\n     */\n    panelActiveClass: 'is-active'\n  };\n\n  // Window exports\n  Foundation.plugin(Tabs, 'Tabs');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Toggler module.\n   * @module foundation.toggler\n   * @requires foundation.util.motion\n   * @requires foundation.util.triggers\n   */\n\n  var Toggler = function () {\n    /**\n     * Creates a new instance of Toggler.\n     * @class\n     * @fires Toggler#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Toggler(element, options) {\n      _classCallCheck(this, Toggler);\n\n      this.$element = element;\n      this.options = $.extend({}, Toggler.defaults, element.data(), options);\n      this.className = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Toggler');\n    }\n\n    /**\n     * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Toggler, [{\n      key: '_init',\n      value: function _init() {\n        var input;\n        // Parse animation classes if they were set\n        if (this.options.animate) {\n          input = this.options.animate.split(' ');\n\n          this.animationIn = input[0];\n          this.animationOut = input[1] || null;\n        }\n        // Otherwise, parse toggle class\n        else {\n            input = this.$element.data('toggler');\n            // Allow for a . at the beginning of the string\n            this.className = input[0] === '.' ? input.slice(1) : input;\n          }\n\n        // Add ARIA attributes to triggers\n        var id = this.$element[0].id;\n        $('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-controls', id);\n        // If the target is hidden, add aria-hidden\n        this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n      }\n\n      /**\n       * Initializes events for the toggle trigger.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n      }\n\n      /**\n       * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n       * @function\n       * @fires Toggler#on\n       * @fires Toggler#off\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        this[this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n      }\n    }, {\n      key: '_toggleClass',\n      value: function _toggleClass() {\n        this.$element.toggleClass(this.className);\n\n        var isOn = this.$element.hasClass(this.className);\n        if (isOn) {\n          /**\n           * Fires if the target element has the class after a toggle.\n           * @event Toggler#on\n           */\n          this.$element.trigger('on.zf.toggler');\n        } else {\n          /**\n           * Fires if the target element does not have the class after a toggle.\n           * @event Toggler#off\n           */\n          this.$element.trigger('off.zf.toggler');\n        }\n\n        this._updateARIA(isOn);\n        this.$element.find('[data-mutate]').trigger('mutateme.zf.trigger');\n      }\n    }, {\n      key: '_toggleAnimate',\n      value: function _toggleAnimate() {\n        var _this = this;\n\n        if (this.$element.is(':hidden')) {\n          Foundation.Motion.animateIn(this.$element, this.animationIn, function () {\n            _this._updateARIA(true);\n            this.trigger('on.zf.toggler');\n            this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n          });\n        } else {\n          Foundation.Motion.animateOut(this.$element, this.animationOut, function () {\n            _this._updateARIA(false);\n            this.trigger('off.zf.toggler');\n            this.find('[data-mutate]').trigger('mutateme.zf.trigger');\n          });\n        }\n      }\n    }, {\n      key: '_updateARIA',\n      value: function _updateARIA(isOn) {\n        this.$element.attr('aria-expanded', isOn ? true : false);\n      }\n\n      /**\n       * Destroys the instance of Toggler on the element.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.toggler');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Toggler;\n  }();\n\n  Toggler.defaults = {\n    /**\n     * Tells the plugin if the element should animated when toggled.\n     * @option\n     * @example false\n     */\n    animate: false\n  };\n\n  // Window exports\n  Foundation.plugin(Toggler, 'Toggler');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Tooltip module.\n   * @module foundation.tooltip\n   * @requires foundation.util.box\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.triggers\n   */\n\n  var Tooltip = function () {\n    /**\n     * Creates a new instance of a Tooltip.\n     * @class\n     * @fires Tooltip#init\n     * @param {jQuery} element - jQuery object to attach a tooltip to.\n     * @param {Object} options - object to extend the default configuration.\n     */\n    function Tooltip(element, options) {\n      _classCallCheck(this, Tooltip);\n\n      this.$element = element;\n      this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n\n      this.isActive = false;\n      this.isClick = false;\n      this._init();\n\n      Foundation.registerPlugin(this, 'Tooltip');\n    }\n\n    /**\n     * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n     * @private\n     */\n\n\n    _createClass(Tooltip, [{\n      key: '_init',\n      value: function _init() {\n        var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\n\n        this.options.positionClass = this.options.positionClass || this._getPositionClass(this.$element);\n        this.options.tipText = this.options.tipText || this.$element.attr('title');\n        this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n        if (this.options.allowHtml) {\n          this.template.appendTo(document.body).html(this.options.tipText).hide();\n        } else {\n          this.template.appendTo(document.body).text(this.options.tipText).hide();\n        }\n\n        this.$element.attr({\n          'title': '',\n          'aria-describedby': elemId,\n          'data-yeti-box': elemId,\n          'data-toggle': elemId,\n          'data-resize': elemId\n        }).addClass(this.options.triggerClass);\n\n        //helper variables to track movement on collisions\n        this.usedPositions = [];\n        this.counter = 4;\n        this.classChanged = false;\n\n        this._events();\n      }\n\n      /**\n       * Grabs the current positioning class, if present, and returns the value or an empty string.\n       * @private\n       */\n\n    }, {\n      key: '_getPositionClass',\n      value: function _getPositionClass(element) {\n        if (!element) {\n          return '';\n        }\n        // var position = element.attr('class').match(/top|left|right/g);\n        var position = element[0].className.match(/\\b(top|left|right)\\b/g);\n        position = position ? position[0] : '';\n        return position;\n      }\n    }, {\n      key: '_buildTemplate',\n\n      /**\n       * builds the tooltip element, adds attributes, and returns the template.\n       * @private\n       */\n      value: function _buildTemplate(id) {\n        var templateClasses = (this.options.tooltipClass + ' ' + this.options.positionClass + ' ' + this.options.templateClasses).trim();\n        var $template = $('<div></div>').addClass(templateClasses).attr({\n          'role': 'tooltip',\n          'aria-hidden': true,\n          'data-is-active': false,\n          'data-is-focus': false,\n          'id': id\n        });\n        return $template;\n      }\n\n      /**\n       * Function that gets called if a collision event is detected.\n       * @param {String} position - positioning class to try\n       * @private\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.template.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.template.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.template.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.template.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.template.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\n       * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n       * if the tooltip is larger than the screen width, default to full width - any user selected margin\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        var position = this._getPositionClass(this.template),\n            $tipDims = Foundation.Box.GetDimensions(this.template),\n            $anchorDims = Foundation.Box.GetDimensions(this.$element),\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset,\n            _this = this;\n\n        if ($tipDims.width >= $tipDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.template)) {\n          this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $anchorDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          return false;\n        }\n\n        this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\n       * reveals the tooltip, and fires an event to close any other open tooltips on the page\n       * @fires Tooltip#closeme\n       * @fires Tooltip#show\n       * @function\n       */\n\n    }, {\n      key: 'show',\n      value: function show() {\n        if (this.options.showOn !== 'all' && !Foundation.MediaQuery.is(this.options.showOn)) {\n          // console.error('The screen is too small to display this tooltip');\n          return false;\n        }\n\n        var _this = this;\n        this.template.css('visibility', 'hidden').show();\n        this._setPosition();\n\n        /**\n         * Fires to close all other open tooltips on the page\n         * @event Closeme#tooltip\n         */\n        this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n        this.template.attr({\n          'data-is-active': true,\n          'aria-hidden': false\n        });\n        _this.isActive = true;\n        // console.log(this.template);\n        this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function () {\n          //maybe do stuff?\n        });\n        /**\n         * Fires when the tooltip is shown\n         * @event Tooltip#show\n         */\n        this.$element.trigger('show.zf.tooltip');\n      }\n\n      /**\n       * Hides the current tooltip, and resets the positioning class if it was changed due to collision\n       * @fires Tooltip#hide\n       * @function\n       */\n\n    }, {\n      key: 'hide',\n      value: function hide() {\n        // console.log('hiding', this.$element.data('yeti-box'));\n        var _this = this;\n        this.template.stop().attr({\n          'aria-hidden': true,\n          'data-is-active': false\n        }).fadeOut(this.options.fadeOutDuration, function () {\n          _this.isActive = false;\n          _this.isClick = false;\n          if (_this.classChanged) {\n            _this.template.removeClass(_this._getPositionClass(_this.template)).addClass(_this.options.positionClass);\n\n            _this.usedPositions = [];\n            _this.counter = 4;\n            _this.classChanged = false;\n          }\n        });\n        /**\n         * fires when the tooltip is hidden\n         * @event Tooltip#hide\n         */\n        this.$element.trigger('hide.zf.tooltip');\n      }\n\n      /**\n       * adds event listeners for the tooltip and its anchor\n       * TODO combine some of the listeners like focus and mouseenter, etc.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        var $template = this.template;\n        var isFocus = false;\n\n        if (!this.options.disableHover) {\n\n          this.$element.on('mouseenter.zf.tooltip', function (e) {\n            if (!_this.isActive) {\n              _this.timeout = setTimeout(function () {\n                _this.show();\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.tooltip', function (e) {\n            clearTimeout(_this.timeout);\n            if (!isFocus || _this.isClick && !_this.options.clickOpen) {\n              _this.hide();\n            }\n          });\n        }\n\n        if (this.options.clickOpen) {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            if (_this.isClick) {\n              //_this.hide();\n              // _this.isClick = false;\n            } else {\n              _this.isClick = true;\n              if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n                _this.show();\n              }\n            }\n          });\n        } else {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            _this.isClick = true;\n          });\n        }\n\n        if (!this.options.disableForTouch) {\n          this.$element.on('tap.zf.tooltip touchend.zf.tooltip', function (e) {\n            _this.isActive ? _this.hide() : _this.show();\n          });\n        }\n\n        this.$element.on({\n          // 'toggle.zf.trigger': this.toggle.bind(this),\n          // 'close.zf.trigger': this.hide.bind(this)\n          'close.zf.trigger': this.hide.bind(this)\n        });\n\n        this.$element.on('focus.zf.tooltip', function (e) {\n          isFocus = true;\n          if (_this.isClick) {\n            // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\n            // a real focus, otherwise on hover and come back we get bad behavior\n            if (!_this.options.clickOpen) {\n              isFocus = false;\n            }\n            return false;\n          } else {\n            _this.show();\n          }\n        }).on('focusout.zf.tooltip', function (e) {\n          isFocus = false;\n          _this.isClick = false;\n          _this.hide();\n        }).on('resizeme.zf.trigger', function () {\n          if (_this.isActive) {\n            _this._setPosition();\n          }\n        });\n      }\n\n      /**\n       * adds a toggle method, in addition to the static show() & hide() functions\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n\n      /**\n       * Destroys an instance of tooltip, removes template element from the view.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.attr('title', this.template.text()).off('.zf.trigger .zf.tooltip').removeClass('has-tip top right left').removeAttr('aria-describedby aria-haspopup data-disable-hover data-resize data-toggle data-tooltip data-yeti-box');\n\n        this.template.remove();\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tooltip;\n  }();\n\n  Tooltip.defaults = {\n    disableForTouch: false,\n    /**\n     * Time, in ms, before a tooltip should open on hover.\n     * @option\n     * @example 200\n     */\n    hoverDelay: 200,\n    /**\n     * Time, in ms, a tooltip should take to fade into view.\n     * @option\n     * @example 150\n     */\n    fadeInDuration: 150,\n    /**\n     * Time, in ms, a tooltip should take to fade out of view.\n     * @option\n     * @example 150\n     */\n    fadeOutDuration: 150,\n    /**\n     * Disables hover events from opening the tooltip if set to true\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Optional addtional classes to apply to the tooltip template on init.\n     * @option\n     * @example 'my-cool-tip-class'\n     */\n    templateClasses: '',\n    /**\n     * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n     * @option\n     * @example 'tooltip'\n     */\n    tooltipClass: 'tooltip',\n    /**\n     * Class applied to the tooltip anchor element.\n     * @option\n     * @example 'has-tip'\n     */\n    triggerClass: 'has-tip',\n    /**\n     * Minimum breakpoint size at which to open the tooltip.\n     * @option\n     * @example 'small'\n     */\n    showOn: 'small',\n    /**\n     * Custom template to be used to generate markup for tooltip.\n     * @option\n     * @example '&lt;div class=\"tooltip\"&gt;&lt;/div&gt;'\n     */\n    template: '',\n    /**\n     * Text displayed in the tooltip template on open.\n     * @option\n     * @example 'Some cool space fact here.'\n     */\n    tipText: '',\n    touchCloseText: 'Tap to close.',\n    /**\n     * Allows the tooltip to remain open if triggered with a click or touch event.\n     * @option\n     * @example true\n     */\n    clickOpen: true,\n    /**\n     * Additional positioning classes, set by the JS\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the Y axis.\n     * @option\n     * @example 10\n     */\n    vOffset: 10,\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\n     * @option\n     * @example 12\n     */\n    hOffset: 12,\n    /**\n    * Allow HTML in tooltip. Warning: If you are loading user-generated content into tooltips,\n    * allowing HTML may open yourself up to XSS attacks.\n    * @option\n    * @example false\n    */\n    allowHtml: false\n  };\n\n  /**\n   * TODO utilize resize event trigger\n   */\n\n  // Window exports\n  Foundation.plugin(Tooltip, 'Tooltip');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveAccordionTabs module.\n   * @module foundation.responsiveAccordionTabs\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.timerAndImageLoader\n   * @requires foundation.util.motion\n   * @requires foundation.accordion\n   * @requires foundation.tabs\n   */\n\n  var ResponsiveAccordionTabs = function () {\n    /**\n     * Creates a new instance of a responsive accordion tabs.\n     * @class\n     * @fires ResponsiveAccordionTabs#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function ResponsiveAccordionTabs(element, options) {\n      _classCallCheck(this, ResponsiveAccordionTabs);\n\n      this.$element = $(element);\n      this.options = $.extend({}, this.$element.data(), options);\n      this.rules = this.$element.data('responsive-accordion-tabs');\n      this.currentMq = null;\n      this.currentPlugin = null;\n      if (!this.$element.attr('id')) {\n        this.$element.attr('id', Foundation.GetYoDigits(6, 'responsiveaccordiontabs'));\n      };\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveAccordionTabs');\n    }\n\n    /**\n     * Initializes the Menu by parsing the classes from the 'data-responsive-accordion-tabs' attribute on the element.\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveAccordionTabs, [{\n      key: '_init',\n      value: function _init() {\n        // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n        if (typeof this.rules === 'string') {\n          var rulesTree = {};\n\n          // Parse rules from \"classes\" pulled from data attribute\n          var rules = this.rules.split(' ');\n\n          // Iterate through every rule found\n          for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i].split('-');\n            var ruleSize = rule.length > 1 ? rule[0] : 'small';\n            var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n            if (MenuPlugins[rulePlugin] !== null) {\n              rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n            }\n          }\n\n          this.rules = rulesTree;\n        }\n\n        this._getAllOptions();\n\n        if (!$.isEmptyObject(this.rules)) {\n          this._checkMediaQueries();\n        }\n      }\n    }, {\n      key: '_getAllOptions',\n      value: function _getAllOptions() {\n        //get all defaults and options\n        var _this = this;\n        _this.allOptions = {};\n        for (var key in MenuPlugins) {\n          if (MenuPlugins.hasOwnProperty(key)) {\n            var obj = MenuPlugins[key];\n            try {\n              var dummyPlugin = $('<ul></ul>');\n              var tmpPlugin = new obj.plugin(dummyPlugin, _this.options);\n              for (var keyKey in tmpPlugin.options) {\n                if (tmpPlugin.options.hasOwnProperty(keyKey) && keyKey !== 'zfPlugin') {\n                  var objObj = tmpPlugin.options[keyKey];\n                  _this.allOptions[keyKey] = objObj;\n                }\n              }\n              tmpPlugin.destroy();\n            } catch (e) {}\n          }\n        }\n      }\n\n      /**\n       * Initializes events for the Menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          _this._checkMediaQueries();\n        });\n      }\n\n      /**\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_checkMediaQueries',\n      value: function _checkMediaQueries() {\n        var matchedMq,\n            _this = this;\n        // Iterate through each rule and find the last matching rule\n        $.each(this.rules, function (key) {\n          if (Foundation.MediaQuery.atLeast(key)) {\n            matchedMq = key;\n          }\n        });\n\n        // No match? No dice\n        if (!matchedMq) return;\n\n        // Plugin already initialized? We good\n        if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n        // Remove existing plugin-specific CSS classes\n        $.each(MenuPlugins, function (key, value) {\n          _this.$element.removeClass(value.cssClass);\n        });\n\n        // Add the CSS class for the new plugin\n        this.$element.addClass(this.rules[matchedMq].cssClass);\n\n        // Create an instance of the new plugin\n        if (this.currentPlugin) {\n          //don't know why but on nested elements data zfPlugin get's lost\n          if (!this.currentPlugin.$element.data('zfPlugin') && this.storezfData) this.currentPlugin.$element.data('zfPlugin', this.storezfData);\n          this.currentPlugin.destroy();\n        }\n        this._handleMarkup(this.rules[matchedMq].cssClass);\n        this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n        this.storezfData = this.currentPlugin.$element.data('zfPlugin');\n      }\n    }, {\n      key: '_handleMarkup',\n      value: function _handleMarkup(toSet) {\n        var _this = this,\n            fromString = 'accordion';\n        var $panels = $('[data-tabs-content=' + this.$element.attr('id') + ']');\n        if ($panels.length) fromString = 'tabs';\n        if (fromString === toSet) {\n          return;\n        };\n\n        var tabsTitle = _this.allOptions.linkClass ? _this.allOptions.linkClass : 'tabs-title';\n        var tabsPanel = _this.allOptions.panelClass ? _this.allOptions.panelClass : 'tabs-panel';\n\n        this.$element.removeAttr('role');\n        var $liHeads = this.$element.children('.' + tabsTitle + ',[data-accordion-item]').removeClass(tabsTitle).removeClass('accordion-item').removeAttr('data-accordion-item');\n        var $liHeadsA = $liHeads.children('a').removeClass('accordion-title');\n\n        if (fromString === 'tabs') {\n          $panels = $panels.children('.' + tabsPanel).removeClass(tabsPanel).removeAttr('role').removeAttr('aria-hidden').removeAttr('aria-labelledby');\n          $panels.children('a').removeAttr('role').removeAttr('aria-controls').removeAttr('aria-selected');\n        } else {\n          $panels = $liHeads.children('[data-tab-content]').removeClass('accordion-content');\n        };\n\n        $panels.css({ display: '', visibility: '' });\n        $liHeads.css({ display: '', visibility: '' });\n        if (toSet === 'accordion') {\n          $panels.each(function (key, value) {\n            $(value).appendTo($liHeads.get(key)).addClass('accordion-content').attr('data-tab-content', '').removeClass('is-active').css({ height: '' });\n            $('[data-tabs-content=' + _this.$element.attr('id') + ']').after('<div id=\"tabs-placeholder-' + _this.$element.attr('id') + '\"></div>').remove();\n            $liHeads.addClass('accordion-item').attr('data-accordion-item', '');\n            $liHeadsA.addClass('accordion-title');\n          });\n        } else if (toSet === 'tabs') {\n          var $tabsContent = $('[data-tabs-content=' + _this.$element.attr('id') + ']');\n          var $placeholder = $('#tabs-placeholder-' + _this.$element.attr('id'));\n          if ($placeholder.length) {\n            $tabsContent = $('<div class=\"tabs-content\"></div>').insertAfter($placeholder).attr('data-tabs-content', _this.$element.attr('id'));\n            $placeholder.remove();\n          } else {\n            $tabsContent = $('<div class=\"tabs-content\"></div>').insertAfter(_this.$element).attr('data-tabs-content', _this.$element.attr('id'));\n          };\n          $panels.each(function (key, value) {\n            var tempValue = $(value).appendTo($tabsContent).addClass(tabsPanel);\n            var hash = $liHeadsA.get(key).hash.slice(1);\n            var id = $(value).attr('id') || Foundation.GetYoDigits(6, 'accordion');\n            if (hash !== id) {\n              if (hash !== '') {\n                $(value).attr('id', hash);\n              } else {\n                hash = id;\n                $(value).attr('id', hash);\n                $($liHeadsA.get(key)).attr('href', $($liHeadsA.get(key)).attr('href').replace('#', '') + '#' + hash);\n              };\n            };\n            var isActive = $($liHeads.get(key)).hasClass('is-active');\n            if (isActive) {\n              tempValue.addClass('is-active');\n            };\n          });\n          $liHeads.addClass(tabsTitle);\n        };\n      }\n\n      /**\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        if (this.currentPlugin) this.currentPlugin.destroy();\n        $(window).off('.zf.ResponsiveAccordionTabs');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveAccordionTabs;\n  }();\n\n  ResponsiveAccordionTabs.defaults = {};\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    tabs: {\n      cssClass: 'tabs',\n      plugin: Foundation._plugins.tabs || null\n    },\n    accordion: {\n      cssClass: 'accordion',\n      plugin: Foundation._plugins.accordion || null\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveAccordionTabs, 'ResponsiveAccordionTabs');\n}(jQuery);","/*!\n * jQuery JavaScript Library v2.2.4\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-05-20T17:23Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Support: Firefox 18+\n// Can't be in strict mode, several libs including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n//\"use strict\";\nvar arr = [];\n\nvar document = window.document;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\tversion = \"2.2.4\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\n\t\tvar realStringObj = obj && obj.toString();\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar key;\n\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Not own constructor property must be Object\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj, \"constructor\" ) &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype || {}, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own\n\t\tfor ( key in obj ) {}\n\n\t\treturn key === undefined || hasOwn.call( obj, key );\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\n\t\t\t\tscript = document.createElement( \"script\" );\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t\t// and removal by using an indirect global eval\n\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE9-11+\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\n// JSHint would error on this code due to the Symbol not being defined in ES5.\n// Defining this global in .jshintrc would create a danger of using the global\n// unguarded in another place, it seems safer to just disable JSHint for these\n// three lines.\n/* jshint ignore: start */\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n/* jshint ignore: end */\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: iOS 8.2 (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.2.1\n * http://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2015-10-17\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// http://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, parent,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\n\t\t// Support: IE 11\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( document.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\treturn m ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\t// Support: Blackberry 4.6\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\n\t\t\t\t\tpos.index( cur ) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnotwhite = ( /\\S+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add( function() {\n\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 ||\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred.\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n} );\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n} );\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called\n\t\t// after the browser event has already occurred.\n\t\t// Support: IE9-10 only\n\t\t// Older IE sometimes signals \"interactive\" too soon\n\t\tif ( document.readyState === \"complete\" ||\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\twindow.setTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tregister: function( owner, initial ) {\n\t\tvar value = initial || {};\n\n\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t// use plain assignment\n\t\tif ( owner.nodeType ) {\n\t\t\towner[ this.expando ] = value;\n\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\n\t\t// configurability must be true to allow the property to be\n\t\t// deleted with the delete operator\n\t\t} else {\n\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\tvalue: value,\n\t\t\t\twritable: true,\n\t\t\t\tconfigurable: true\n\t\t\t} );\n\t\t}\n\t\treturn owner[ this.expando ];\n\t},\n\tcache: function( owner ) {\n\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return an empty object.\n\t\tif ( !acceptData( owner ) ) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.register( owner );\n\n\t\t} else {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <= 35-45+\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data, camelKey;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = dataUser.get( elem, key ) ||\n\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\n\t\t\t\t\t// This is for 2.2.x only\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\n\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = dataUser.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tcamelKey = jQuery.camelCase( key );\n\t\t\tthis.each( function() {\n\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = dataUser.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdataUser.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\n\t\t\t\t\tdataUser.set( this, key, value );\n\t\t\t\t}\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() { return tween.cur(); } :\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([\\w:-]+)/ );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE9\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE9-11+\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0-4.3, Safari<=5.1\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari<=5.1, Android<4.2\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE<=11+\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE9\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Support (at least): Chrome, IE9\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t//\n\t\t// Support: Firefox<=42+\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\n\t\tif ( delegateCount && cur.nodeType &&\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\n\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX +\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY +\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome<28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android<4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://code.google.com/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\n\n\t// Support: IE 10-11, Edge 10240+\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName( \"tbody\" )[ 0 ] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement( \"tbody\" ) ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <= 35-45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\n\t// Keep domManip exposed until 3.0 (gh-2225)\n\tdomManip: domManip,\n\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\n\n\nvar iframe,\n\telemdisplay = {\n\n\t\t// Support: Firefox\n\t\t// We have to pre-define these values for FF (#10227)\n\t\tHTML: \"block\",\n\t\tBODY: \"block\"\n\t};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\n\t\t\t\t.appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar documentElement = document.documentElement;\n\n\n\n( function() {\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE9-11+\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\t\tdiv.style.cssText =\n\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocumentElement.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.marginRight = \"50%\";\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\n\t\tdocumentElement.removeChild( container );\n\t}\n\n\tjQuery.extend( support, {\n\t\tpixelPosition: function() {\n\n\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t// No need to check if the test was already performed, though.\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\tboxSizingReliable: function() {\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelMarginRight: function() {\n\n\t\t\t// Support: Android 4.0-4.3\n\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\n\t\t\t// since that compresses better and they're computed together anyway.\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\n\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\tcomputeStyleTests();\n\t\t\t}\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\treliableMarginRight: function() {\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\tvar ret,\n\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\n\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\t\t\tdocumentElement.appendChild( container );\n\n\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\n\n\t\t\tdocumentElement.removeChild( container );\n\t\t\tdiv.removeChild( marginDiv );\n\n\t\t\treturn ret;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;\n\n\t// Support: Opera 12.1x only\n\t// Fall back to style even without computed\n\t// computed is undefined for elems on document fragments\n\tif ( ( ret === \"\" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\tret = jQuery.style( elem, name );\n\t}\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE9-11+\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = dataPriv.access(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\tdefaultDisplay( elem.nodeName )\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdataPriv.set(\n\t\t\t\t\telem,\n\t\t\t\t\t\"olddisplay\",\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\t\t\t\t\telem.offsetWidth === 0 ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ name ] = value;\n\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done( function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t} );\n\t\t}\n\t\tanim.done( function() {\n\t\t\tvar prop;\n\n\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t} );\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnotwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\n\t\topt.duration : opt.duration in jQuery.fx.speeds ?\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\twindow.clearInterval( timerId );\n\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS<=5.1, Android<=4.2+\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE<=11+\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: Android<=2.3\n\t// Options inside disabled selects are incorrectly marked as disabled\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Support: IE<=11+\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\treturn tabindex ?\n\t\t\t\t\tparseInt( tabindex, 10 ) :\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\n\t\t\t\t\t\t\t0 :\n\t\t\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnotwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 &&\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\n\t\t\t\t\t.indexOf( className ) > -1\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g,\n\trspaces = /[\\x20\\t\\r\\n\\f]+/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\n\t\t\t\t\t// Handle most common string cases\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\n\n\t\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) ).replace( rspaces, \" \" );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ?\n\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\n// Support: Firefox\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome, Safari\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE8-11+\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE8-11+\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each( function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t} ).end();\n\t}\n} );\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\treturn !jQuery.expr.filters.visible( elem );\n};\njQuery.expr.filters.visible = function( elem ) {\n\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t// Use OR instead of AND as the element is not visible if either is true\n\t// See tickets #10406 and #13132\n\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t} ) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\n\t\t\t\t// Support: IE9\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\tbox = elem.getBoundingClientRect();\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari<7-8+, Chrome<37-44+\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\tsize: function() {\n\t\treturn this.length;\n\t}\n} );\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\nreturn jQuery;\n}));\n","/**\n * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).\n * @version v4.0.4\n * @link https://github.com/ten1seven/what-input\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"whatInput\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"whatInput\"] = factory();\n\telse\n\t\troot[\"whatInput\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\tmodule.exports = (function() {\n\n\t  /*\n\t    ---------------\n\t    Variables\n\t    ---------------\n\t  */\n\n\t  // cache document.documentElement\n\t  var docElem = document.documentElement;\n\n\t  // last used input type\n\t  var currentInput = 'initial';\n\n\t  // last used input intent\n\t  var currentIntent = null;\n\n\t  // form input types\n\t  var formInputs = [\n\t    'input',\n\t    'select',\n\t    'textarea'\n\t  ];\n\n\t  // list of modifier keys commonly used with the mouse and\n\t  // can be safely ignored to prevent false keyboard detection\n\t  var ignoreMap = [\n\t    16, // shift\n\t    17, // control\n\t    18, // alt\n\t    91, // Windows key / left Apple cmd\n\t    93  // Windows menu / right Apple cmd\n\t  ];\n\n\t  // mapping of events to input types\n\t  var inputMap = {\n\t    'keyup': 'keyboard',\n\t    'mousedown': 'mouse',\n\t    'mousemove': 'mouse',\n\t    'MSPointerDown': 'pointer',\n\t    'MSPointerMove': 'pointer',\n\t    'pointerdown': 'pointer',\n\t    'pointermove': 'pointer',\n\t    'touchstart': 'touch'\n\t  };\n\n\t  // array of all used input types\n\t  var inputTypes = [];\n\n\t  // boolean: true if touch buffer timer is running\n\t  var isBuffering = false;\n\n\t  // map of IE 10 pointer events\n\t  var pointerMap = {\n\t    2: 'touch',\n\t    3: 'touch', // treat pen like touch\n\t    4: 'mouse'\n\t  };\n\n\t  // touch buffer timer\n\t  var touchTimer = null;\n\n\n\t  /*\n\t    ---------------\n\t    Set up\n\t    ---------------\n\t  */\n\n\t  var setUp = function() {\n\n\t    // add correct mouse wheel event mapping to `inputMap`\n\t    inputMap[detectWheel()] = 'mouse';\n\n\t    addListeners();\n\t    setInput();\n\t  };\n\n\n\t  /*\n\t    ---------------\n\t    Events\n\t    ---------------\n\t  */\n\n\t  var addListeners = function() {\n\n\t    // `pointermove`, `MSPointerMove`, `mousemove` and mouse wheel event binding\n\t    // can only demonstrate potential, but not actual, interaction\n\t    // and are treated separately\n\n\t    // pointer events (mouse, pen, touch)\n\t    if (window.PointerEvent) {\n\t      docElem.addEventListener('pointerdown', updateInput);\n\t      docElem.addEventListener('pointermove', setIntent);\n\t    } else if (window.MSPointerEvent) {\n\t      docElem.addEventListener('MSPointerDown', updateInput);\n\t      docElem.addEventListener('MSPointerMove', setIntent);\n\t    } else {\n\n\t      // mouse events\n\t      docElem.addEventListener('mousedown', updateInput);\n\t      docElem.addEventListener('mousemove', setIntent);\n\n\t      // touch events\n\t      if ('ontouchstart' in window) {\n\t        docElem.addEventListener('touchstart', touchBuffer);\n\t      }\n\t    }\n\n\t    // mouse wheel\n\t    docElem.addEventListener(detectWheel(), setIntent);\n\n\t    // keyboard events\n\t    docElem.addEventListener('keydown', updateInput);\n\t    docElem.addEventListener('keyup', updateInput);\n\t  };\n\n\t  // checks conditions before updating new input\n\t  var updateInput = function(event) {\n\n\t    // only execute if the touch buffer timer isn't running\n\t    if (!isBuffering) {\n\t      var eventKey = event.which;\n\t      var value = inputMap[event.type];\n\t      if (value === 'pointer') value = pointerType(event);\n\n\t      if (\n\t        currentInput !== value ||\n\t        currentIntent !== value\n\t      ) {\n\n\t        var activeInput = (\n\t          document.activeElement &&\n\t          formInputs.indexOf(document.activeElement.nodeName.toLowerCase()) === -1\n\t        ) ? true : false;\n\n\t        if (\n\t          value === 'touch' ||\n\n\t          // ignore mouse modifier keys\n\t          (value === 'mouse' && ignoreMap.indexOf(eventKey) === -1) ||\n\n\t          // don't switch if the current element is a form input\n\t          (value === 'keyboard' && activeInput)\n\t        ) {\n\n\t          // set the current and catch-all variable\n\t          currentInput = currentIntent = value;\n\n\t          setInput();\n\t        }\n\t      }\n\t    }\n\t  };\n\n\t  // updates the doc and `inputTypes` array with new input\n\t  var setInput = function() {\n\t    docElem.setAttribute('data-whatinput', currentInput);\n\t    docElem.setAttribute('data-whatintent', currentInput);\n\n\t    if (inputTypes.indexOf(currentInput) === -1) {\n\t      inputTypes.push(currentInput);\n\t      docElem.className += ' whatinput-types-' + currentInput;\n\t    }\n\t  };\n\n\t  // updates input intent for `mousemove` and `pointermove`\n\t  var setIntent = function(event) {\n\n\t    // only execute if the touch buffer timer isn't running\n\t    if (!isBuffering) {\n\t      var value = inputMap[event.type];\n\t      if (value === 'pointer') value = pointerType(event);\n\n\t      if (currentIntent !== value) {\n\t        currentIntent = value;\n\n\t        docElem.setAttribute('data-whatintent', currentIntent);\n\t      }\n\t    }\n\t  };\n\n\t  // buffers touch events because they frequently also fire mouse events\n\t  var touchBuffer = function(event) {\n\n\t    // clear the timer if it happens to be running\n\t    window.clearTimeout(touchTimer);\n\n\t    // set the current input\n\t    updateInput(event);\n\n\t    // set the isBuffering to `true`\n\t    isBuffering = true;\n\n\t    // run the timer\n\t    touchTimer = window.setTimeout(function() {\n\n\t      // if the timer runs out, set isBuffering back to `false`\n\t      isBuffering = false;\n\t    }, 200);\n\t  };\n\n\n\t  /*\n\t    ---------------\n\t    Utilities\n\t    ---------------\n\t  */\n\n\t  var pointerType = function(event) {\n\t   if (typeof event.pointerType === 'number') {\n\t      return pointerMap[event.pointerType];\n\t   } else {\n\t      return (event.pointerType === 'pen') ? 'touch' : event.pointerType; // treat pen like touch\n\t   }\n\t  };\n\n\t  // detect version of mouse wheel event to use\n\t  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n\t  var detectWheel = function() {\n\t    return 'onwheel' in document.createElement('div') ?\n\t      'wheel' : // Modern browsers support \"wheel\"\n\n\t      document.onmousewheel !== undefined ?\n\t        'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n\t        'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\n\t  };\n\n\n\t  /*\n\t    ---------------\n\t    Init\n\n\t    don't start script unless browser cuts the mustard\n\t    (also passes if polyfills are used)\n\t    ---------------\n\t  */\n\n\t  if (\n\t    'addEventListener' in window &&\n\t    Array.prototype.indexOf\n\t  ) {\n\t    setUp();\n\t  }\n\n\n\t  /*\n\t    ---------------\n\t    API\n\t    ---------------\n\t  */\n\n\t  return {\n\n\t    // returns string: the current input type\n\t    // opt: 'loose'|'strict'\n\t    // 'strict' (default): returns the same value as the `data-whatinput` attribute\n\t    // 'loose': includes `data-whatintent` value if it's more current than `data-whatinput`\n\t    ask: function(opt) { return (opt === 'loose') ? currentIntent : currentInput; },\n\n\t    // returns array: all the detected input types\n\t    types: function() { return inputTypes; }\n\n\t  };\n\n\t}());\n\n\n/***/ }\n/******/ ])\n});\n;","(function(root, factory) {\n  if(typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else {\n    root.forge = factory();\n  }\n})(this, function() {\n/**\n * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"node_modules/almond/almond\", function(){});\n\n/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n/* Utilities API */\nvar util = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick\n  if(typeof process !== 'undefined' && process.nextTick) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    // convert native buffer to forge buffer\n    // FIXME: support native buffers internally instead\n    var arr = new Uint8Array(b);\n    try {\n      this.data = String.fromCharCode.apply(null, arr);\n    } catch(e) {\n      for(var i = 0; i < arr.length; ++i) {\n        this.putByte(arr[i]);\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a UTF-8 encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer.\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  var rval = 0;\n  do {\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer.\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out into a UTF-8 string and clears them from the buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a UTF-8 string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a UTF-8 encoded string of the bytes from this buffer without modifying\n * the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of UTF-8 encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer.\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  var rval = 0;\n  do {\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer.\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out into a UTF-8 string and clears them from the buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a UTF-8 string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a UTF-8 encoded string of the bytes from this buffer without modifying\n * the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of UTF-8 encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n\n/**\n * Creates a buffer that stores bytes. A value may be given to put into the\n * buffer that is either a string of bytes or a UTF-16 string that will\n * be encoded using UTF-8 (to do the latter, specify 'utf8' as the encoding).\n *\n * @param [input] the bytes to wrap (as a string) or a UTF-16 string to encode\n *          as UTF-8.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * UTF-8 encodes the given UTF-16 encoded string (a standard JavaScript\n * string). Non-ASCII characters will be encoded as multiple bytes according\n * to UTF-8.\n *\n * @param str the string to encode.\n *\n * @return the UTF-8 encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a UTF-8 encoded string into a UTF-16 string.\n *\n * @param str the string to decode.\n *\n * @return the UTF-16 encoded string (standard JavaScript string).\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {}\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ?\n         (j - offset) :\n         out.subarray(0, j);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Parses the scheme, host, and port from an http(s) url.\n *\n * @param str the url string.\n *\n * @return the parsed url object or null if the url is invalid.\n */\nutil.parseUrl = function(str) {\n  // FIXME: this regex looks a bit broken\n  var regex = /^(https?):\\/\\/([^:&^\\/]*):?(\\d*)(.*)$/g;\n  regex.lastIndex = 0;\n  var m = regex.exec(str);\n  var url = (m === null) ? null : {\n    full: str,\n    scheme: m[1],\n    host: m[2],\n    port: m[3],\n    path: m[4]\n  };\n  if(url) {\n    url.fullHost = url.host;\n    if(url.port) {\n      if(url.port !== 80 && url.scheme === 'http') {\n        url.fullHost += ':' + url.port;\n      } else if(url.port !== 443 && url.scheme === 'https') {\n        url.fullHost += ':' + url.port;\n      }\n    } else if(url.scheme === 'http') {\n      url.port = 80;\n    } else if(url.scheme === 'https') {\n      url.port = 443;\n    }\n    url.full = url.scheme + '://' + url.fullHost;\n  }\n  return url;\n};\n\n/* Storage for query variables */\nvar _queryVariables = null;\n\n/**\n * Returns the window location query variables. Query is parsed on the first\n * call and the same object is returned on subsequent calls. The mapping\n * is from keys to an array of values. Parameters without values will have\n * an object key set but no value added to the value array. Values are\n * unescaped.\n *\n * ...?k1=v1&k2=v2:\n * {\n *   \"k1\": [\"v1\"],\n *   \"k2\": [\"v2\"]\n * }\n *\n * ...?k1=v1&k1=v2:\n * {\n *   \"k1\": [\"v1\", \"v2\"]\n * }\n *\n * ...?k1=v1&k2:\n * {\n *   \"k1\": [\"v1\"],\n *   \"k2\": []\n * }\n *\n * ...?k1=v1&k1:\n * {\n *   \"k1\": [\"v1\"]\n * }\n *\n * ...?k1&k1:\n * {\n *   \"k1\": []\n * }\n *\n * @param query the query string to parse (optional, default to cached\n *          results from parsing window location search query).\n *\n * @return object mapping keys to variables.\n */\nutil.getQueryVariables = function(query) {\n  var parse = function(q) {\n    var rval = {};\n    var kvpairs = q.split('&');\n    for(var i = 0; i < kvpairs.length; i++) {\n      var pos = kvpairs[i].indexOf('=');\n      var key;\n      var val;\n      if(pos > 0) {\n        key = kvpairs[i].substring(0, pos);\n        val = kvpairs[i].substring(pos + 1);\n      } else {\n        key = kvpairs[i];\n        val = null;\n      }\n      if(!(key in rval)) {\n        rval[key] = [];\n      }\n      // disallow overriding object prototype keys\n      if(!(key in Object.prototype) && val !== null) {\n        rval[key].push(unescape(val));\n      }\n    }\n    return rval;\n  };\n\n   var rval;\n   if(typeof(query) === 'undefined') {\n     // set cached variables if needed\n     if(_queryVariables === null) {\n       if(typeof(window) !== 'undefined' && window.location && window.location.search) {\n          // parse window search query\n          _queryVariables = parse(window.location.search.substring(1));\n       } else {\n          // no query variables available\n          _queryVariables = {};\n       }\n     }\n     rval = _queryVariables;\n   } else {\n     // parse given query\n     rval = parse(query);\n   }\n   return rval;\n};\n\n/**\n * Parses a fragment into a path and query. This method will take a URI\n * fragment and break it up as if it were the main URI. For example:\n *    /bar/baz?a=1&b=2\n * results in:\n *    {\n *       path: [\"bar\", \"baz\"],\n *       query: {\"k1\": [\"v1\"], \"k2\": [\"v2\"]}\n *    }\n *\n * @return object with a path array and query object.\n */\nutil.parseFragment = function(fragment) {\n  // default to whole fragment\n  var fp = fragment;\n  var fq = '';\n  // split into path and query if possible at the first '?'\n  var pos = fragment.indexOf('?');\n  if(pos > 0) {\n    fp = fragment.substring(0, pos);\n    fq = fragment.substring(pos + 1);\n  }\n  // split path based on '/' and ignore first element if empty\n  var path = fp.split('/');\n  if(path.length > 0 && path[0] === '') {\n    path.shift();\n  }\n  // convert query into object\n  var query = (fq === '') ? {} : util.getQueryVariables(fq);\n\n  return {\n    pathString: fp,\n    queryString: fq,\n    path: path,\n    query: query\n  };\n};\n\n/**\n * Makes a request out of a URI-like request string. This is intended to\n * be used where a fragment id (after a URI '#') is parsed as a URI with\n * path and query parts. The string should have a path beginning and\n * delimited by '/' and optional query parameters following a '?'. The\n * query should be a standard URL set of key value pairs delimited by\n * '&'. For backwards compatibility the initial '/' on the path is not\n * required. The request object has the following API, (fully described\n * in the method code):\n *    {\n *       path: <the path string part>.\n *       query: <the query string part>,\n *       getPath(i): get part or all of the split path array,\n *       getQuery(k, i): get part or all of a query key array,\n *       getQueryLast(k, _default): get last element of a query key array.\n *    }\n *\n * @return object with request parameters.\n */\nutil.makeRequest = function(reqString) {\n  var frag = util.parseFragment(reqString);\n  var req = {\n    // full path string\n    path: frag.pathString,\n    // full query string\n    query: frag.queryString,\n    /**\n     * Get path or element in path.\n     *\n     * @param i optional path index.\n     *\n     * @return path or part of path if i provided.\n     */\n    getPath: function(i) {\n      return (typeof(i) === 'undefined') ? frag.path : frag.path[i];\n    },\n    /**\n     * Get query, values for a key, or value for a key index.\n     *\n     * @param k optional query key.\n     * @param i optional query key index.\n     *\n     * @return query, values for a key, or value for a key index.\n     */\n    getQuery: function(k, i) {\n      var rval;\n      if(typeof(k) === 'undefined') {\n        rval = frag.query;\n      } else {\n        rval = frag.query[k];\n        if(rval && typeof(i) !== 'undefined') {\n           rval = rval[i];\n        }\n      }\n      return rval;\n    },\n    getQueryLast: function(k, _default) {\n      var rval;\n      var vals = req.getQuery(k);\n      if(vals) {\n        rval = vals[vals.length - 1];\n      } else {\n        rval = _default;\n      }\n      return rval;\n    }\n  };\n  return req;\n};\n\n/**\n * Makes a URI out of a path, an object with query parameters, and a\n * fragment. Uses jQuery.param() internally for query string creation.\n * If the path is an array, it will be joined with '/'.\n *\n * @param path string path or array of strings.\n * @param query object with query parameters. (optional)\n * @param fragment fragment string. (optional)\n *\n * @return string object with request parameters.\n */\nutil.makeLink = function(path, query, fragment) {\n  // join path parts if needed\n  path = jQuery.isArray(path) ? path.join('/') : path;\n\n  var qstr = jQuery.param(query || {});\n  fragment = fragment || '';\n  return path +\n    ((qstr.length > 0) ? ('?' + qstr) : '') +\n    ((fragment.length > 0) ? ('#' + fragment) : '');\n};\n\n/**\n * Follows a path of keys deep into an object hierarchy and set a value.\n * If a key does not exist or it's value is not an object, create an\n * object in it's place. This can be destructive to a object tree if\n * leaf nodes are given as non-final path keys.\n * Used to avoid exceptions from missing parts of the path.\n *\n * @param object the starting object.\n * @param keys an array of string keys.\n * @param value the value to set.\n */\nutil.setPath = function(object, keys, value) {\n  // need to start at an object\n  if(typeof(object) === 'object' && object !== null) {\n    var i = 0;\n    var len = keys.length;\n    while(i < len) {\n      var next = keys[i++];\n      if(i == len) {\n        // last\n        object[next] = value;\n      } else {\n        // more\n        var hasNext = (next in object);\n        if(!hasNext ||\n          (hasNext && typeof(object[next]) !== 'object') ||\n          (hasNext && object[next] === null)) {\n          object[next] = {};\n        }\n        object = object[next];\n      }\n    }\n  }\n};\n\n/**\n * Follows a path of keys deep into an object hierarchy and return a value.\n * If a key does not exist, create an object in it's place.\n * Used to avoid exceptions from missing parts of the path.\n *\n * @param object the starting object.\n * @param keys an array of string keys.\n * @param _default value to return if path not found.\n *\n * @return the value at the path if found, else default if given, else\n *         undefined.\n */\nutil.getPath = function(object, keys, _default) {\n  var i = 0;\n  var len = keys.length;\n  var hasNext = true;\n  while(hasNext && i < len &&\n    typeof(object) === 'object' && object !== null) {\n    var next = keys[i++];\n    hasNext = next in object;\n    if(hasNext) {\n      object = object[next];\n    }\n  }\n  return (hasNext ? object : _default);\n};\n\n/**\n * Follow a path of keys deep into an object hierarchy and delete the\n * last one. If a key does not exist, do nothing.\n * Used to avoid exceptions from missing parts of the path.\n *\n * @param object the starting object.\n * @param keys an array of string keys.\n */\nutil.deletePath = function(object, keys) {\n  // need to start at an object\n  if(typeof(object) === 'object' && object !== null) {\n    var i = 0;\n    var len = keys.length;\n    while(i < len) {\n      var next = keys[i++];\n      if(i == len) {\n        // last\n        delete object[next];\n      } else {\n        // more\n        if(!(next in object) ||\n          (typeof(object[next]) !== 'object') ||\n          (object[next] === null)) {\n           break;\n        }\n        object = object[next];\n      }\n    }\n  }\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'util';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/util',['require', 'module'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Cipher base API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nforge.cipher = forge.cipher || {};\n\n// registered algorithms\nforge.cipher.algorithms = forge.cipher.algorithms || {};\n\n/**\n * Creates a cipher object that can be used to encrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createCipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: false\n  });\n};\n\n/**\n * Creates a decipher object that can be used to decrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createDecipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: true\n  });\n};\n\n/**\n * Registers an algorithm by name. If the name was already registered, the\n * algorithm API object will be overwritten.\n *\n * @param name the name of the algorithm.\n * @param algorithm the algorithm API object.\n */\nforge.cipher.registerAlgorithm = function(name, algorithm) {\n  name = name.toUpperCase();\n  forge.cipher.algorithms[name] = algorithm;\n};\n\n/**\n * Gets a registered algorithm by name.\n *\n * @param name the name of the algorithm.\n *\n * @return the algorithm, if found, null if not.\n */\nforge.cipher.getAlgorithm = function(name) {\n  name = name.toUpperCase();\n  if(name in forge.cipher.algorithms) {\n    return forge.cipher.algorithms[name];\n  }\n  return null;\n};\n\nvar BlockCipher = forge.cipher.BlockCipher = function(options) {\n  this.algorithm = options.algorithm;\n  this.mode = this.algorithm.mode;\n  this.blockSize = this.mode.blockSize;\n  this._finish = false;\n  this._input = null;\n  this.output = null;\n  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;\n  this._decrypt = options.decrypt;\n  this.algorithm.initialize(options);\n};\n\n/**\n * Starts or restarts the encryption or decryption process, whichever\n * was previously configured.\n *\n * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array\n * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in\n * bytes, then it must be Nb (16) bytes in length. If the IV is given in as\n * 32-bit integers, then it must be 4 integers long.\n *\n * Note: an IV is not required or used in ECB mode.\n *\n * For GCM-mode, the IV must be given as a binary-encoded string of bytes or\n * a byte buffer. The number of bytes should be 12 (96 bits) as recommended\n * by NIST SP-800-38D but another length may be given.\n *\n * @param options the options to use:\n *          iv the initialization vector to use as a binary-encoded string of\n *            bytes, null to reuse the last ciphered block from a previous\n *            update() (this \"residue\" method is for legacy support only).\n *          additionalData additional authentication data as a binary-encoded\n *            string of bytes, for 'GCM' mode, (default: none).\n *          tagLength desired length of authentication tag, in bits, for\n *            'GCM' mode (0-128, default: 128).\n *          tag the authentication tag to check if decrypting, as a\n *             binary-encoded string of bytes.\n *          output the output the buffer to write to, null to create one.\n */\nBlockCipher.prototype.start = function(options) {\n  options = options || {};\n  var opts = {};\n  for(var key in options) {\n    opts[key] = options[key];\n  }\n  opts.decrypt = this._decrypt;\n  this._finish = false;\n  this._input = forge.util.createBuffer();\n  this.output = options.output || forge.util.createBuffer();\n  this.mode.start(opts);\n};\n\n/**\n * Updates the next block according to the cipher mode.\n *\n * @param input the buffer to read from.\n */\nBlockCipher.prototype.update = function(input) {\n  if(input) {\n    // input given, so empty it into the input buffer\n    this._input.putBuffer(input);\n  }\n\n  // do cipher operation until it needs more input and not finished\n  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&\n    !this._finish) {}\n\n  // free consumed memory from input buffer\n  this._input.compact();\n};\n\n/**\n * Finishes encrypting or decrypting.\n *\n * @param pad a padding function to use in CBC mode, null for default,\n *          signature(blockSize, buffer, decrypt).\n *\n * @return true if successful, false on error.\n */\nBlockCipher.prototype.finish = function(pad) {\n  // backwards-compatibility w/deprecated padding API\n  // Note: will overwrite padding functions even after another start() call\n  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {\n    this.mode.pad = function(input) {\n      return pad(this.blockSize, input, false);\n    };\n    this.mode.unpad = function(output) {\n      return pad(this.blockSize, output, true);\n    };\n  }\n\n  // build options for padding and afterFinish functions\n  var options = {};\n  options.decrypt = this._decrypt;\n\n  // get # of bytes that won't fill a block\n  options.overflow = this._input.length() % this.blockSize;\n\n  if(!this._decrypt && this.mode.pad) {\n    if(!this.mode.pad(this._input, options)) {\n      return false;\n    }\n  }\n\n  // do final update\n  this._finish = true;\n  this.update();\n\n  if(this._decrypt && this.mode.unpad) {\n    if(!this.mode.unpad(this.output, options)) {\n      return false;\n    }\n  }\n\n  if(this.mode.afterFinish) {\n    if(!this.mode.afterFinish(this.output, options)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'cipher';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/cipher',['require', 'module', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Supported cipher modes.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nforge.cipher = forge.cipher || {};\n\n// supported cipher modes\nvar modes = forge.cipher.modes = forge.cipher.modes || {};\n\n\n/** Electronic codebook (ECB) (Don't use this; it's not secure) **/\n\nmodes.ecb = function(options) {\n  options = options || {};\n  this.name = 'ECB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.ecb.prototype.start = function(options) {};\n\nmodes.ecb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.ecb.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n\n/** Cipher-block Chaining (CBC) **/\n\nmodes.cbc = function(options) {\n  options = options || {};\n  this.name = 'CBC';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.cbc.prototype.start = function(options) {\n  // Note: legacy support for using IV residue (has security flaws)\n  // if IV is null, reuse block from previous processing\n  if(options.iv === null) {\n    // must have a previous block\n    if(!this._prev) {\n      throw new Error('Invalid IV parameter.');\n    }\n    this._iv = this._prev.slice(0);\n  } else if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  } else {\n    // save IV as \"previous\" block\n    this._iv = transformIV(options.iv);\n    this._prev = this._iv.slice(0);\n  }\n};\n\nmodes.cbc.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  // CBC XOR's IV (or previous block) with plaintext\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = this._prev[i] ^ input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous block\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n  this._prev = this._outBlock;\n};\n\nmodes.cbc.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous ciphered block\n  // CBC XOR's IV (or previous block) with ciphertext\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._prev[i] ^ this._outBlock[i]);\n  }\n  this._prev = this._inBlock.slice(0);\n};\n\nmodes.cbc.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.cbc.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n\n/** Cipher feedback (CFB) **/\n\nmodes.cfb = function(options) {\n  options = options || {};\n  this.name = 'CFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32() ^ this._outBlock[i];\n      output.putInt32(this._inBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32() ^ this._outBlock[i];\n    this._partialOutput.putInt32(this._partialBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32();\n      output.putInt32(this._inBlock[i] ^ this._outBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32();\n    this._partialOutput.putInt32(this._partialBlock[i] ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\n/** Output feedback (OFB) **/\n\nmodes.ofb = function(options) {\n  options = options || {};\n  this.name = 'OFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(input.length() === 0) {\n    return true;\n  }\n\n  // encrypt block (OFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output and update next input\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n      this._inBlock[i] = this._outBlock[i];\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._outBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.decrypt = modes.ofb.prototype.encrypt;\n\n\n/** Counter (CTR) **/\n\nmodes.ctr = function(options) {\n  options = options || {};\n  this.name = 'CTR';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CTR always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes > 0) {\n      // block still incomplete, restore input buffer\n      input.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // block complete, increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.ctr.prototype.decrypt = modes.ctr.prototype.encrypt;\n\n\n/** Galois/Counter Mode (GCM) **/\n\nmodes.gcm = function(options) {\n  options = options || {};\n  this.name = 'GCM';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n\n  // R is actually this value concatenated with 120 more zero bits, but\n  // we only XOR against R so the other zeros have no effect -- we just\n  // apply this value to the first integer in a block\n  this._R = 0xE1000000;\n};\n\nmodes.gcm.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // ensure IV is a byte buffer\n  var iv = forge.util.createBuffer(options.iv);\n\n  // no ciphered data processed yet\n  this._cipherLength = 0;\n\n  // default additional data is none\n  var additionalData;\n  if('additionalData' in options) {\n    additionalData = forge.util.createBuffer(options.additionalData);\n  } else {\n    additionalData = forge.util.createBuffer();\n  }\n\n  // default tag length is 128 bits\n  if('tagLength' in options) {\n    this._tagLength = options.tagLength;\n  } else {\n    this._tagLength = 128;\n  }\n\n  // if tag is given, ensure tag matches tag length\n  this._tag = null;\n  if(options.decrypt) {\n    // save tag to check later\n    this._tag = forge.util.createBuffer(options.tag).getBytes();\n    if(this._tag.length !== (this._tagLength / 8)) {\n      throw new Error('Authentication tag does not match tag length.');\n    }\n  }\n\n  // create tmp storage for hash calculation\n  this._hashBlock = new Array(this._ints);\n\n  // no tag generated yet\n  this.tag = null;\n\n  // generate hash subkey\n  // (apply block cipher to \"zero\" block)\n  this._hashSubkey = new Array(this._ints);\n  this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey);\n\n  // generate table M\n  // use 4-bit tables (32 component decomposition of a 16 byte value)\n  // 8-bit tables take more space and are known to have security\n  // vulnerabilities (in native implementations)\n  this.componentBits = 4;\n  this._m = this.generateHashTable(this._hashSubkey, this.componentBits);\n\n  // Note: support IV length different from 96 bits? (only supporting\n  // 96 bits is recommended by NIST SP-800-38D)\n  // generate J_0\n  var ivLength = iv.length();\n  if(ivLength === 12) {\n    // 96-bit IV\n    this._j0 = [iv.getInt32(), iv.getInt32(), iv.getInt32(), 1];\n  } else {\n    // IV is NOT 96-bits\n    this._j0 = [0, 0, 0, 0];\n    while(iv.length() > 0) {\n      this._j0 = this.ghash(\n        this._hashSubkey, this._j0,\n        [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()]);\n    }\n    this._j0 = this.ghash(\n      this._hashSubkey, this._j0, [0, 0].concat(from64To32(ivLength * 8)));\n  }\n\n  // generate ICB (initial counter block)\n  this._inBlock = this._j0.slice(0);\n  inc32(this._inBlock);\n  this._partialBytes = 0;\n\n  // consume authentication data\n  additionalData = forge.util.createBuffer(additionalData);\n  // save additional data length as a BE 64-bit number\n  this._aDataLength = from64To32(additionalData.length() * 8);\n  // pad additional data to 128 bit (16 byte) block size\n  var overflow = additionalData.length() % this.blockSize;\n  if(overflow) {\n    additionalData.fillWithByte(0, this.blockSize - overflow);\n  }\n  this._s = [0, 0, 0, 0];\n  while(additionalData.length() > 0) {\n    this._s = this.ghash(this._hashSubkey, this._s, [\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32()\n    ]);\n  }\n};\n\nmodes.gcm.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(this._outBlock[i] ^= input.getInt32());\n    }\n    this._cipherLength += this.blockSize;\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes === 0 || finish) {\n      // handle overflow prior to hashing\n      if(finish) {\n        // get block overflow\n        var overflow = inputLength % this.blockSize;\n        this._cipherLength += overflow;\n        // truncate for hash function\n        this._partialOutput.truncate(this.blockSize - overflow);\n      } else {\n        this._cipherLength += this.blockSize;\n      }\n\n      // get output block for hashing\n      for(var i = 0; i < this._ints; ++i) {\n        this._outBlock[i] = this._partialOutput.getInt32();\n      }\n      this._partialOutput.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      // block still incomplete, restore input buffer, get partial output,\n      // and return early\n      input.read -= this.blockSize;\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // update hash block S\n  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.gcm.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength < this.blockSize && !(finish && inputLength > 0)) {\n    return true;\n  }\n\n  // encrypt block (GCM always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n\n  // update hash block S\n  this._hashBlock[0] = input.getInt32();\n  this._hashBlock[1] = input.getInt32();\n  this._hashBlock[2] = input.getInt32();\n  this._hashBlock[3] = input.getInt32();\n  this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);\n\n  // XOR hash input with output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i] ^ this._hashBlock[i]);\n  }\n\n  // increment cipher data length\n  if(inputLength < this.blockSize) {\n    this._cipherLength += inputLength % this.blockSize;\n  } else {\n    this._cipherLength += this.blockSize;\n  }\n};\n\nmodes.gcm.prototype.afterFinish = function(output, options) {\n  var rval = true;\n\n  // handle overflow\n  if(options.decrypt && options.overflow) {\n    output.truncate(this.blockSize - options.overflow);\n  }\n\n  // handle authentication tag\n  this.tag = forge.util.createBuffer();\n\n  // concatenate additional data length with cipher length\n  var lengths = this._aDataLength.concat(from64To32(this._cipherLength * 8));\n\n  // include lengths in hash\n  this._s = this.ghash(this._hashSubkey, this._s, lengths);\n\n  // do GCTR(J_0, S)\n  var tag = [];\n  this.cipher.encrypt(this._j0, tag);\n  for(var i = 0; i < this._ints; ++i) {\n    this.tag.putInt32(this._s[i] ^ tag[i]);\n  }\n\n  // trim tag to length\n  this.tag.truncate(this.tag.length() % (this._tagLength / 8));\n\n  // check authentication tag\n  if(options.decrypt && this.tag.bytes() !== this._tag) {\n    rval = false;\n  }\n\n  return rval;\n};\n\n/**\n * See NIST SP-800-38D 6.3 (Algorithm 1). This function performs Galois\n * field multiplication. The field, GF(2^128), is defined by the polynomial:\n *\n * x^128 + x^7 + x^2 + x + 1\n *\n * Which is represented in little-endian binary form as: 11100001 (0xe1). When\n * the value of a coefficient is 1, a bit is set. The value R, is the\n * concatenation of this value and 120 zero bits, yielding a 128-bit value\n * which matches the block size.\n *\n * This function will multiply two elements (vectors of bytes), X and Y, in\n * the field GF(2^128). The result is initialized to zero. For each bit of\n * X (out of 128), x_i, if x_i is set, then the result is multiplied (XOR'd)\n * by the current value of Y. For each bit, the value of Y will be raised by\n * a power of x (multiplied by the polynomial x). This can be achieved by\n * shifting Y once to the right. If the current value of Y, prior to being\n * multiplied by x, has 0 as its LSB, then it is a 127th degree polynomial.\n * Otherwise, we must divide by R after shifting to find the remainder.\n *\n * @param x the first block to multiply by the second.\n * @param y the second block to multiply by the first.\n *\n * @return the block result of the multiplication.\n */\nmodes.gcm.prototype.multiply = function(x, y) {\n  var z_i = [0, 0, 0, 0];\n  var v_i = y.slice(0);\n\n  // calculate Z_128 (block has 128 bits)\n  for(var i = 0; i < 128; ++i) {\n    // if x_i is 0, Z_{i+1} = Z_i (unchanged)\n    // else Z_{i+1} = Z_i ^ V_i\n    // get x_i by finding 32-bit int position, then left shift 1 by remainder\n    var x_i = x[(i / 32) | 0] & (1 << (31 - i % 32));\n    if(x_i) {\n      z_i[0] ^= v_i[0];\n      z_i[1] ^= v_i[1];\n      z_i[2] ^= v_i[2];\n      z_i[3] ^= v_i[3];\n    }\n\n    // if LSB(V_i) is 1, V_i = V_i >> 1\n    // else V_i = (V_i >> 1) ^ R\n    this.pow(v_i, v_i);\n  }\n\n  return z_i;\n};\n\nmodes.gcm.prototype.pow = function(x, out) {\n  // if LSB(x) is 1, x = x >>> 1\n  // else x = (x >>> 1) ^ R\n  var lsb = x[3] & 1;\n\n  // always do x >>> 1:\n  // starting with the rightmost integer, shift each integer to the right\n  // one bit, pulling in the bit from the integer to the left as its top\n  // most bit (do this for the last 3 integers)\n  for(var i = 3; i > 0; --i) {\n    out[i] = (x[i] >>> 1) | ((x[i - 1] & 1) << 31);\n  }\n  // shift the first integer normally\n  out[0] = x[0] >>> 1;\n\n  // if lsb was not set, then polynomial had a degree of 127 and doesn't\n  // need to divided; otherwise, XOR with R to find the remainder; we only\n  // need to XOR the first integer since R technically ends w/120 zero bits\n  if(lsb) {\n    out[0] ^= this._R;\n  }\n};\n\nmodes.gcm.prototype.tableMultiply = function(x) {\n  // assumes 4-bit tables are used\n  var z = [0, 0, 0, 0];\n  for(var i = 0; i < 32; ++i) {\n    var idx = (i / 8) | 0;\n    var x_i = (x[idx] >>> ((7 - (i % 8)) * 4)) & 0xF;\n    var ah = this._m[i][x_i];\n    z[0] ^= ah[0];\n    z[1] ^= ah[1];\n    z[2] ^= ah[2];\n    z[3] ^= ah[3];\n  }\n  return z;\n};\n\n/**\n * A continuing version of the GHASH algorithm that operates on a single\n * block. The hash block, last hash value (Ym) and the new block to hash\n * are given.\n *\n * @param h the hash block.\n * @param y the previous value for Ym, use [0, 0, 0, 0] for a new hash.\n * @param x the block to hash.\n *\n * @return the hashed value (Ym).\n */\nmodes.gcm.prototype.ghash = function(h, y, x) {\n  y[0] ^= x[0];\n  y[1] ^= x[1];\n  y[2] ^= x[2];\n  y[3] ^= x[3];\n  return this.tableMultiply(y);\n  //return this.multiply(y, h);\n};\n\n/**\n * Precomputes a table for multiplying against the hash subkey. This\n * mechanism provides a substantial speed increase over multiplication\n * performed without a table. The table-based multiplication this table is\n * for solves X * H by multiplying each component of X by H and then\n * composing the results together using XOR.\n *\n * This function can be used to generate tables with different bit sizes\n * for the components, however, this implementation assumes there are\n * 32 components of X (which is a 16 byte vector), therefore each component\n * takes 4-bits (so the table is constructed with bits=4).\n *\n * @param h the hash subkey.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateHashTable = function(h, bits) {\n  // TODO: There are further optimizations that would use only the\n  // first table M_0 (or some variant) along with a remainder table;\n  // this can be explored in the future\n  var multiplier = 8 / bits;\n  var perInt = 4 * multiplier;\n  var size = 16 * multiplier;\n  var m = new Array(size);\n  for(var i = 0; i < size; ++i) {\n    var tmp = [0, 0, 0, 0];\n    var idx = (i / perInt) | 0;\n    var shft = ((perInt - 1 - (i % perInt)) * bits);\n    tmp[idx] = (1 << (bits - 1)) << shft;\n    m[i] = this.generateSubHashTable(this.multiply(tmp, h), bits);\n  }\n  return m;\n};\n\n/**\n * Generates a table for multiplying against the hash subkey for one\n * particular component (out of all possible component values).\n *\n * @param mid the pre-multiplied value for the middle key of the table.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateSubHashTable = function(mid, bits) {\n  // compute the table quickly by minimizing the number of\n  // POW operations -- they only need to be performed for powers of 2,\n  // all other entries can be composed from those powers using XOR\n  var size = 1 << bits;\n  var half = size >>> 1;\n  var m = new Array(size);\n  m[half] = mid.slice(0);\n  var i = half >>> 1;\n  while(i > 0) {\n    // raise m0[2 * i] and store in m0[i]\n    this.pow(m[2 * i], m[i] = []);\n    i >>= 1;\n  }\n  i = 2;\n  while(i < half) {\n    for(var j = 1; j < i; ++j) {\n      var m_i = m[i];\n      var m_j = m[j];\n      m[i + j] = [\n        m_i[0] ^ m_j[0],\n        m_i[1] ^ m_j[1],\n        m_i[2] ^ m_j[2],\n        m_i[3] ^ m_j[3]\n      ];\n    }\n    i *= 2;\n  }\n  m[0] = [0, 0, 0, 0];\n  /* Note: We could avoid storing these by doing composition during multiply\n  calculate top half using composition by speed is preferred. */\n  for(i = half + 1; i < size; ++i) {\n    var c = m[i ^ half];\n    m[i] = [mid[0] ^ c[0], mid[1] ^ c[1], mid[2] ^ c[2], mid[3] ^ c[3]];\n  }\n  return m;\n};\n\n\n/** Utility functions */\n\nfunction transformIV(iv) {\n  if(typeof iv === 'string') {\n    // convert iv string into byte buffer\n    iv = forge.util.createBuffer(iv);\n  }\n\n  if(forge.util.isArray(iv) && iv.length > 4) {\n    // convert iv byte array into byte buffer\n    var tmp = iv;\n    iv = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      iv.putByte(tmp[i]);\n    }\n  }\n  if(!forge.util.isArray(iv)) {\n    // convert iv byte buffer into 32-bit integer array\n    iv = [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()];\n  }\n\n  return iv;\n}\n\nfunction inc32(block) {\n  // increment last 32 bits of block only\n  block[block.length - 1] = (block[block.length - 1] + 1) & 0xFFFFFFFF;\n}\n\nfunction from64To32(num) {\n  // convert 64-bit number to two BE Int32s\n  return [(num / 0x100000000) | 0, num & 0xFFFFFFFF];\n}\n\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'cipherModes';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/cipherModes',['require', 'module', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Advanced Encryption Standard (AES) implementation.\n *\n * This implementation is based on the public domain library 'jscrypto' which\n * was written by:\n *\n * Emily Stark (estark@stanford.edu)\n * Mike Hamburg (mhamburg@stanford.edu)\n * Dan Boneh (dabo@cs.stanford.edu)\n *\n * Parts of this code are based on the OpenSSL implementation of AES:\n * http://www.openssl.org\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n/* AES API */\nforge.aes = forge.aes || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new AES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the AES algorithm object.\n */\nforge.aes.Algorithm = function(name, mode) {\n  if(!init) {\n    initialize();\n  }\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 16,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this AES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.aes.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = options.key;\n  var tmp;\n\n  /* Note: The key may be a string of bytes, an array of bytes, a byte\n    buffer, or an array of 32-bit integers. If the key is in bytes, then\n    it must be 16, 24, or 32 bytes in length. If it is in 32-bit\n    integers, it must be 4, 6, or 8 integers long. */\n\n  if(typeof key === 'string' &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key string into byte buffer\n    key = forge.util.createBuffer(key);\n  } else if(forge.util.isArray(key) &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key integer array into byte buffer\n    tmp = key;\n    key = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      key.putByte(tmp[i]);\n    }\n  }\n\n  // convert key byte buffer into 32-bit integer array\n  if(!forge.util.isArray(key)) {\n    tmp = key;\n    key = [];\n\n    // key lengths of 16, 24, 32 bytes allowed\n    var len = tmp.length();\n    if(len === 16 || len === 24 || len === 32) {\n      len = len >>> 2;\n      for(var i = 0; i < len; ++i) {\n        key.push(tmp.getInt32());\n      }\n    }\n  }\n\n  // key must be an array of 32-bit integers by now\n  if(!forge.util.isArray(key) ||\n    !(key.length === 4 || key.length === 6 || key.length === 8)) {\n    throw new Error('Invalid key parameter.');\n  }\n\n  // encryption operation is always used for these modes\n  var mode = this.mode.name;\n  var encryptOp = (['CFB', 'OFB', 'CTR', 'GCM'].indexOf(mode) !== -1);\n\n  // do key expansion\n  this._w = _expandKey(key, options.decrypt && !encryptOp);\n  this._init = true;\n};\n\n/**\n * Expands a key. Typically only used for testing.\n *\n * @param key the symmetric key to expand, as an array of 32-bit words.\n * @param decrypt true to expand for decryption, false for encryption.\n *\n * @return the expanded key.\n */\nforge.aes._expandKey = function(key, decrypt) {\n  if(!init) {\n    initialize();\n  }\n  return _expandKey(key, decrypt);\n};\n\n/**\n * Updates a single block. Typically only used for testing.\n *\n * @param w the expanded key to use.\n * @param input an array of block-size 32-bit words.\n * @param output an array of block-size 32-bit words.\n * @param decrypt true to decrypt, false to encrypt.\n */\nforge.aes._updateBlock = _updateBlock;\n\n\n/** Register AES algorithms **/\n\nregisterAlgorithm('AES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('AES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('AES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('AES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('AES-CTR', forge.cipher.modes.ctr);\nregisterAlgorithm('AES-GCM', forge.cipher.modes.gcm);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.aes.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n\n/** AES implementation **/\n\nvar init = false; // not yet initialized\nvar Nb = 4;       // number of words comprising the state (AES = 4)\nvar sbox;         // non-linear substitution table used in key expansion\nvar isbox;        // inversion of sbox\nvar rcon;         // round constant word array\nvar mix;          // mix-columns table\nvar imix;         // inverse mix-columns table\n\n/**\n * Performs initialization, ie: precomputes tables to optimize for speed.\n *\n * One way to understand how AES works is to imagine that 'addition' and\n * 'multiplication' are interfaces that require certain mathematical\n * properties to hold true (ie: they are associative) but they might have\n * different implementations and produce different kinds of results ...\n * provided that their mathematical properties remain true. AES defines\n * its own methods of addition and multiplication but keeps some important\n * properties the same, ie: associativity and distributivity. The\n * explanation below tries to shed some light on how AES defines addition\n * and multiplication of bytes and 32-bit words in order to perform its\n * encryption and decryption algorithms.\n *\n * The basics:\n *\n * The AES algorithm views bytes as binary representations of polynomials\n * that have either 1 or 0 as the coefficients. It defines the addition\n * or subtraction of two bytes as the XOR operation. It also defines the\n * multiplication of two bytes as a finite field referred to as GF(2^8)\n * (Note: 'GF' means \"Galois Field\" which is a field that contains a finite\n * number of elements so GF(2^8) has 256 elements).\n *\n * This means that any two bytes can be represented as binary polynomials;\n * when they multiplied together and modularly reduced by an irreducible\n * polynomial of the 8th degree, the results are the field GF(2^8). The\n * specific irreducible polynomial that AES uses in hexadecimal is 0x11b.\n * This multiplication is associative with 0x01 as the identity:\n *\n * (b * 0x01 = GF(b, 0x01) = b).\n *\n * The operation GF(b, 0x02) can be performed at the byte level by left\n * shifting b once and then XOR'ing it (to perform the modular reduction)\n * with 0x11b if b is >= 128. Repeated application of the multiplication\n * of 0x02 can be used to implement the multiplication of any two bytes.\n *\n * For instance, multiplying 0x57 and 0x13, denoted as GF(0x57, 0x13), can\n * be performed by factoring 0x13 into 0x01, 0x02, and 0x10. Then these\n * factors can each be multiplied by 0x57 and then added together. To do\n * the multiplication, values for 0x57 multiplied by each of these 3 factors\n * can be precomputed and stored in a table. To add them, the values from\n * the table are XOR'd together.\n *\n * AES also defines addition and multiplication of words, that is 4-byte\n * numbers represented as polynomials of 3 degrees where the coefficients\n * are the values of the bytes.\n *\n * The word [a0, a1, a2, a3] is a polynomial a3x^3 + a2x^2 + a1x + a0.\n *\n * Addition is performed by XOR'ing like powers of x. Multiplication\n * is performed in two steps, the first is an algebriac expansion as\n * you would do normally (where addition is XOR). But the result is\n * a polynomial larger than 3 degrees and thus it cannot fit in a word. So\n * next the result is modularly reduced by an AES-specific polynomial of\n * degree 4 which will always produce a polynomial of less than 4 degrees\n * such that it will fit in a word. In AES, this polynomial is x^4 + 1.\n *\n * The modular product of two polynomials 'a' and 'b' is thus:\n *\n * d(x) = d3x^3 + d2x^2 + d1x + d0\n * with\n * d0 = GF(a0, b0) ^ GF(a3, b1) ^ GF(a2, b2) ^ GF(a1, b3)\n * d1 = GF(a1, b0) ^ GF(a0, b1) ^ GF(a3, b2) ^ GF(a2, b3)\n * d2 = GF(a2, b0) ^ GF(a1, b1) ^ GF(a0, b2) ^ GF(a3, b3)\n * d3 = GF(a3, b0) ^ GF(a2, b1) ^ GF(a1, b2) ^ GF(a0, b3)\n *\n * As a matrix:\n *\n * [d0] = [a0 a3 a2 a1][b0]\n * [d1]   [a1 a0 a3 a2][b1]\n * [d2]   [a2 a1 a0 a3][b2]\n * [d3]   [a3 a2 a1 a0][b3]\n *\n * Special polynomials defined by AES (0x02 == {02}):\n * a(x)    = {03}x^3 + {01}x^2 + {01}x + {02}\n * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}.\n *\n * These polynomials are used in the MixColumns() and InverseMixColumns()\n * operations, respectively, to cause each element in the state to affect\n * the output (referred to as diffusing).\n *\n * RotWord() uses: a0 = a1 = a2 = {00} and a3 = {01}, which is the\n * polynomial x3.\n *\n * The ShiftRows() method modifies the last 3 rows in the state (where\n * the state is 4 words with 4 bytes per word) by shifting bytes cyclically.\n * The 1st byte in the second row is moved to the end of the row. The 1st\n * and 2nd bytes in the third row are moved to the end of the row. The 1st,\n * 2nd, and 3rd bytes are moved in the fourth row.\n *\n * More details on how AES arithmetic works:\n *\n * In the polynomial representation of binary numbers, XOR performs addition\n * and subtraction and multiplication in GF(2^8) denoted as GF(a, b)\n * corresponds with the multiplication of polynomials modulo an irreducible\n * polynomial of degree 8. In other words, for AES, GF(a, b) will multiply\n * polynomial 'a' with polynomial 'b' and then do a modular reduction by\n * an AES-specific irreducible polynomial of degree 8.\n *\n * A polynomial is irreducible if its only divisors are one and itself. For\n * the AES algorithm, this irreducible polynomial is:\n *\n * m(x) = x^8 + x^4 + x^3 + x + 1,\n *\n * or {01}{1b} in hexadecimal notation, where each coefficient is a bit:\n * 100011011 = 283 = 0x11b.\n *\n * For example, GF(0x57, 0x83) = 0xc1 because\n *\n * 0x57 = 87  = 01010111 = x^6 + x^4 + x^2 + x + 1\n * 0x85 = 131 = 10000101 = x^7 + x + 1\n *\n * (x^6 + x^4 + x^2 + x + 1) * (x^7 + x + 1)\n * =  x^13 + x^11 + x^9 + x^8 + x^7 +\n *    x^7 + x^5 + x^3 + x^2 + x +\n *    x^6 + x^4 + x^2 + x + 1\n * =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1 = y\n *    y modulo (x^8 + x^4 + x^3 + x + 1)\n * =  x^7 + x^6 + 1.\n *\n * The modular reduction by m(x) guarantees the result will be a binary\n * polynomial of less than degree 8, so that it can fit in a byte.\n *\n * The operation to multiply a binary polynomial b with x (the polynomial\n * x in binary representation is 00000010) is:\n *\n * b_7x^8 + b_6x^7 + b_5x^6 + b_4x^5 + b_3x^4 + b_2x^3 + b_1x^2 + b_0x^1\n *\n * To get GF(b, x) we must reduce that by m(x). If b_7 is 0 (that is the\n * most significant bit is 0 in b) then the result is already reduced. If\n * it is 1, then we can reduce it by subtracting m(x) via an XOR.\n *\n * It follows that multiplication by x (00000010 or 0x02) can be implemented\n * by performing a left shift followed by a conditional bitwise XOR with\n * 0x1b. This operation on bytes is denoted by xtime(). Multiplication by\n * higher powers of x can be implemented by repeated application of xtime().\n *\n * By adding intermediate results, multiplication by any constant can be\n * implemented. For instance:\n *\n * GF(0x57, 0x13) = 0xfe because:\n *\n * xtime(b) = (b & 128) ? (b << 1 ^ 0x11b) : (b << 1)\n *\n * Note: We XOR with 0x11b instead of 0x1b because in javascript our\n * datatype for b can be larger than 1 byte, so a left shift will not\n * automatically eliminate bits that overflow a byte ... by XOR'ing the\n * overflow bit with 1 (the extra one from 0x11b) we zero it out.\n *\n * GF(0x57, 0x02) = xtime(0x57) = 0xae\n * GF(0x57, 0x04) = xtime(0xae) = 0x47\n * GF(0x57, 0x08) = xtime(0x47) = 0x8e\n * GF(0x57, 0x10) = xtime(0x8e) = 0x07\n *\n * GF(0x57, 0x13) = GF(0x57, (0x01 ^ 0x02 ^ 0x10))\n *\n * And by the distributive property (since XOR is addition and GF() is\n * multiplication):\n *\n * = GF(0x57, 0x01) ^ GF(0x57, 0x02) ^ GF(0x57, 0x10)\n * = 0x57 ^ 0xae ^ 0x07\n * = 0xfe.\n */\nfunction initialize() {\n  init = true;\n\n  /* Populate the Rcon table. These are the values given by\n    [x^(i-1),{00},{00},{00}] where x^(i-1) are powers of x (and x = 0x02)\n    in the field of GF(2^8), where i starts at 1.\n\n    rcon[0] = [0x00, 0x00, 0x00, 0x00]\n    rcon[1] = [0x01, 0x00, 0x00, 0x00] 2^(1-1) = 2^0 = 1\n    rcon[2] = [0x02, 0x00, 0x00, 0x00] 2^(2-1) = 2^1 = 2\n    ...\n    rcon[9]  = [0x1B, 0x00, 0x00, 0x00] 2^(9-1)  = 2^8 = 0x1B\n    rcon[10] = [0x36, 0x00, 0x00, 0x00] 2^(10-1) = 2^9 = 0x36\n\n    We only store the first byte because it is the only one used.\n  */\n  rcon = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\n\n  // compute xtime table which maps i onto GF(i, 0x02)\n  var xtime = new Array(256);\n  for(var i = 0; i < 128; ++i) {\n    xtime[i] = i << 1;\n    xtime[i + 128] = (i + 128) << 1 ^ 0x11B;\n  }\n\n  // compute all other tables\n  sbox = new Array(256);\n  isbox = new Array(256);\n  mix = new Array(4);\n  imix = new Array(4);\n  for(var i = 0; i < 4; ++i) {\n    mix[i] = new Array(256);\n    imix[i] = new Array(256);\n  }\n  var e = 0, ei = 0, e2, e4, e8, sx, sx2, me, ime;\n  for(var i = 0; i < 256; ++i) {\n    /* We need to generate the SubBytes() sbox and isbox tables so that\n      we can perform byte substitutions. This requires us to traverse\n      all of the elements in GF, find their multiplicative inverses,\n      and apply to each the following affine transformation:\n\n      bi' = bi ^ b(i + 4) mod 8 ^ b(i + 5) mod 8 ^ b(i + 6) mod 8 ^\n            b(i + 7) mod 8 ^ ci\n      for 0 <= i < 8, where bi is the ith bit of the byte, and ci is the\n      ith bit of a byte c with the value {63} or {01100011}.\n\n      It is possible to traverse every possible value in a Galois field\n      using what is referred to as a 'generator'. There are many\n      generators (128 out of 256): 3,5,6,9,11,82 to name a few. To fully\n      traverse GF we iterate 255 times, multiplying by our generator\n      each time.\n\n      On each iteration we can determine the multiplicative inverse for\n      the current element.\n\n      Suppose there is an element in GF 'e'. For a given generator 'g',\n      e = g^x. The multiplicative inverse of e is g^(255 - x). It turns\n      out that if use the inverse of a generator as another generator\n      it will produce all of the corresponding multiplicative inverses\n      at the same time. For this reason, we choose 5 as our inverse\n      generator because it only requires 2 multiplies and 1 add and its\n      inverse, 82, requires relatively few operations as well.\n\n      In order to apply the affine transformation, the multiplicative\n      inverse 'ei' of 'e' can be repeatedly XOR'd (4 times) with a\n      bit-cycling of 'ei'. To do this 'ei' is first stored in 's' and\n      'x'. Then 's' is left shifted and the high bit of 's' is made the\n      low bit. The resulting value is stored in 's'. Then 'x' is XOR'd\n      with 's' and stored in 'x'. On each subsequent iteration the same\n      operation is performed. When 4 iterations are complete, 'x' is\n      XOR'd with 'c' (0x63) and the transformed value is stored in 'x'.\n      For example:\n\n      s = 01000001\n      x = 01000001\n\n      iteration 1: s = 10000010, x ^= s\n      iteration 2: s = 00000101, x ^= s\n      iteration 3: s = 00001010, x ^= s\n      iteration 4: s = 00010100, x ^= s\n      x ^= 0x63\n\n      This can be done with a loop where s = (s << 1) | (s >> 7). However,\n      it can also be done by using a single 16-bit (in this case 32-bit)\n      number 'sx'. Since XOR is an associative operation, we can set 'sx'\n      to 'ei' and then XOR it with 'sx' left-shifted 1,2,3, and 4 times.\n      The most significant bits will flow into the high 8 bit positions\n      and be correctly XOR'd with one another. All that remains will be\n      to cycle the high 8 bits by XOR'ing them all with the lower 8 bits\n      afterwards.\n\n      At the same time we're populating sbox and isbox we can precompute\n      the multiplication we'll need to do to do MixColumns() later.\n    */\n\n    // apply affine transformation\n    sx = ei ^ (ei << 1) ^ (ei << 2) ^ (ei << 3) ^ (ei << 4);\n    sx = (sx >> 8) ^ (sx & 255) ^ 0x63;\n\n    // update tables\n    sbox[e] = sx;\n    isbox[sx] = e;\n\n    /* Mixing columns is done using matrix multiplication. The columns\n      that are to be mixed are each a single word in the current state.\n      The state has Nb columns (4 columns). Therefore each column is a\n      4 byte word. So to mix the columns in a single column 'c' where\n      its rows are r0, r1, r2, and r3, we use the following matrix\n      multiplication:\n\n      [2 3 1 1]*[r0,c]=[r'0,c]\n      [1 2 3 1] [r1,c] [r'1,c]\n      [1 1 2 3] [r2,c] [r'2,c]\n      [3 1 1 2] [r3,c] [r'3,c]\n\n      r0, r1, r2, and r3 are each 1 byte of one of the words in the\n      state (a column). To do matrix multiplication for each mixed\n      column c' we multiply the corresponding row from the left matrix\n      with the corresponding column from the right matrix. In total, we\n      get 4 equations:\n\n      r0,c' = 2*r0,c + 3*r1,c + 1*r2,c + 1*r3,c\n      r1,c' = 1*r0,c + 2*r1,c + 3*r2,c + 1*r3,c\n      r2,c' = 1*r0,c + 1*r1,c + 2*r2,c + 3*r3,c\n      r3,c' = 3*r0,c + 1*r1,c + 1*r2,c + 2*r3,c\n\n      As usual, the multiplication is as previously defined and the\n      addition is XOR. In order to optimize mixing columns we can store\n      the multiplication results in tables. If you think of the whole\n      column as a word (it might help to visualize by mentally rotating\n      the equations above by counterclockwise 90 degrees) then you can\n      see that it would be useful to map the multiplications performed on\n      each byte (r0, r1, r2, r3) onto a word as well. For instance, we\n      could map 2*r0,1*r0,1*r0,3*r0 onto a word by storing 2*r0 in the\n      highest 8 bits and 3*r0 in the lowest 8 bits (with the other two\n      respectively in the middle). This means that a table can be\n      constructed that uses r0 as an index to the word. We can do the\n      same with r1, r2, and r3, creating a total of 4 tables.\n\n      To construct a full c', we can just look up each byte of c in\n      their respective tables and XOR the results together.\n\n      Also, to build each table we only have to calculate the word\n      for 2,1,1,3 for every byte ... which we can do on each iteration\n      of this loop since we will iterate over every byte. After we have\n      calculated 2,1,1,3 we can get the results for the other tables\n      by cycling the byte at the end to the beginning. For instance\n      we can take the result of table 2,1,1,3 and produce table 3,2,1,1\n      by moving the right most byte to the left most position just like\n      how you can imagine the 3 moved out of 2,1,1,3 and to the front\n      to produce 3,2,1,1.\n\n      There is another optimization in that the same multiples of\n      the current element we need in order to advance our generator\n      to the next iteration can be reused in performing the 2,1,1,3\n      calculation. We also calculate the inverse mix column tables,\n      with e,9,d,b being the inverse of 2,1,1,3.\n\n      When we're done, and we need to actually mix columns, the first\n      byte of each state word should be put through mix[0] (2,1,1,3),\n      the second through mix[1] (3,2,1,1) and so forth. Then they should\n      be XOR'd together to produce the fully mixed column.\n    */\n\n    // calculate mix and imix table values\n    sx2 = xtime[sx];\n    e2 = xtime[e];\n    e4 = xtime[e2];\n    e8 = xtime[e4];\n    me =\n      (sx2 << 24) ^  // 2\n      (sx << 16) ^   // 1\n      (sx << 8) ^    // 1\n      (sx ^ sx2);    // 3\n    ime =\n      (e2 ^ e4 ^ e8) << 24 ^  // E (14)\n      (e ^ e8) << 16 ^        // 9\n      (e ^ e4 ^ e8) << 8 ^    // D (13)\n      (e ^ e2 ^ e8);          // B (11)\n    // produce each of the mix tables by rotating the 2,1,1,3 value\n    for(var n = 0; n < 4; ++n) {\n      mix[n][e] = me;\n      imix[n][sx] = ime;\n      // cycle the right most byte to the left most position\n      // ie: 2,1,1,3 becomes 3,2,1,1\n      me = me << 24 | me >>> 8;\n      ime = ime << 24 | ime >>> 8;\n    }\n\n    // get next element and inverse\n    if(e === 0) {\n      // 1 is the inverse of 1\n      e = ei = 1;\n    } else {\n      // e = 2e + 2*2*2*(10e)) = multiply e by 82 (chosen generator)\n      // ei = ei + 2*2*ei = multiply ei by 5 (inverse generator)\n      e = e2 ^ xtime[xtime[xtime[e2 ^ e8]]];\n      ei ^= xtime[xtime[ei]];\n    }\n  }\n}\n\n/**\n * Generates a key schedule using the AES key expansion algorithm.\n *\n * The AES algorithm takes the Cipher Key, K, and performs a Key Expansion\n * routine to generate a key schedule. The Key Expansion generates a total\n * of Nb*(Nr + 1) words: the algorithm requires an initial set of Nb words,\n * and each of the Nr rounds requires Nb words of key data. The resulting\n * key schedule consists of a linear array of 4-byte words, denoted [wi ],\n * with i in the range 0 ≤ i < Nb(Nr + 1).\n *\n * KeyExpansion(byte key[4*Nk], word w[Nb*(Nr+1)], Nk)\n * AES-128 (Nb=4, Nk=4, Nr=10)\n * AES-192 (Nb=4, Nk=6, Nr=12)\n * AES-256 (Nb=4, Nk=8, Nr=14)\n * Note: Nr=Nk+6.\n *\n * Nb is the number of columns (32-bit words) comprising the State (or\n * number of bytes in a block). For AES, Nb=4.\n *\n * @param key the key to schedule (as an array of 32-bit words).\n * @param decrypt true to modify the key schedule to decrypt, false not to.\n *\n * @return the generated key schedule.\n */\nfunction _expandKey(key, decrypt) {\n  // copy the key's words to initialize the key schedule\n  var w = key.slice(0);\n\n  /* RotWord() will rotate a word, moving the first byte to the last\n    byte's position (shifting the other bytes left).\n\n    We will be getting the value of Rcon at i / Nk. 'i' will iterate\n    from Nk to (Nb * Nr+1). Nk = 4 (4 byte key), Nb = 4 (4 words in\n    a block), Nr = Nk + 6 (10). Therefore 'i' will iterate from\n    4 to 44 (exclusive). Each time we iterate 4 times, i / Nk will\n    increase by 1. We use a counter iNk to keep track of this.\n   */\n\n  // go through the rounds expanding the key\n  var temp, iNk = 1;\n  var Nk = w.length;\n  var Nr1 = Nk + 6 + 1;\n  var end = Nb * Nr1;\n  for(var i = Nk; i < end; ++i) {\n    temp = w[i - 1];\n    if(i % Nk === 0) {\n      // temp = SubWord(RotWord(temp)) ^ Rcon[i / Nk]\n      temp =\n        sbox[temp >>> 16 & 255] << 24 ^\n        sbox[temp >>> 8 & 255] << 16 ^\n        sbox[temp & 255] << 8 ^\n        sbox[temp >>> 24] ^ (rcon[iNk] << 24);\n      iNk++;\n    } else if(Nk > 6 && (i % Nk === 4)) {\n      // temp = SubWord(temp)\n      temp =\n        sbox[temp >>> 24] << 24 ^\n        sbox[temp >>> 16 & 255] << 16 ^\n        sbox[temp >>> 8 & 255] << 8 ^\n        sbox[temp & 255];\n    }\n    w[i] = w[i - Nk] ^ temp;\n  }\n\n   /* When we are updating a cipher block we always use the code path for\n     encryption whether we are decrypting or not (to shorten code and\n     simplify the generation of look up tables). However, because there\n     are differences in the decryption algorithm, other than just swapping\n     in different look up tables, we must transform our key schedule to\n     account for these changes:\n\n     1. The decryption algorithm gets its key rounds in reverse order.\n     2. The decryption algorithm adds the round key before mixing columns\n       instead of afterwards.\n\n     We don't need to modify our key schedule to handle the first case,\n     we can just traverse the key schedule in reverse order when decrypting.\n\n     The second case requires a little work.\n\n     The tables we built for performing rounds will take an input and then\n     perform SubBytes() and MixColumns() or, for the decrypt version,\n     InvSubBytes() and InvMixColumns(). But the decrypt algorithm requires\n     us to AddRoundKey() before InvMixColumns(). This means we'll need to\n     apply some transformations to the round key to inverse-mix its columns\n     so they'll be correct for moving AddRoundKey() to after the state has\n     had its columns inverse-mixed.\n\n     To inverse-mix the columns of the state when we're decrypting we use a\n     lookup table that will apply InvSubBytes() and InvMixColumns() at the\n     same time. However, the round key's bytes are not inverse-substituted\n     in the decryption algorithm. To get around this problem, we can first\n     substitute the bytes in the round key so that when we apply the\n     transformation via the InvSubBytes()+InvMixColumns() table, it will\n     undo our substitution leaving us with the original value that we\n     want -- and then inverse-mix that value.\n\n     This change will correctly alter our key schedule so that we can XOR\n     each round key with our already transformed decryption state. This\n     allows us to use the same code path as the encryption algorithm.\n\n     We make one more change to the decryption key. Since the decryption\n     algorithm runs in reverse from the encryption algorithm, we reverse\n     the order of the round keys to avoid having to iterate over the key\n     schedule backwards when running the encryption algorithm later in\n     decryption mode. In addition to reversing the order of the round keys,\n     we also swap each round key's 2nd and 4th rows. See the comments\n     section where rounds are performed for more details about why this is\n     done. These changes are done inline with the other substitution\n     described above.\n  */\n  if(decrypt) {\n    var tmp;\n    var m0 = imix[0];\n    var m1 = imix[1];\n    var m2 = imix[2];\n    var m3 = imix[3];\n    var wnew = w.slice(0);\n    end = w.length;\n    for(var i = 0, wi = end - Nb; i < end; i += Nb, wi -= Nb) {\n      // do not sub the first or last round key (round keys are Nb\n      // words) as no column mixing is performed before they are added,\n      // but do change the key order\n      if(i === 0 || i === (end - Nb)) {\n        wnew[i] = w[wi];\n        wnew[i + 1] = w[wi + 3];\n        wnew[i + 2] = w[wi + 2];\n        wnew[i + 3] = w[wi + 1];\n      } else {\n        // substitute each round key byte because the inverse-mix\n        // table will inverse-substitute it (effectively cancel the\n        // substitution because round key bytes aren't sub'd in\n        // decryption mode) and swap indexes 3 and 1\n        for(var n = 0; n < Nb; ++n) {\n          tmp = w[wi + n];\n          wnew[i + (3&-n)] =\n            m0[sbox[tmp >>> 24]] ^\n            m1[sbox[tmp >>> 16 & 255]] ^\n            m2[sbox[tmp >>> 8 & 255]] ^\n            m3[sbox[tmp & 255]];\n        }\n      }\n    }\n    w = wnew;\n  }\n\n  return w;\n}\n\n/**\n * Updates a single block (16 bytes) using AES. The update will either\n * encrypt or decrypt the block.\n *\n * @param w the key schedule.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(w, input, output, decrypt) {\n  /*\n  Cipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[0, Nb-1])\n    for round = 1 step 1 to Nr–1\n      SubBytes(state)\n      ShiftRows(state)\n      MixColumns(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n    end for\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    out = state\n  end\n\n  InvCipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    for round = Nr-1 step -1 downto 1\n      InvShiftRows(state)\n      InvSubBytes(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n      InvMixColumns(state)\n    end for\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n    out = state\n  end\n  */\n\n  // Encrypt: AddRoundKey(state, w[0, Nb-1])\n  // Decrypt: AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n  var Nr = w.length / 4 - 1;\n  var m0, m1, m2, m3, sub;\n  if(decrypt) {\n    m0 = imix[0];\n    m1 = imix[1];\n    m2 = imix[2];\n    m3 = imix[3];\n    sub = isbox;\n  } else {\n    m0 = mix[0];\n    m1 = mix[1];\n    m2 = mix[2];\n    m3 = mix[3];\n    sub = sbox;\n  }\n  var a, b, c, d, a2, b2, c2;\n  a = input[0] ^ w[0];\n  b = input[decrypt ? 3 : 1] ^ w[1];\n  c = input[2] ^ w[2];\n  d = input[decrypt ? 1 : 3] ^ w[3];\n  var i = 3;\n\n  /* In order to share code we follow the encryption algorithm when both\n    encrypting and decrypting. To account for the changes required in the\n    decryption algorithm, we use different lookup tables when decrypting\n    and use a modified key schedule to account for the difference in the\n    order of transformations applied when performing rounds. We also get\n    key rounds in reverse order (relative to encryption). */\n  for(var round = 1; round < Nr; ++round) {\n    /* As described above, we'll be using table lookups to perform the\n      column mixing. Each column is stored as a word in the state (the\n      array 'input' has one column as a word at each index). In order to\n      mix a column, we perform these transformations on each row in c,\n      which is 1 byte in each word. The new column for c0 is c'0:\n\n               m0      m1      m2      m3\n      r0,c'0 = 2*r0,c0 + 3*r1,c0 + 1*r2,c0 + 1*r3,c0\n      r1,c'0 = 1*r0,c0 + 2*r1,c0 + 3*r2,c0 + 1*r3,c0\n      r2,c'0 = 1*r0,c0 + 1*r1,c0 + 2*r2,c0 + 3*r3,c0\n      r3,c'0 = 3*r0,c0 + 1*r1,c0 + 1*r2,c0 + 2*r3,c0\n\n      So using mix tables where c0 is a word with r0 being its upper\n      8 bits and r3 being its lower 8 bits:\n\n      m0[c0 >> 24] will yield this word: [2*r0,1*r0,1*r0,3*r0]\n      ...\n      m3[c0 & 255] will yield this word: [1*r3,1*r3,3*r3,2*r3]\n\n      Therefore to mix the columns in each word in the state we\n      do the following (& 255 omitted for brevity):\n      c'0,r0 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r1 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r2 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r3 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n\n      However, before mixing, the algorithm requires us to perform\n      ShiftRows(). The ShiftRows() transformation cyclically shifts the\n      last 3 rows of the state over different offsets. The first row\n      (r = 0) is not shifted.\n\n      s'_r,c = s_r,(c + shift(r, Nb) mod Nb\n      for 0 < r < 4 and 0 <= c < Nb and\n      shift(1, 4) = 1\n      shift(2, 4) = 2\n      shift(3, 4) = 3.\n\n      This causes the first byte in r = 1 to be moved to the end of\n      the row, the first 2 bytes in r = 2 to be moved to the end of\n      the row, the first 3 bytes in r = 3 to be moved to the end of\n      the row:\n\n      r1: [c0 c1 c2 c3] => [c1 c2 c3 c0]\n      r2: [c0 c1 c2 c3]    [c2 c3 c0 c1]\n      r3: [c0 c1 c2 c3]    [c3 c0 c1 c2]\n\n      We can make these substitutions inline with our column mixing to\n      generate an updated set of equations to produce each word in the\n      state (note the columns have changed positions):\n\n      c0 c1 c2 c3 => c0 c1 c2 c3\n      c0 c1 c2 c3    c1 c2 c3 c0  (cycled 1 byte)\n      c0 c1 c2 c3    c2 c3 c0 c1  (cycled 2 bytes)\n      c0 c1 c2 c3    c3 c0 c1 c2  (cycled 3 bytes)\n\n      Therefore:\n\n      c'0 = 2*r0,c0 + 3*r1,c1 + 1*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 2*r1,c1 + 3*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 1*r1,c1 + 2*r2,c2 + 3*r3,c3\n      c'0 = 3*r0,c0 + 1*r1,c1 + 1*r2,c2 + 2*r3,c3\n\n      c'1 = 2*r0,c1 + 3*r1,c2 + 1*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 2*r1,c2 + 3*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 1*r1,c2 + 2*r2,c3 + 3*r3,c0\n      c'1 = 3*r0,c1 + 1*r1,c2 + 1*r2,c3 + 2*r3,c0\n\n      ... and so forth for c'2 and c'3. The important distinction is\n      that the columns are cycling, with c0 being used with the m0\n      map when calculating c0, but c1 being used with the m0 map when\n      calculating c1 ... and so forth.\n\n      When performing the inverse we transform the mirror image and\n      skip the bottom row, instead of the top one, and move upwards:\n\n      c3 c2 c1 c0 => c0 c3 c2 c1  (cycled 3 bytes) *same as encryption\n      c3 c2 c1 c0    c1 c0 c3 c2  (cycled 2 bytes)\n      c3 c2 c1 c0    c2 c1 c0 c3  (cycled 1 byte)  *same as encryption\n      c3 c2 c1 c0    c3 c2 c1 c0\n\n      If you compare the resulting matrices for ShiftRows()+MixColumns()\n      and for InvShiftRows()+InvMixColumns() the 2nd and 4th columns are\n      different (in encrypt mode vs. decrypt mode). So in order to use\n      the same code to handle both encryption and decryption, we will\n      need to do some mapping.\n\n      If in encryption mode we let a=c0, b=c1, c=c2, d=c3, and r<N> be\n      a row number in the state, then the resulting matrix in encryption\n      mode for applying the above transformations would be:\n\n      r1: a b c d\n      r2: b c d a\n      r3: c d a b\n      r4: d a b c\n\n      If we did the same in decryption mode we would get:\n\n      r1: a d c b\n      r2: b a d c\n      r3: c b a d\n      r4: d c b a\n\n      If instead we swap d and b (set b=c3 and d=c1), then we get:\n\n      r1: a b c d\n      r2: d a b c\n      r3: c d a b\n      r4: b c d a\n\n      Now the 1st and 3rd rows are the same as the encryption matrix. All\n      we need to do then to make the mapping exactly the same is to swap\n      the 2nd and 4th rows when in decryption mode. To do this without\n      having to do it on each iteration, we swapped the 2nd and 4th rows\n      in the decryption key schedule. We also have to do the swap above\n      when we first pull in the input and when we set the final output. */\n    a2 =\n      m0[a >>> 24] ^\n      m1[b >>> 16 & 255] ^\n      m2[c >>> 8 & 255] ^\n      m3[d & 255] ^ w[++i];\n    b2 =\n      m0[b >>> 24] ^\n      m1[c >>> 16 & 255] ^\n      m2[d >>> 8 & 255] ^\n      m3[a & 255] ^ w[++i];\n    c2 =\n      m0[c >>> 24] ^\n      m1[d >>> 16 & 255] ^\n      m2[a >>> 8 & 255] ^\n      m3[b & 255] ^ w[++i];\n    d =\n      m0[d >>> 24] ^\n      m1[a >>> 16 & 255] ^\n      m2[b >>> 8 & 255] ^\n      m3[c & 255] ^ w[++i];\n    a = a2;\n    b = b2;\n    c = c2;\n  }\n\n  /*\n    Encrypt:\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n\n    Decrypt:\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n   */\n   // Note: rows are shifted inline\n  output[0] =\n    (sub[a >>> 24] << 24) ^\n    (sub[b >>> 16 & 255] << 16) ^\n    (sub[c >>> 8 & 255] << 8) ^\n    (sub[d & 255]) ^ w[++i];\n  output[decrypt ? 3 : 1] =\n    (sub[b >>> 24] << 24) ^\n    (sub[c >>> 16 & 255] << 16) ^\n    (sub[d >>> 8 & 255] << 8) ^\n    (sub[a & 255]) ^ w[++i];\n  output[2] =\n    (sub[c >>> 24] << 24) ^\n    (sub[d >>> 16 & 255] << 16) ^\n    (sub[a >>> 8 & 255] << 8) ^\n    (sub[b & 255]) ^ w[++i];\n  output[decrypt ? 1 : 3] =\n    (sub[d >>> 24] << 24) ^\n    (sub[a >>> 16 & 255] << 16) ^\n    (sub[b >>> 8 & 255] << 8) ^\n    (sub[c & 255]) ^ w[++i];\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('AES-<mode>', key);\n * forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates a deprecated AES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key and iv may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param options the options to use.\n *          key the symmetric key to use.\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'AES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'aes';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine(\n  'js/aes',['require', 'module', './cipher', './cipherModes', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Object IDs for ASN.1.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nforge.pki = forge.pki || {};\nvar oids = forge.pki.oids = forge.oids = forge.oids || {};\n\n// algorithm OIDs\noids['1.2.840.113549.1.1.1'] = 'rsaEncryption';\noids['rsaEncryption'] = '1.2.840.113549.1.1.1';\n// Note: md2 & md4 not implemented\n//oids['1.2.840.113549.1.1.2'] = 'md2WithRSAEncryption';\n//oids['md2WithRSAEncryption'] = '1.2.840.113549.1.1.2';\n//oids['1.2.840.113549.1.1.3'] = 'md4WithRSAEncryption';\n//oids['md4WithRSAEncryption'] = '1.2.840.113549.1.1.3';\noids['1.2.840.113549.1.1.4'] = 'md5WithRSAEncryption';\noids['md5WithRSAEncryption'] = '1.2.840.113549.1.1.4';\noids['1.2.840.113549.1.1.5'] = 'sha1WithRSAEncryption';\noids['sha1WithRSAEncryption'] = '1.2.840.113549.1.1.5';\noids['1.2.840.113549.1.1.7'] = 'RSAES-OAEP';\noids['RSAES-OAEP'] = '1.2.840.113549.1.1.7';\noids['1.2.840.113549.1.1.8'] = 'mgf1';\noids['mgf1'] = '1.2.840.113549.1.1.8';\noids['1.2.840.113549.1.1.9'] = 'pSpecified';\noids['pSpecified'] = '1.2.840.113549.1.1.9';\noids['1.2.840.113549.1.1.10'] = 'RSASSA-PSS';\noids['RSASSA-PSS'] = '1.2.840.113549.1.1.10';\noids['1.2.840.113549.1.1.11'] = 'sha256WithRSAEncryption';\noids['sha256WithRSAEncryption'] = '1.2.840.113549.1.1.11';\noids['1.2.840.113549.1.1.12'] = 'sha384WithRSAEncryption';\noids['sha384WithRSAEncryption'] = '1.2.840.113549.1.1.12';\noids['1.2.840.113549.1.1.13'] = 'sha512WithRSAEncryption';\noids['sha512WithRSAEncryption'] = '1.2.840.113549.1.1.13';\n\noids['1.3.14.3.2.7'] = 'desCBC';\noids['desCBC'] = '1.3.14.3.2.7';\n\noids['1.3.14.3.2.26'] = 'sha1';\noids['sha1'] = '1.3.14.3.2.26';\noids['2.16.840.1.101.3.4.2.1'] = 'sha256';\noids['sha256'] = '2.16.840.1.101.3.4.2.1';\noids['2.16.840.1.101.3.4.2.2'] = 'sha384';\noids['sha384'] = '2.16.840.1.101.3.4.2.2';\noids['2.16.840.1.101.3.4.2.3'] = 'sha512';\noids['sha512'] = '2.16.840.1.101.3.4.2.3';\noids['1.2.840.113549.2.5'] = 'md5';\noids['md5'] = '1.2.840.113549.2.5';\n\n// pkcs#7 content types\noids['1.2.840.113549.1.7.1'] = 'data';\noids['data'] = '1.2.840.113549.1.7.1';\noids['1.2.840.113549.1.7.2'] = 'signedData';\noids['signedData'] = '1.2.840.113549.1.7.2';\noids['1.2.840.113549.1.7.3'] = 'envelopedData';\noids['envelopedData'] = '1.2.840.113549.1.7.3';\noids['1.2.840.113549.1.7.4'] = 'signedAndEnvelopedData';\noids['signedAndEnvelopedData'] = '1.2.840.113549.1.7.4';\noids['1.2.840.113549.1.7.5'] = 'digestedData';\noids['digestedData'] = '1.2.840.113549.1.7.5';\noids['1.2.840.113549.1.7.6'] = 'encryptedData';\noids['encryptedData'] = '1.2.840.113549.1.7.6';\n\n// pkcs#9 oids\noids['1.2.840.113549.1.9.1'] = 'emailAddress';\noids['emailAddress'] = '1.2.840.113549.1.9.1';\noids['1.2.840.113549.1.9.2'] = 'unstructuredName';\noids['unstructuredName'] = '1.2.840.113549.1.9.2';\noids['1.2.840.113549.1.9.3'] = 'contentType';\noids['contentType'] = '1.2.840.113549.1.9.3';\noids['1.2.840.113549.1.9.4'] = 'messageDigest';\noids['messageDigest'] = '1.2.840.113549.1.9.4';\noids['1.2.840.113549.1.9.5'] = 'signingTime';\noids['signingTime'] = '1.2.840.113549.1.9.5';\noids['1.2.840.113549.1.9.6'] = 'counterSignature';\noids['counterSignature'] = '1.2.840.113549.1.9.6';\noids['1.2.840.113549.1.9.7'] = 'challengePassword';\noids['challengePassword'] = '1.2.840.113549.1.9.7';\noids['1.2.840.113549.1.9.8'] = 'unstructuredAddress';\noids['unstructuredAddress'] = '1.2.840.113549.1.9.8';\noids['1.2.840.113549.1.9.14'] = 'extensionRequest';\noids['extensionRequest'] = '1.2.840.113549.1.9.14';\n\noids['1.2.840.113549.1.9.20'] = 'friendlyName';\noids['friendlyName'] = '1.2.840.113549.1.9.20';\noids['1.2.840.113549.1.9.21'] = 'localKeyId';\noids['localKeyId'] = '1.2.840.113549.1.9.21';\noids['1.2.840.113549.1.9.22.1'] = 'x509Certificate';\noids['x509Certificate'] = '1.2.840.113549.1.9.22.1';\n\n// pkcs#12 safe bags\noids['1.2.840.113549.1.12.10.1.1'] = 'keyBag';\noids['keyBag'] = '1.2.840.113549.1.12.10.1.1';\noids['1.2.840.113549.1.12.10.1.2'] = 'pkcs8ShroudedKeyBag';\noids['pkcs8ShroudedKeyBag'] = '1.2.840.113549.1.12.10.1.2';\noids['1.2.840.113549.1.12.10.1.3'] = 'certBag';\noids['certBag'] = '1.2.840.113549.1.12.10.1.3';\noids['1.2.840.113549.1.12.10.1.4'] = 'crlBag';\noids['crlBag'] = '1.2.840.113549.1.12.10.1.4';\noids['1.2.840.113549.1.12.10.1.5'] = 'secretBag';\noids['secretBag'] = '1.2.840.113549.1.12.10.1.5';\noids['1.2.840.113549.1.12.10.1.6'] = 'safeContentsBag';\noids['safeContentsBag'] = '1.2.840.113549.1.12.10.1.6';\n\n// password-based-encryption for pkcs#12\noids['1.2.840.113549.1.5.13'] = 'pkcs5PBES2';\noids['pkcs5PBES2'] = '1.2.840.113549.1.5.13';\noids['1.2.840.113549.1.5.12'] = 'pkcs5PBKDF2';\noids['pkcs5PBKDF2'] = '1.2.840.113549.1.5.12';\n\noids['1.2.840.113549.1.12.1.1'] = 'pbeWithSHAAnd128BitRC4';\noids['pbeWithSHAAnd128BitRC4'] = '1.2.840.113549.1.12.1.1';\noids['1.2.840.113549.1.12.1.2'] = 'pbeWithSHAAnd40BitRC4';\noids['pbeWithSHAAnd40BitRC4'] = '1.2.840.113549.1.12.1.2';\noids['1.2.840.113549.1.12.1.3'] = 'pbeWithSHAAnd3-KeyTripleDES-CBC';\noids['pbeWithSHAAnd3-KeyTripleDES-CBC'] = '1.2.840.113549.1.12.1.3';\noids['1.2.840.113549.1.12.1.4'] = 'pbeWithSHAAnd2-KeyTripleDES-CBC';\noids['pbeWithSHAAnd2-KeyTripleDES-CBC'] = '1.2.840.113549.1.12.1.4';\noids['1.2.840.113549.1.12.1.5'] = 'pbeWithSHAAnd128BitRC2-CBC';\noids['pbeWithSHAAnd128BitRC2-CBC'] = '1.2.840.113549.1.12.1.5';\noids['1.2.840.113549.1.12.1.6'] = 'pbewithSHAAnd40BitRC2-CBC';\noids['pbewithSHAAnd40BitRC2-CBC'] = '1.2.840.113549.1.12.1.6';\n\n// hmac OIDs\noids['1.2.840.113549.2.7'] = 'hmacWithSHA1';\noids['hmacWithSHA1'] = '1.2.840.113549.2.7';\noids['1.2.840.113549.2.8'] = 'hmacWithSHA224';\noids['hmacWithSHA224'] = '1.2.840.113549.2.8';\noids['1.2.840.113549.2.9'] = 'hmacWithSHA256';\noids['hmacWithSHA256'] = '1.2.840.113549.2.9';\noids['1.2.840.113549.2.10'] = 'hmacWithSHA384';\noids['hmacWithSHA384'] = '1.2.840.113549.2.10';\noids['1.2.840.113549.2.11'] = 'hmacWithSHA512';\noids['hmacWithSHA512'] = '1.2.840.113549.2.11';\n\n// symmetric key algorithm oids\noids['1.2.840.113549.3.7'] = 'des-EDE3-CBC';\noids['des-EDE3-CBC'] = '1.2.840.113549.3.7';\noids['2.16.840.1.101.3.4.1.2'] = 'aes128-CBC';\noids['aes128-CBC'] = '2.16.840.1.101.3.4.1.2';\noids['2.16.840.1.101.3.4.1.22'] = 'aes192-CBC';\noids['aes192-CBC'] = '2.16.840.1.101.3.4.1.22';\noids['2.16.840.1.101.3.4.1.42'] = 'aes256-CBC';\noids['aes256-CBC'] = '2.16.840.1.101.3.4.1.42';\n\n// certificate issuer/subject OIDs\noids['2.5.4.3'] = 'commonName';\noids['commonName'] = '2.5.4.3';\noids['2.5.4.5'] = 'serialName';\noids['serialName'] = '2.5.4.5';\noids['2.5.4.6'] = 'countryName';\noids['countryName'] = '2.5.4.6';\noids['2.5.4.7'] = 'localityName';\noids['localityName'] = '2.5.4.7';\noids['2.5.4.8'] = 'stateOrProvinceName';\noids['stateOrProvinceName'] = '2.5.4.8';\noids['2.5.4.10'] = 'organizationName';\noids['organizationName'] = '2.5.4.10';\noids['2.5.4.11'] = 'organizationalUnitName';\noids['organizationalUnitName'] = '2.5.4.11';\n\n// X.509 extension OIDs\noids['2.16.840.1.113730.1.1'] = 'nsCertType';\noids['nsCertType'] = '2.16.840.1.113730.1.1';\noids['2.5.29.1'] = 'authorityKeyIdentifier'; // deprecated, use .35\noids['2.5.29.2'] = 'keyAttributes'; // obsolete use .37 or .15\noids['2.5.29.3'] = 'certificatePolicies'; // deprecated, use .32\noids['2.5.29.4'] = 'keyUsageRestriction'; // obsolete use .37 or .15\noids['2.5.29.5'] = 'policyMapping'; // deprecated use .33\noids['2.5.29.6'] = 'subtreesConstraint'; // obsolete use .30\noids['2.5.29.7'] = 'subjectAltName'; // deprecated use .17\noids['2.5.29.8'] = 'issuerAltName'; // deprecated use .18\noids['2.5.29.9'] = 'subjectDirectoryAttributes';\noids['2.5.29.10'] = 'basicConstraints'; // deprecated use .19\noids['2.5.29.11'] = 'nameConstraints'; // deprecated use .30\noids['2.5.29.12'] = 'policyConstraints'; // deprecated use .36\noids['2.5.29.13'] = 'basicConstraints'; // deprecated use .19\noids['2.5.29.14'] = 'subjectKeyIdentifier';\noids['subjectKeyIdentifier'] = '2.5.29.14';\noids['2.5.29.15'] = 'keyUsage';\noids['keyUsage'] = '2.5.29.15';\noids['2.5.29.16'] = 'privateKeyUsagePeriod';\noids['2.5.29.17'] = 'subjectAltName';\noids['subjectAltName'] = '2.5.29.17';\noids['2.5.29.18'] = 'issuerAltName';\noids['issuerAltName'] = '2.5.29.18';\noids['2.5.29.19'] = 'basicConstraints';\noids['basicConstraints'] = '2.5.29.19';\noids['2.5.29.20'] = 'cRLNumber';\noids['2.5.29.21'] = 'cRLReason';\noids['2.5.29.22'] = 'expirationDate';\noids['2.5.29.23'] = 'instructionCode';\noids['2.5.29.24'] = 'invalidityDate';\noids['2.5.29.25'] = 'cRLDistributionPoints'; // deprecated use .31\noids['2.5.29.26'] = 'issuingDistributionPoint'; // deprecated use .28\noids['2.5.29.27'] = 'deltaCRLIndicator';\noids['2.5.29.28'] = 'issuingDistributionPoint';\noids['2.5.29.29'] = 'certificateIssuer';\noids['2.5.29.30'] = 'nameConstraints';\noids['2.5.29.31'] = 'cRLDistributionPoints';\noids['cRLDistributionPoints'] = '2.5.29.31';\noids['2.5.29.32'] = 'certificatePolicies';\noids['certificatePolicies'] = '2.5.29.32';\noids['2.5.29.33'] = 'policyMappings';\noids['2.5.29.34'] = 'policyConstraints'; // deprecated use .36\noids['2.5.29.35'] = 'authorityKeyIdentifier';\noids['authorityKeyIdentifier'] = '2.5.29.35';\noids['2.5.29.36'] = 'policyConstraints';\noids['2.5.29.37'] = 'extKeyUsage';\noids['extKeyUsage'] = '2.5.29.37';\noids['2.5.29.46'] = 'freshestCRL';\noids['2.5.29.54'] = 'inhibitAnyPolicy';\n\n// extKeyUsage purposes\noids['1.3.6.1.4.1.11129.2.4.2'] = 'timestampList';\noids['timestampList'] = '1.3.6.1.4.1.11129.2.4.2';\noids['1.3.6.1.5.5.7.1.1'] = 'authorityInfoAccess';\noids['authorityInfoAccess'] = '1.3.6.1.5.5.7.1.1';\noids['1.3.6.1.5.5.7.3.1'] = 'serverAuth';\noids['serverAuth'] = '1.3.6.1.5.5.7.3.1';\noids['1.3.6.1.5.5.7.3.2'] = 'clientAuth';\noids['clientAuth'] = '1.3.6.1.5.5.7.3.2';\noids['1.3.6.1.5.5.7.3.3'] = 'codeSigning';\noids['codeSigning'] = '1.3.6.1.5.5.7.3.3';\noids['1.3.6.1.5.5.7.3.4'] = 'emailProtection';\noids['emailProtection'] = '1.3.6.1.5.5.7.3.4';\noids['1.3.6.1.5.5.7.3.8'] = 'timeStamping';\noids['timeStamping'] = '1.3.6.1.5.5.7.3.8';\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'oids';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/oids',['require', 'module'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Javascript implementation of Abstract Syntax Notation Number One.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n *\n * An API for storing data using the Abstract Syntax Notation Number One\n * format using DER (Distinguished Encoding Rules) encoding. This encoding is\n * commonly used to store data for PKI, i.e. X.509 Certificates, and this\n * implementation exists for that purpose.\n *\n * Abstract Syntax Notation Number One (ASN.1) is used to define the abstract\n * syntax of information without restricting the way the information is encoded\n * for transmission. It provides a standard that allows for open systems\n * communication. ASN.1 defines the syntax of information data and a number of\n * simple data types as well as a notation for describing them and specifying\n * values for them.\n *\n * The RSA algorithm creates public and private keys that are often stored in\n * X.509 or PKCS#X formats -- which use ASN.1 (encoded in DER format). This\n * class provides the most basic functionality required to store and load DSA\n * keys that are encoded according to ASN.1.\n *\n * The most common binary encodings for ASN.1 are BER (Basic Encoding Rules)\n * and DER (Distinguished Encoding Rules). DER is just a subset of BER that\n * has stricter requirements for how data must be encoded.\n *\n * Each ASN.1 structure has a tag (a byte identifying the ASN.1 structure type)\n * and a byte array for the value of this ASN1 structure which may be data or a\n * list of ASN.1 structures.\n *\n * Each ASN.1 structure using BER is (Tag-Length-Value):\n *\n * | byte 0 | bytes X | bytes Y |\n * |--------|---------|----------\n * |  tag   | length  |  value  |\n *\n * ASN.1 allows for tags to be of \"High-tag-number form\" which allows a tag to\n * be two or more octets, but that is not supported by this class. A tag is\n * only 1 byte. Bits 1-5 give the tag number (ie the data type within a\n * particular 'class'), 6 indicates whether or not the ASN.1 value is\n * constructed from other ASN.1 values, and bits 7 and 8 give the 'class'. If\n * bits 7 and 8 are both zero, the class is UNIVERSAL. If only bit 7 is set,\n * then the class is APPLICATION. If only bit 8 is set, then the class is\n * CONTEXT_SPECIFIC. If both bits 7 and 8 are set, then the class is PRIVATE.\n * The tag numbers for the data types for the class UNIVERSAL are listed below:\n *\n * UNIVERSAL 0 Reserved for use by the encoding rules\n * UNIVERSAL 1 Boolean type\n * UNIVERSAL 2 Integer type\n * UNIVERSAL 3 Bitstring type\n * UNIVERSAL 4 Octetstring type\n * UNIVERSAL 5 Null type\n * UNIVERSAL 6 Object identifier type\n * UNIVERSAL 7 Object descriptor type\n * UNIVERSAL 8 External type and Instance-of type\n * UNIVERSAL 9 Real type\n * UNIVERSAL 10 Enumerated type\n * UNIVERSAL 11 Embedded-pdv type\n * UNIVERSAL 12 UTF8String type\n * UNIVERSAL 13 Relative object identifier type\n * UNIVERSAL 14-15 Reserved for future editions\n * UNIVERSAL 16 Sequence and Sequence-of types\n * UNIVERSAL 17 Set and Set-of types\n * UNIVERSAL 18-22, 25-30 Character string types\n * UNIVERSAL 23-24 Time types\n *\n * The length of an ASN.1 structure is specified after the tag identifier.\n * There is a definite form and an indefinite form. The indefinite form may\n * be used if the encoding is constructed and not all immediately available.\n * The indefinite form is encoded using a length byte with only the 8th bit\n * set. The end of the constructed object is marked using end-of-contents\n * octets (two zero bytes).\n *\n * The definite form looks like this:\n *\n * The length may take up 1 or more bytes, it depends on the length of the\n * value of the ASN.1 structure. DER encoding requires that if the ASN.1\n * structure has a value that has a length greater than 127, more than 1 byte\n * will be used to store its length, otherwise just one byte will be used.\n * This is strict.\n *\n * In the case that the length of the ASN.1 value is less than 127, 1 octet\n * (byte) is used to store the \"short form\" length. The 8th bit has a value of\n * 0 indicating the length is \"short form\" and not \"long form\" and bits 7-1\n * give the length of the data. (The 8th bit is the left-most, most significant\n * bit: also known as big endian or network format).\n *\n * In the case that the length of the ASN.1 value is greater than 127, 2 to\n * 127 octets (bytes) are used to store the \"long form\" length. The first\n * byte's 8th bit is set to 1 to indicate the length is \"long form.\" Bits 7-1\n * give the number of additional octets. All following octets are in base 256\n * with the most significant digit first (typical big-endian binary unsigned\n * integer storage). So, for instance, if the length of a value was 257, the\n * first byte would be set to:\n *\n * 10000010 = 130 = 0x82.\n *\n * This indicates there are 2 octets (base 256) for the length. The second and\n * third bytes (the octets just mentioned) would store the length in base 256:\n *\n * octet 2: 00000001 = 1 * 256^1 = 256\n * octet 3: 00000001 = 1 * 256^0 = 1\n * total = 257\n *\n * The algorithm for converting a js integer value of 257 to base-256 is:\n *\n * var value = 257;\n * var bytes = [];\n * bytes[0] = (value >>> 8) & 0xFF; // most significant byte first\n * bytes[1] = value & 0xFF;        // least significant byte last\n *\n * On the ASN.1 UNIVERSAL Object Identifier (OID) type:\n *\n * An OID can be written like: \"value1.value2.value3...valueN\"\n *\n * The DER encoding rules:\n *\n * The first byte has the value 40 * value1 + value2.\n * The following bytes, if any, encode the remaining values. Each value is\n * encoded in base 128, most significant digit first (big endian), with as\n * few digits as possible, and the most significant bit of each byte set\n * to 1 except the last in each value's encoding. For example: Given the\n * OID \"1.2.840.113549\", its DER encoding is (remember each byte except the\n * last one in each encoding is OR'd with 0x80):\n *\n * byte 1: 40 * 1 + 2 = 42 = 0x2A.\n * bytes 2-3: 128 * 6 + 72 = 840 = 6 72 = 6 72 = 0x0648 = 0x8648\n * bytes 4-6: 16384 * 6 + 128 * 119 + 13 = 6 119 13 = 0x06770D = 0x86F70D\n *\n * The final value is: 0x2A864886F70D.\n * The full OID (including ASN.1 tag and length of 6 bytes) is:\n * 0x06062A864886F70D\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n/* ASN.1 API */\nvar asn1 = forge.asn1 = forge.asn1 || {};\n\n/**\n * ASN.1 classes.\n */\nasn1.Class = {\n  UNIVERSAL:        0x00,\n  APPLICATION:      0x40,\n  CONTEXT_SPECIFIC: 0x80,\n  PRIVATE:          0xC0\n};\n\n/**\n * ASN.1 types. Not all types are supported by this implementation, only\n * those necessary to implement a simple PKI are implemented.\n */\nasn1.Type = {\n  NONE:             0,\n  BOOLEAN:          1,\n  INTEGER:          2,\n  BITSTRING:        3,\n  OCTETSTRING:      4,\n  NULL:             5,\n  OID:              6,\n  ODESC:            7,\n  EXTERNAL:         8,\n  REAL:             9,\n  ENUMERATED:      10,\n  EMBEDDED:        11,\n  UTF8:            12,\n  ROID:            13,\n  SEQUENCE:        16,\n  SET:             17,\n  PRINTABLESTRING: 19,\n  IA5STRING:       22,\n  UTCTIME:         23,\n  GENERALIZEDTIME: 24,\n  BMPSTRING:       30\n};\n\n/**\n * Creates a new asn1 object.\n *\n * @param tagClass the tag class for the object.\n * @param type the data type (tag number) for the object.\n * @param constructed true if the asn1 object is in constructed form.\n * @param value the value for the object, if it is not constructed.\n *\n * @return the asn1 object.\n */\nasn1.create = function(tagClass, type, constructed, value) {\n  /* An asn1 object has a tagClass, a type, a constructed flag, and a\n    value. The value's type depends on the constructed flag. If\n    constructed, it will contain a list of other asn1 objects. If not,\n    it will contain the ASN.1 value as an array of bytes formatted\n    according to the ASN.1 data type. */\n\n  // remove undefined values\n  if(forge.util.isArray(value)) {\n    var tmp = [];\n    for(var i = 0; i < value.length; ++i) {\n      if(value[i] !== undefined) {\n        tmp.push(value[i]);\n      }\n    }\n    value = tmp;\n  }\n\n  return {\n    tagClass: tagClass,\n    type: type,\n    constructed: constructed,\n    composed: constructed || forge.util.isArray(value),\n    value: value\n  };\n};\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param b the BER-encoded ASN.1 byte buffer, starting with the first\n *          length byte.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nvar _getValueLength = asn1.getBerValueLength = function(b) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  var b2 = b.getByte();\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    length = b.getInt((b2 & 0x7F) << 3);\n  }\n  return length;\n};\n\n/**\n * Parses an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param strict true to be strict when checking value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the parsed asn1 object.\n */\nasn1.fromDer = function(bytes, strict) {\n  if(strict === undefined) {\n    strict = true;\n  }\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // minimum length for ASN.1 DER structure is 2\n  if(bytes.length() < 2) {\n    var error = new Error('Too few bytes to parse DER.');\n    error.bytes = bytes.length();\n    throw error;\n  }\n\n  // get the first byte\n  var b1 = bytes.getByte();\n\n  // get the tag class\n  var tagClass = (b1 & 0xC0);\n\n  // get the type (bits 1-5)\n  var type = b1 & 0x1F;\n\n  // get the value length\n  var length = _getValueLength(bytes);\n\n  // ensure there are enough bytes to get the value\n  if(bytes.length() < length) {\n    if(strict) {\n      var error = new Error('Too few bytes to read ASN.1 value.');\n      error.detail = bytes.length() + ' < ' + length;\n      throw error;\n    }\n    // Note: be lenient with truncated values\n    length = bytes.length();\n  }\n\n  // prepare to get value\n  var value;\n\n  // constructed flag is bit 6 (32 = 0x20) of the first byte\n  var constructed = ((b1 & 0x20) === 0x20);\n\n  // determine if the value is composed of other ASN.1 objects (if its\n  // constructed it will be and if its a BITSTRING it may be)\n  var composed = constructed;\n  if(!composed && tagClass === asn1.Class.UNIVERSAL &&\n    type === asn1.Type.BITSTRING && length > 1) {\n    /* The first octet gives the number of bits by which the length of the\n      bit string is less than the next multiple of eight (this is called\n      the \"number of unused bits\").\n\n      The second and following octets give the value of the bit string\n      converted to an octet string. */\n    // if there are no unused bits, maybe the bitstring holds ASN.1 objs\n    var read = bytes.read;\n    var unused = bytes.getByte();\n    if(unused === 0) {\n      // if the first byte indicates UNIVERSAL or CONTEXT_SPECIFIC,\n      // and the length is valid, assume we've got an ASN.1 object\n      b1 = bytes.getByte();\n      var tc = (b1 & 0xC0);\n      if(tc === asn1.Class.UNIVERSAL || tc === asn1.Class.CONTEXT_SPECIFIC) {\n        try {\n          var len = _getValueLength(bytes);\n          composed = (len === length - (bytes.read - read));\n          if(composed) {\n            // adjust read/length to account for unused bits byte\n            ++read;\n            --length;\n          }\n        } catch(ex) {}\n      }\n    }\n    // restore read pointer\n    bytes.read = read;\n  }\n\n  if(composed) {\n    // parse child asn1 objects from the value\n    value = [];\n    if(length === undefined) {\n      // asn1 object of indefinite length, read until end tag\n      for(;;) {\n        if(bytes.bytes(2) === String.fromCharCode(0, 0)) {\n          bytes.getBytes(2);\n          break;\n        }\n        value.push(asn1.fromDer(bytes, strict));\n      }\n    } else {\n      // parsing asn1 object of definite length\n      var start = bytes.length();\n      while(length > 0) {\n        value.push(asn1.fromDer(bytes, strict));\n        length -= start - bytes.length();\n        start = bytes.length();\n      }\n    }\n  } else {\n    // asn1 not composed, get raw value\n    // TODO: do DER to OID conversion and vice-versa in .toDer?\n\n    if(length === undefined) {\n      if(strict) {\n        throw new Error('Non-constructed ASN.1 object of indefinite length.');\n      }\n      // be lenient and use remaining bytes\n      length = bytes.length();\n    }\n\n    if(type === asn1.Type.BMPSTRING) {\n      value = '';\n      for(var i = 0; i < length; i += 2) {\n        value += String.fromCharCode(bytes.getInt16());\n      }\n    } else {\n      value = bytes.getBytes(length);\n    }\n  }\n\n  // create and return asn1 object\n  return asn1.create(tagClass, type, constructed, value);\n};\n\n/**\n * Converts the given asn1 object to a buffer of bytes in DER format.\n *\n * @param asn1 the asn1 object to convert to bytes.\n *\n * @return the buffer of bytes.\n */\nasn1.toDer = function(obj) {\n  var bytes = forge.util.createBuffer();\n\n  // build the first byte\n  var b1 = obj.tagClass | obj.type;\n\n  // for storing the ASN.1 value\n  var value = forge.util.createBuffer();\n\n  // if composed, use each child asn1 object's DER bytes as value\n  if(obj.composed) {\n    // turn on 6th bit (0x20 = 32) to indicate asn1 is constructed\n    // from other asn1 objects\n    if(obj.constructed) {\n      b1 |= 0x20;\n    } else {\n      // type is a bit string, add unused bits of 0x00\n      value.putByte(0x00);\n    }\n\n    // add all of the child DER bytes together\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        value.putBuffer(asn1.toDer(obj.value[i]));\n      }\n    }\n  } else {\n    // use asn1.value directly\n    if(obj.type === asn1.Type.BMPSTRING) {\n      for(var i = 0; i < obj.value.length; ++i) {\n        value.putInt16(obj.value.charCodeAt(i));\n      }\n    } else {\n      // ensure integer is minimally-encoded\n      if(obj.type === asn1.Type.INTEGER &&\n        obj.value.length > 1 &&\n        // leading 0x00 for positive integer\n        ((obj.value.charCodeAt(0) === 0 &&\n        (obj.value.charCodeAt(1) & 0x80) === 0) ||\n        // leading 0xFF for negative integer\n        (obj.value.charCodeAt(0) === 0xFF &&\n        (obj.value.charCodeAt(1) & 0x80) === 0x80))) {\n        value.putBytes(obj.value.substr(1));\n      } else {\n        value.putBytes(obj.value);\n      }\n    }\n  }\n\n  // add tag byte\n  bytes.putByte(b1);\n\n  // use \"short form\" encoding\n  if(value.length() <= 127) {\n    // one byte describes the length\n    // bit 8 = 0 and bits 7-1 = length\n    bytes.putByte(value.length() & 0x7F);\n  } else {\n    // use \"long form\" encoding\n    // 2 to 127 bytes describe the length\n    // first byte: bit 8 = 1 and bits 7-1 = # of additional bytes\n    // other bytes: length in base 256, big-endian\n    var len = value.length();\n    var lenBytes = '';\n    do {\n      lenBytes += String.fromCharCode(len & 0xFF);\n      len = len >>> 8;\n    } while(len > 0);\n\n    // set first byte to # bytes used to store the length and turn on\n    // bit 8 to indicate long-form length is used\n    bytes.putByte(lenBytes.length | 0x80);\n\n    // concatenate length bytes in reverse since they were generated\n    // little endian and we need big endian\n    for(var i = lenBytes.length - 1; i >= 0; --i) {\n      bytes.putByte(lenBytes.charCodeAt(i));\n    }\n  }\n\n  // concatenate value bytes\n  bytes.putBuffer(value);\n  return bytes;\n};\n\n/**\n * Converts an OID dot-separated string to a byte buffer. The byte buffer\n * contains only the DER-encoded value, not any tag or length bytes.\n *\n * @param oid the OID dot-separated string.\n *\n * @return the byte buffer.\n */\nasn1.oidToDer = function(oid) {\n  // split OID into individual values\n  var values = oid.split('.');\n  var bytes = forge.util.createBuffer();\n\n  // first byte is 40 * value1 + value2\n  bytes.putByte(40 * parseInt(values[0], 10) + parseInt(values[1], 10));\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var last, valueBytes, value, b;\n  for(var i = 2; i < values.length; ++i) {\n    // produce value bytes in reverse because we don't know how many\n    // bytes it will take to store the value\n    last = true;\n    valueBytes = [];\n    value = parseInt(values[i], 10);\n    do {\n      b = value & 0x7F;\n      value = value >>> 7;\n      // if value is not last, then turn on 8th bit\n      if(!last) {\n        b |= 0x80;\n      }\n      valueBytes.push(b);\n      last = false;\n    } while(value > 0);\n\n    // add value bytes in reverse (needs to be in big endian)\n    for(var n = valueBytes.length - 1; n >= 0; --n) {\n      bytes.putByte(valueBytes[n]);\n    }\n  }\n\n  return bytes;\n};\n\n/**\n * Converts a DER-encoded byte buffer to an OID dot-separated string. The\n * byte buffer should contain only the DER-encoded value, not any tag or\n * length bytes.\n *\n * @param bytes the byte buffer.\n *\n * @return the OID dot-separated string.\n */\nasn1.derToOid = function(bytes) {\n  var oid;\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // first byte is 40 * value1 + value2\n  var b = bytes.getByte();\n  oid = Math.floor(b / 40) + '.' + (b % 40);\n\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var value = 0;\n  while(bytes.length() > 0) {\n    b = bytes.getByte();\n    value = value << 7;\n    // not the last byte for the value\n    if(b & 0x80) {\n      value += b & 0x7F;\n    } else {\n      // last byte\n      oid += '.' + (value + b);\n      value = 0;\n    }\n  }\n\n  return oid;\n};\n\n/**\n * Converts a UTCTime value to a date.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates passed 2049. Parsing that structure hasn't been implemented yet.\n *\n * @param utc the UTCTime value to convert.\n *\n * @return the date.\n */\nasn1.utcTimeToDate = function(utc) {\n  /* The following formats can be used:\n\n    YYMMDDhhmmZ\n    YYMMDDhhmm+hh'mm'\n    YYMMDDhhmm-hh'mm'\n    YYMMDDhhmmssZ\n    YYMMDDhhmmss+hh'mm'\n    YYMMDDhhmmss-hh'mm'\n\n    Where:\n\n    YY is the least significant two digits of the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  // if YY >= 50 use 19xx, if YY < 50 use 20xx\n  var year = parseInt(utc.substr(0, 2), 10);\n  year = (year >= 50) ? 1900 + year : 2000 + year;\n  var MM = parseInt(utc.substr(2, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(utc.substr(4, 2), 10);\n  var hh = parseInt(utc.substr(6, 2), 10);\n  var mm = parseInt(utc.substr(8, 2), 10);\n  var ss = 0;\n\n  // not just YYMMDDhhmmZ\n  if(utc.length > 11) {\n    // get character after minutes\n    var c = utc.charAt(10);\n    var end = 10;\n\n    // see if seconds are present\n    if(c !== '+' && c !== '-') {\n      // get seconds\n      ss = parseInt(utc.substr(10, 2), 10);\n      end += 2;\n    }\n  }\n\n  // update date\n  date.setUTCFullYear(year, MM, DD);\n  date.setUTCHours(hh, mm, ss, 0);\n\n  if(end) {\n    // get +/- after end of time\n    c = utc.charAt(end);\n    if(c === '+' || c === '-') {\n      // get hours+minutes offset\n      var hhoffset = parseInt(utc.substr(end + 1, 2), 10);\n      var mmoffset = parseInt(utc.substr(end + 4, 2), 10);\n\n      // calculate offset in milliseconds\n      var offset = hhoffset * 60 + mmoffset;\n      offset *= 60000;\n\n      // apply offset\n      if(c === '+') {\n        date.setTime(+date - offset);\n      } else {\n        date.setTime(+date + offset);\n      }\n    }\n  }\n\n  return date;\n};\n\n/**\n * Converts a GeneralizedTime value to a date.\n *\n * @param gentime the GeneralizedTime value to convert.\n *\n * @return the date.\n */\nasn1.generalizedTimeToDate = function(gentime) {\n  /* The following formats can be used:\n\n    YYYYMMDDHHMMSS\n    YYYYMMDDHHMMSS.fff\n    YYYYMMDDHHMMSSZ\n    YYYYMMDDHHMMSS.fffZ\n    YYYYMMDDHHMMSS+hh'mm'\n    YYYYMMDDHHMMSS.fff+hh'mm'\n    YYYYMMDDHHMMSS-hh'mm'\n    YYYYMMDDHHMMSS.fff-hh'mm'\n\n    Where:\n\n    YYYY is the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    .fff is the second fraction, accurate to three decimal places\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  var YYYY = parseInt(gentime.substr(0, 4), 10);\n  var MM = parseInt(gentime.substr(4, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(gentime.substr(6, 2), 10);\n  var hh = parseInt(gentime.substr(8, 2), 10);\n  var mm = parseInt(gentime.substr(10, 2), 10);\n  var ss = parseInt(gentime.substr(12, 2), 10);\n  var fff = 0;\n  var offset = 0;\n  var isUTC = false;\n\n  if(gentime.charAt(gentime.length - 1) === 'Z') {\n    isUTC = true;\n  }\n\n  var end = gentime.length - 5, c = gentime.charAt(end);\n  if(c === '+' || c === '-') {\n    // get hours+minutes offset\n    var hhoffset = parseInt(gentime.substr(end + 1, 2), 10);\n    var mmoffset = parseInt(gentime.substr(end + 4, 2), 10);\n\n    // calculate offset in milliseconds\n    offset = hhoffset * 60 + mmoffset;\n    offset *= 60000;\n\n    // apply offset\n    if(c === '+') {\n      offset *= -1;\n    }\n\n    isUTC = true;\n  }\n\n  // check for second fraction\n  if(gentime.charAt(14) === '.') {\n    fff = parseFloat(gentime.substr(14), 10) * 1000;\n  }\n\n  if(isUTC) {\n    date.setUTCFullYear(YYYY, MM, DD);\n    date.setUTCHours(hh, mm, ss, fff);\n\n    // apply offset\n    date.setTime(+date + offset);\n  } else {\n    date.setFullYear(YYYY, MM, DD);\n    date.setHours(hh, mm, ss, fff);\n  }\n\n  return date;\n};\n\n/**\n * Converts a date to a UTCTime value.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates passed 2049. Converting to a GeneralizedTime hasn't been\n * implemented yet.\n *\n * @param date the date to convert.\n *\n * @return the UTCTime value.\n */\nasn1.dateToUtcTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYMMDDhhmmssZ\n  var format = [];\n  format.push(('' + date.getUTCFullYear()).substr(2));\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a date to a GeneralizedTime value.\n *\n * @param date the date to convert.\n *\n * @return the GeneralizedTime value as a string.\n */\nasn1.dateToGeneralizedTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYYYMMDDHHMMSSZ\n  var format = [];\n  format.push('' + date.getUTCFullYear());\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a javascript integer to a DER-encoded byte buffer to be used\n * as the value for an INTEGER type.\n *\n * @param x the integer.\n *\n * @return the byte buffer.\n */\nasn1.integerToDer = function(x) {\n  var rval = forge.util.createBuffer();\n  if(x >= -0x80 && x < 0x80) {\n    return rval.putSignedInt(x, 8);\n  }\n  if(x >= -0x8000 && x < 0x8000) {\n    return rval.putSignedInt(x, 16);\n  }\n  if(x >= -0x800000 && x < 0x800000) {\n    return rval.putSignedInt(x, 24);\n  }\n  if(x >= -0x80000000 && x < 0x80000000) {\n    return rval.putSignedInt(x, 32);\n  }\n  var error = new Error('Integer too large; max is 32-bits.');\n  error.integer = x;\n  throw error;\n};\n\n/**\n * Converts a DER-encoded byte buffer to a javascript integer. This is\n * typically used to decode the value of an INTEGER type.\n *\n * @param bytes the byte buffer.\n *\n * @return the integer.\n */\nasn1.derToInteger = function(bytes) {\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var n = bytes.length() * 8;\n  if(n > 32) {\n    throw new Error('Integer too large; max is 32-bits.');\n  }\n  return bytes.getSignedInt(n);\n};\n\n/**\n * Validates the that given ASN.1 object is at least a super set of the\n * given ASN.1 structure. Only tag classes and types are checked. An\n * optional map may also be provided to capture ASN.1 values while the\n * structure is checked.\n *\n * To capture an ASN.1 value, set an object in the validator's 'capture'\n * parameter to the key to use in the capture map. To capture the full\n * ASN.1 object, specify 'captureAsn1'.\n *\n * Objects in the validator may set a field 'optional' to true to indicate\n * that it isn't necessary to pass validation.\n *\n * @param obj the ASN.1 object to validate.\n * @param v the ASN.1 structure validator.\n * @param capture an optional map to capture values in.\n * @param errors an optional array for storing validation errors.\n *\n * @return true on success, false on failure.\n */\nasn1.validate = function(obj, v, capture, errors) {\n  var rval = false;\n\n  // ensure tag class and type are the same if specified\n  if((obj.tagClass === v.tagClass || typeof(v.tagClass) === 'undefined') &&\n    (obj.type === v.type || typeof(v.type) === 'undefined')) {\n    // ensure constructed flag is the same if specified\n    if(obj.constructed === v.constructed ||\n      typeof(v.constructed) === 'undefined') {\n      rval = true;\n\n      // handle sub values\n      if(v.value && forge.util.isArray(v.value)) {\n        var j = 0;\n        for(var i = 0; rval && i < v.value.length; ++i) {\n          rval = v.value[i].optional || false;\n          if(obj.value[j]) {\n            rval = asn1.validate(obj.value[j], v.value[i], capture, errors);\n            if(rval) {\n              ++j;\n            } else if(v.value[i].optional) {\n              rval = true;\n            }\n          }\n          if(!rval && errors) {\n            errors.push(\n              '[' + v.name + '] ' +\n              'Tag class \"' + v.tagClass + '\", type \"' +\n              v.type + '\" expected value length \"' +\n              v.value.length + '\", got \"' +\n              obj.value.length + '\"');\n          }\n        }\n      }\n\n      if(rval && capture) {\n        if(v.capture) {\n          capture[v.capture] = obj.value;\n        }\n        if(v.captureAsn1) {\n          capture[v.captureAsn1] = obj;\n        }\n      }\n    } else if(errors) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected constructed \"' + v.constructed + '\", got \"' +\n        obj.constructed + '\"');\n    }\n  } else if(errors) {\n    if(obj.tagClass !== v.tagClass) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected tag class \"' + v.tagClass + '\", got \"' +\n        obj.tagClass + '\"');\n    }\n    if(obj.type !== v.type) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected type \"' + v.type + '\", got \"' + obj.type + '\"');\n    }\n  }\n  return rval;\n};\n\n// regex for testing for non-latin characters\nvar _nonLatinRegex = /[^\\\\u0000-\\\\u00ff]/;\n\n/**\n * Pretty prints an ASN.1 object to a string.\n *\n * @param obj the object to write out.\n * @param level the level in the tree.\n * @param indentation the indentation to use.\n *\n * @return the string.\n */\nasn1.prettyPrint = function(obj, level, indentation) {\n  var rval = '';\n\n  // set default level and indentation\n  level = level || 0;\n  indentation = indentation || 2;\n\n  // start new line for deep levels\n  if(level > 0) {\n    rval += '\\n';\n  }\n\n  // create indent\n  var indent = '';\n  for(var i = 0; i < level * indentation; ++i) {\n    indent += ' ';\n  }\n\n  // print class:type\n  rval += indent + 'Tag: ';\n  switch(obj.tagClass) {\n  case asn1.Class.UNIVERSAL:\n    rval += 'Universal:';\n    break;\n  case asn1.Class.APPLICATION:\n    rval += 'Application:';\n    break;\n  case asn1.Class.CONTEXT_SPECIFIC:\n    rval += 'Context-Specific:';\n    break;\n  case asn1.Class.PRIVATE:\n    rval += 'Private:';\n    break;\n  }\n\n  if(obj.tagClass === asn1.Class.UNIVERSAL) {\n    rval += obj.type;\n\n    // known types\n    switch(obj.type) {\n    case asn1.Type.NONE:\n      rval += ' (None)';\n      break;\n    case asn1.Type.BOOLEAN:\n      rval += ' (Boolean)';\n      break;\n    case asn1.Type.BITSTRING:\n      rval += ' (Bit string)';\n      break;\n    case asn1.Type.INTEGER:\n      rval += ' (Integer)';\n      break;\n    case asn1.Type.OCTETSTRING:\n      rval += ' (Octet string)';\n      break;\n    case asn1.Type.NULL:\n      rval += ' (Null)';\n      break;\n    case asn1.Type.OID:\n      rval += ' (Object Identifier)';\n      break;\n    case asn1.Type.ODESC:\n      rval += ' (Object Descriptor)';\n      break;\n    case asn1.Type.EXTERNAL:\n      rval += ' (External or Instance of)';\n      break;\n    case asn1.Type.REAL:\n      rval += ' (Real)';\n      break;\n    case asn1.Type.ENUMERATED:\n      rval += ' (Enumerated)';\n      break;\n    case asn1.Type.EMBEDDED:\n      rval += ' (Embedded PDV)';\n      break;\n    case asn1.Type.UTF8:\n      rval += ' (UTF8)';\n      break;\n    case asn1.Type.ROID:\n      rval += ' (Relative Object Identifier)';\n      break;\n    case asn1.Type.SEQUENCE:\n      rval += ' (Sequence)';\n      break;\n    case asn1.Type.SET:\n      rval += ' (Set)';\n      break;\n    case asn1.Type.PRINTABLESTRING:\n      rval += ' (Printable String)';\n      break;\n    case asn1.Type.IA5String:\n      rval += ' (IA5String (ASCII))';\n      break;\n    case asn1.Type.UTCTIME:\n      rval += ' (UTC time)';\n      break;\n    case asn1.Type.GENERALIZEDTIME:\n      rval += ' (Generalized time)';\n      break;\n    case asn1.Type.BMPSTRING:\n      rval += ' (BMP String)';\n      break;\n    }\n  } else {\n    rval += obj.type;\n  }\n\n  rval += '\\n';\n  rval += indent + 'Constructed: ' + obj.constructed + '\\n';\n\n  if(obj.composed) {\n    var subvalues = 0;\n    var sub = '';\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        subvalues += 1;\n        sub += asn1.prettyPrint(obj.value[i], level + 1, indentation);\n        if((i + 1) < obj.value.length) {\n          sub += ',';\n        }\n      }\n    }\n    rval += indent + 'Sub values: ' + subvalues + sub;\n  } else {\n    rval += indent + 'Value: ';\n    if(obj.type === asn1.Type.OID) {\n      var oid = asn1.derToOid(obj.value);\n      rval += oid;\n      if(forge.pki && forge.pki.oids) {\n        if(oid in forge.pki.oids) {\n          rval += ' (' + forge.pki.oids[oid] + ') ';\n        }\n      }\n    }\n    if(obj.type === asn1.Type.INTEGER) {\n      try {\n        rval += asn1.derToInteger(obj.value);\n      } catch(ex) {\n        rval += '0x' + forge.util.bytesToHex(obj.value);\n      }\n    } else if(obj.type === asn1.Type.OCTETSTRING) {\n      if(!_nonLatinRegex.test(obj.value)) {\n        rval += '(' + obj.value + ') ';\n      }\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.type === asn1.Type.UTF8) {\n      rval += forge.util.decodeUtf8(obj.value);\n    } else if(obj.type === asn1.Type.PRINTABLESTRING ||\n      obj.type === asn1.Type.IA5String) {\n      rval += obj.value;\n    } else if(_nonLatinRegex.test(obj.value)) {\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.value.length === 0) {\n      rval += '[null]';\n    } else {\n      rval += obj.value;\n    }\n  }\n\n  return rval;\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'asn1';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/asn1',['require', 'module', './util', './oids'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Message Digest Algorithm 5 with 128-bit digest (MD5) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nvar md5 = forge.md5 = forge.md5 || {};\nforge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\nforge.md.md5 = forge.md.algorithms.md5 = md5;\n\n/**\n * Creates an MD5 message digest object.\n *\n * @return a message digest object.\n */\nmd5.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // MD5 state contains four 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(16);\n\n  // message digest object\n  var md = {\n    algorithm: 'md5',\n    blockLength: 64,\n    digestLength: 16,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = (len[1] / 0x100000000) >>> 0;\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate MD5 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in little-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry\n    var bits, carry = 0;\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      bits = md.fullMessageLength[i] * 8 + carry;\n      carry = (bits / 0x100000000) >>> 0;\n      finalBlock.putInt32Le(bits >>> 0);\n    }\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32Le(s2.h0);\n    rval.putInt32Le(s2.h1);\n    rval.putInt32Le(s2.h2);\n    rval.putInt32Le(s2.h3);\n    return rval;\n  };\n\n  return md;\n};\n\n// padding, constant tables for calculating md5\nvar _padding = null;\nvar _g = null;\nvar _r = null;\nvar _k = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // g values\n  _g = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12,\n    5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2,\n    0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9];\n\n  // rounds table\n  _r = [\n    7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,\n    5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,\n    4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,\n    6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21];\n\n  // get the result of abs(sin(i + 1)) as a 32-bit integer\n  _k = new Array(64);\n  for(var i = 0; i < 64; ++i) {\n    _k[i] = Math.floor(Math.abs(Math.sin(i + 1)) * 0x100000000);\n  }\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates an MD5 state with the given byte buffer.\n *\n * @param s the MD5 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, f, r, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32Le();\n      f = d ^ (b & (c ^ d));\n      t = (a + f + _k[i] + w[i]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      f = c ^ (d & (b ^ c));\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 3\n    for(; i < 48; ++i) {\n      f = b ^ c ^ d;\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 4\n    for(; i < 64; ++i) {\n      f = c ^ (b | ~d);\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n\n    len -= 64;\n  }\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'md5';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/md5',['require', 'module', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nvar sha1 = forge.sha1 = forge.sha1 || {};\nforge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n   /**\n    * Produces the digest.\n    *\n    * @return a byte buffer containing the digest value.\n    */\n   md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'sha1';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/sha1',['require', 'module', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nvar sha256 = forge.sha256 = forge.sha256 || {};\nforge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'sha256';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/sha256',['require', 'module', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Secure Hash Algorithm with a 1024-bit block size implementation.\n *\n * This includes: SHA-512, SHA-384, SHA-512/224, and SHA-512/256. For\n * SHA-256 (block size 512 bits), see sha256.js.\n *\n * See FIPS 180-4 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014-2015 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nvar sha512 = forge.sha512 = forge.sha512 || {};\nforge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n\n// SHA-512\nforge.md.sha512 = forge.md.algorithms.sha512 = sha512;\n\n// SHA-384\nvar sha384 = forge.sha384 = forge.sha512.sha384 = forge.sha512.sha384 || {};\nsha384.create = function() {\n  return sha512.create('SHA-384');\n};\nforge.md.sha384 = forge.md.algorithms.sha384 = sha384;\n\n// SHA-512/256\nforge.sha512.sha256 = forge.sha512.sha256 || {\n  create: function() {\n    return sha512.create('SHA-512/256');\n  }\n};\nforge.md['sha512/256'] = forge.md.algorithms['sha512/256'] =\n  forge.sha512.sha256;\n\n// SHA-512/224\nforge.sha512.sha224 = forge.sha512.sha224 || {\n  create: function() {\n    return sha512.create('SHA-512/224');\n  }\n};\nforge.md['sha512/224'] = forge.md.algorithms['sha512/224'] =\n  forge.sha512.sha224;\n\n/**\n * Creates a SHA-2 message digest object.\n *\n * @param algorithm the algorithm to use (SHA-512, SHA-384, SHA-512/224,\n *          SHA-512/256).\n *\n * @return a message digest object.\n */\nsha512.create = function(algorithm) {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  if(typeof algorithm === 'undefined') {\n    algorithm = 'SHA-512';\n  }\n\n  if(!(algorithm in _states)) {\n    throw new Error('Invalid SHA-512 algorithm: ' + algorithm);\n  }\n\n  // SHA-512 state contains eight 64-bit integers (each as two 32-bit ints)\n  var _state = _states[algorithm];\n  var _h = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for 64-bit word storage\n  var _w = new Array(80);\n  for(var wi = 0; wi < 80; ++wi) {\n    _w[wi] = new Array(2);\n  }\n\n  // message digest object\n  var md = {\n    // SHA-512 => sha512\n    algorithm: algorithm.replace('-', '').toLowerCase(),\n    blockLength: 128,\n    digestLength: 64,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 16\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength128 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength128 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _h = new Array(_state.length);\n    for(var i = 0; i < _state.length; ++i) {\n      _h[i] = _state[i].slice(0);\n    }\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_h, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-512 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 896 mod 1024. In other words,\n    the data to be digested must be a multiple of 1024 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 16 bytes (128\n    bits), that means that the last segment of the data must have 112 bytes\n    (896 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 896 mod 1024 because\n    1024 - 128 = 896.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 896 mod 1024, then 1024 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var h = new Array(_h.length);\n    for(var i = 0; i < _h.length; ++i) {\n      h[i] = _h[i].slice(0);\n    }\n    _update(h, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    var hlen;\n    if(algorithm === 'SHA-512') {\n      hlen = h.length;\n    } else if(algorithm === 'SHA-384') {\n      hlen = h.length - 2;\n    } else {\n      hlen = h.length - 4;\n    }\n    for(var i = 0; i < hlen; ++i) {\n      rval.putInt32(h[i][0]);\n      if(i !== hlen - 1 || algorithm !== 'SHA-512/224') {\n        rval.putInt32(h[i][1]);\n      }\n    }\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-512 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n// initial hash states\nvar _states = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 128);\n\n  // create K table for SHA-512\n  _k = [\n    [0x428a2f98, 0xd728ae22], [0x71374491, 0x23ef65cd],\n    [0xb5c0fbcf, 0xec4d3b2f], [0xe9b5dba5, 0x8189dbbc],\n    [0x3956c25b, 0xf348b538], [0x59f111f1, 0xb605d019],\n    [0x923f82a4, 0xaf194f9b], [0xab1c5ed5, 0xda6d8118],\n    [0xd807aa98, 0xa3030242], [0x12835b01, 0x45706fbe],\n    [0x243185be, 0x4ee4b28c], [0x550c7dc3, 0xd5ffb4e2],\n    [0x72be5d74, 0xf27b896f], [0x80deb1fe, 0x3b1696b1],\n    [0x9bdc06a7, 0x25c71235], [0xc19bf174, 0xcf692694],\n    [0xe49b69c1, 0x9ef14ad2], [0xefbe4786, 0x384f25e3],\n    [0x0fc19dc6, 0x8b8cd5b5], [0x240ca1cc, 0x77ac9c65],\n    [0x2de92c6f, 0x592b0275], [0x4a7484aa, 0x6ea6e483],\n    [0x5cb0a9dc, 0xbd41fbd4], [0x76f988da, 0x831153b5],\n    [0x983e5152, 0xee66dfab], [0xa831c66d, 0x2db43210],\n    [0xb00327c8, 0x98fb213f], [0xbf597fc7, 0xbeef0ee4],\n    [0xc6e00bf3, 0x3da88fc2], [0xd5a79147, 0x930aa725],\n    [0x06ca6351, 0xe003826f], [0x14292967, 0x0a0e6e70],\n    [0x27b70a85, 0x46d22ffc], [0x2e1b2138, 0x5c26c926],\n    [0x4d2c6dfc, 0x5ac42aed], [0x53380d13, 0x9d95b3df],\n    [0x650a7354, 0x8baf63de], [0x766a0abb, 0x3c77b2a8],\n    [0x81c2c92e, 0x47edaee6], [0x92722c85, 0x1482353b],\n    [0xa2bfe8a1, 0x4cf10364], [0xa81a664b, 0xbc423001],\n    [0xc24b8b70, 0xd0f89791], [0xc76c51a3, 0x0654be30],\n    [0xd192e819, 0xd6ef5218], [0xd6990624, 0x5565a910],\n    [0xf40e3585, 0x5771202a], [0x106aa070, 0x32bbd1b8],\n    [0x19a4c116, 0xb8d2d0c8], [0x1e376c08, 0x5141ab53],\n    [0x2748774c, 0xdf8eeb99], [0x34b0bcb5, 0xe19b48a8],\n    [0x391c0cb3, 0xc5c95a63], [0x4ed8aa4a, 0xe3418acb],\n    [0x5b9cca4f, 0x7763e373], [0x682e6ff3, 0xd6b2b8a3],\n    [0x748f82ee, 0x5defb2fc], [0x78a5636f, 0x43172f60],\n    [0x84c87814, 0xa1f0ab72], [0x8cc70208, 0x1a6439ec],\n    [0x90befffa, 0x23631e28], [0xa4506ceb, 0xde82bde9],\n    [0xbef9a3f7, 0xb2c67915], [0xc67178f2, 0xe372532b],\n    [0xca273ece, 0xea26619c], [0xd186b8c7, 0x21c0c207],\n    [0xeada7dd6, 0xcde0eb1e], [0xf57d4f7f, 0xee6ed178],\n    [0x06f067aa, 0x72176fba], [0x0a637dc5, 0xa2c898a6],\n    [0x113f9804, 0xbef90dae], [0x1b710b35, 0x131c471b],\n    [0x28db77f5, 0x23047d84], [0x32caab7b, 0x40c72493],\n    [0x3c9ebe0a, 0x15c9bebc], [0x431d67c4, 0x9c100d4c],\n    [0x4cc5d4be, 0xcb3e42b6], [0x597f299c, 0xfc657e2a],\n    [0x5fcb6fab, 0x3ad6faec], [0x6c44198c, 0x4a475817]\n  ];\n\n  // initial hash states\n  _states = {};\n  _states['SHA-512'] = [\n    [0x6a09e667, 0xf3bcc908],\n    [0xbb67ae85, 0x84caa73b],\n    [0x3c6ef372, 0xfe94f82b],\n    [0xa54ff53a, 0x5f1d36f1],\n    [0x510e527f, 0xade682d1],\n    [0x9b05688c, 0x2b3e6c1f],\n    [0x1f83d9ab, 0xfb41bd6b],\n    [0x5be0cd19, 0x137e2179]\n  ];\n  _states['SHA-384'] = [\n    [0xcbbb9d5d, 0xc1059ed8],\n    [0x629a292a, 0x367cd507],\n    [0x9159015a, 0x3070dd17],\n    [0x152fecd8, 0xf70e5939],\n    [0x67332667, 0xffc00b31],\n    [0x8eb44a87, 0x68581511],\n    [0xdb0c2e0d, 0x64f98fa7],\n    [0x47b5481d, 0xbefa4fa4]\n  ];\n  _states['SHA-512/256'] = [\n    [0x22312194, 0xFC2BF72C],\n    [0x9F555FA3, 0xC84C64C2],\n    [0x2393B86B, 0x6F53B151],\n    [0x96387719, 0x5940EABD],\n    [0x96283EE2, 0xA88EFFE3],\n    [0xBE5E1E25, 0x53863992],\n    [0x2B0199FC, 0x2C85B8AA],\n    [0x0EB72DDC, 0x81C52CA2]\n  ];\n  _states['SHA-512/224'] = [\n    [0x8C3D37C8, 0x19544DA2],\n    [0x73E19966, 0x89DCD4D6],\n    [0x1DFAB7AE, 0x32FF9C82],\n    [0x679DD514, 0x582F9FCF],\n    [0x0F6D2B69, 0x7BD44DA8],\n    [0x77E36F73, 0x04C48942],\n    [0x3F9D85A8, 0x6A1D36C8],\n    [0x1112E6AD, 0x91D692A1]\n  ];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-512 state with the given byte buffer.\n *\n * @param s the SHA-512 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (128 byte) chunks\n  var t1_hi, t1_lo;\n  var t2_hi, t2_lo;\n  var s0_hi, s0_lo;\n  var s1_hi, s1_lo;\n  var ch_hi, ch_lo;\n  var maj_hi, maj_lo;\n  var a_hi, a_lo;\n  var b_hi, b_lo;\n  var c_hi, c_lo;\n  var d_hi, d_lo;\n  var e_hi, e_lo;\n  var f_hi, f_lo;\n  var g_hi, g_lo;\n  var h_hi, h_lo;\n  var i, hi, lo, w2, w7, w15, w16;\n  var len = bytes.length();\n  while(len >= 128) {\n    // the w array will be populated with sixteen 64-bit big-endian words\n    // and then extended into 64 64-bit words according to SHA-512\n    for(i = 0; i < 16; ++i) {\n      w[i][0] = bytes.getInt32() >>> 0;\n      w[i][1] = bytes.getInt32() >>> 0;\n    }\n    for(; i < 80; ++i) {\n      // for word 2 words ago: ROTR 19(x) ^ ROTR 61(x) ^ SHR 6(x)\n      w2 = w[i - 2];\n      hi = w2[0];\n      lo = w2[1];\n\n      // high bits\n      t1_hi = (\n        ((hi >>> 19) | (lo << 13)) ^ // ROTR 19\n        ((lo >>> 29) | (hi << 3)) ^ // ROTR 61/(swap + ROTR 29)\n        (hi >>> 6)) >>> 0; // SHR 6\n      // low bits\n      t1_lo = (\n        ((hi << 13) | (lo >>> 19)) ^ // ROTR 19\n        ((lo << 3) | (hi >>> 29)) ^ // ROTR 61/(swap + ROTR 29)\n        ((hi << 26) | (lo >>> 6))) >>> 0; // SHR 6\n\n      // for word 15 words ago: ROTR 1(x) ^ ROTR 8(x) ^ SHR 7(x)\n      w15 = w[i - 15];\n      hi = w15[0];\n      lo = w15[1];\n\n      // high bits\n      t2_hi = (\n        ((hi >>> 1) | (lo << 31)) ^ // ROTR 1\n        ((hi >>> 8) | (lo << 24)) ^ // ROTR 8\n        (hi >>> 7)) >>> 0; // SHR 7\n      // low bits\n      t2_lo = (\n        ((hi << 31) | (lo >>> 1)) ^ // ROTR 1\n        ((hi << 24) | (lo >>> 8)) ^ // ROTR 8\n        ((hi << 25) | (lo >>> 7))) >>> 0; // SHR 7\n\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^64 (carry lo overflow)\n      w7 = w[i - 7];\n      w16 = w[i - 16];\n      lo = (t1_lo + w7[1] + t2_lo + w16[1]);\n      w[i][0] = (t1_hi + w7[0] + t2_hi + w16[0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      w[i][1] = lo >>> 0;\n    }\n\n    // initialize hash value for this chunk\n    a_hi = s[0][0];\n    a_lo = s[0][1];\n    b_hi = s[1][0];\n    b_lo = s[1][1];\n    c_hi = s[2][0];\n    c_lo = s[2][1];\n    d_hi = s[3][0];\n    d_lo = s[3][1];\n    e_hi = s[4][0];\n    e_lo = s[4][1];\n    f_hi = s[5][0];\n    f_lo = s[5][1];\n    g_hi = s[6][0];\n    g_lo = s[6][1];\n    h_hi = s[7][0];\n    h_lo = s[7][1];\n\n    // round function\n    for(i = 0; i < 80; ++i) {\n      // Sum1(e) = ROTR 14(e) ^ ROTR 18(e) ^ ROTR 41(e)\n      s1_hi = (\n        ((e_hi >>> 14) | (e_lo << 18)) ^ // ROTR 14\n        ((e_hi >>> 18) | (e_lo << 14)) ^ // ROTR 18\n        ((e_lo >>> 9) | (e_hi << 23))) >>> 0; // ROTR 41/(swap + ROTR 9)\n      s1_lo = (\n        ((e_hi << 18) | (e_lo >>> 14)) ^ // ROTR 14\n        ((e_hi << 14) | (e_lo >>> 18)) ^ // ROTR 18\n        ((e_lo << 23) | (e_hi >>> 9))) >>> 0; // ROTR 41/(swap + ROTR 9)\n\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch_hi = (g_hi ^ (e_hi & (f_hi ^ g_hi))) >>> 0;\n      ch_lo = (g_lo ^ (e_lo & (f_lo ^ g_lo))) >>> 0;\n\n      // Sum0(a) = ROTR 28(a) ^ ROTR 34(a) ^ ROTR 39(a)\n      s0_hi = (\n        ((a_hi >>> 28) | (a_lo << 4)) ^ // ROTR 28\n        ((a_lo >>> 2) | (a_hi << 30)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo >>> 7) | (a_hi << 25))) >>> 0; // ROTR 39/(swap + ROTR 7)\n      s0_lo = (\n        ((a_hi << 4) | (a_lo >>> 28)) ^ // ROTR 28\n        ((a_lo << 30) | (a_hi >>> 2)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo << 25) | (a_hi >>> 7))) >>> 0; // ROTR 39/(swap + ROTR 7)\n\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj_hi = ((a_hi & b_hi) | (c_hi & (a_hi ^ b_hi))) >>> 0;\n      maj_lo = ((a_lo & b_lo) | (c_lo & (a_lo ^ b_lo))) >>> 0;\n\n      // main algorithm\n      // t1 = (h + s1 + ch + _k[i] + _w[i]) modulo 2^64 (carry lo overflow)\n      lo = (h_lo + s1_lo + ch_lo + _k[i][1] + w[i][1]);\n      t1_hi = (h_hi + s1_hi + ch_hi + _k[i][0] + w[i][0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      t1_lo = lo >>> 0;\n\n      // t2 = s0 + maj modulo 2^64 (carry lo overflow)\n      lo = s0_lo + maj_lo;\n      t2_hi = (s0_hi + maj_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      t2_lo = lo >>> 0;\n\n      h_hi = g_hi;\n      h_lo = g_lo;\n\n      g_hi = f_hi;\n      g_lo = f_lo;\n\n      f_hi = e_hi;\n      f_lo = e_lo;\n\n      // e = (d + t1) modulo 2^64 (carry lo overflow)\n      lo = d_lo + t1_lo;\n      e_hi = (d_hi + t1_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      e_lo = lo >>> 0;\n\n      d_hi = c_hi;\n      d_lo = c_lo;\n\n      c_hi = b_hi;\n      c_lo = b_lo;\n\n      b_hi = a_hi;\n      b_lo = a_lo;\n\n      // a = (t1 + t2) modulo 2^64 (carry lo overflow)\n      lo = t1_lo + t2_lo;\n      a_hi = (t1_hi + t2_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      a_lo = lo >>> 0;\n    }\n\n    // update hash state (additional modulo 2^64)\n    lo = s[0][1] + a_lo;\n    s[0][0] = (s[0][0] + a_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[0][1] = lo >>> 0;\n\n    lo = s[1][1] + b_lo;\n    s[1][0] = (s[1][0] + b_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[1][1] = lo >>> 0;\n\n    lo = s[2][1] + c_lo;\n    s[2][0] = (s[2][0] + c_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[2][1] = lo >>> 0;\n\n    lo = s[3][1] + d_lo;\n    s[3][0] = (s[3][0] + d_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[3][1] = lo >>> 0;\n\n    lo = s[4][1] + e_lo;\n    s[4][0] = (s[4][0] + e_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[4][1] = lo >>> 0;\n\n    lo = s[5][1] + f_lo;\n    s[5][0] = (s[5][0] + f_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[5][1] = lo >>> 0;\n\n    lo = s[6][1] + g_lo;\n    s[6][0] = (s[6][0] + g_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[6][1] = lo >>> 0;\n\n    lo = s[7][1] + h_lo;\n    s[7][0] = (s[7][0] + h_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[7][1] = lo >>> 0;\n\n    len -= 128;\n  }\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'sha512';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/sha512',['require', 'module', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nforge.md = forge.md || {};\nforge.md.algorithms = {\n  md5: forge.md5,\n  sha1: forge.sha1,\n  sha256: forge.sha256\n};\nforge.md.md5 = forge.md5;\nforge.md.sha1 = forge.sha1;\nforge.md.sha256 = forge.sha256;\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'md';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine(\n  'js/md',['require', 'module', './md5', './sha1', './sha256', './sha512'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Hash-based Message Authentication Code implementation. Requires a message\n * digest object that can be obtained, for example, from forge.md.sha1 or\n * forge.md.md5.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2012 Digital Bazaar, Inc. All rights reserved.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n/* HMAC API */\nvar hmac = forge.hmac = forge.hmac || {};\n\n/**\n * Creates an HMAC object that uses the given message digest object.\n *\n * @return an HMAC object.\n */\nhmac.create = function() {\n  // the hmac key to use\n  var _key = null;\n\n  // the message digest to use\n  var _md = null;\n\n  // the inner padding\n  var _ipadding = null;\n\n  // the outer padding\n  var _opadding = null;\n\n  // hmac context\n  var ctx = {};\n\n  /**\n   * Starts or restarts the HMAC with the given key and message digest.\n   *\n   * @param md the message digest to use, null to reuse the previous one,\n   *           a string to use builtin 'sha1', 'md5', 'sha256'.\n   * @param key the key to use as a string, array of bytes, byte buffer,\n   *           or null to reuse the previous key.\n   */\n  ctx.start = function(md, key) {\n    if(md !== null) {\n      if(typeof md === 'string') {\n        // create builtin message digest\n        md = md.toLowerCase();\n        if(md in forge.md.algorithms) {\n          _md = forge.md.algorithms[md].create();\n        } else {\n          throw new Error('Unknown hash algorithm \"' + md + '\"');\n        }\n      } else {\n        // store message digest\n        _md = md;\n      }\n    }\n\n    if(key === null) {\n      // reuse previous key\n      key = _key;\n    } else {\n      if(typeof key === 'string') {\n        // convert string into byte buffer\n        key = forge.util.createBuffer(key);\n      } else if(forge.util.isArray(key)) {\n        // convert byte array into byte buffer\n        var tmp = key;\n        key = forge.util.createBuffer();\n        for(var i = 0; i < tmp.length; ++i) {\n          key.putByte(tmp[i]);\n        }\n      }\n\n      // if key is longer than blocksize, hash it\n      var keylen = key.length();\n      if(keylen > _md.blockLength) {\n        _md.start();\n        _md.update(key.bytes());\n        key = _md.digest();\n      }\n\n      // mix key into inner and outer padding\n      // ipadding = [0x36 * blocksize] ^ key\n      // opadding = [0x5C * blocksize] ^ key\n      _ipadding = forge.util.createBuffer();\n      _opadding = forge.util.createBuffer();\n      keylen = key.length();\n      for(var i = 0; i < keylen; ++i) {\n        var tmp = key.at(i);\n        _ipadding.putByte(0x36 ^ tmp);\n        _opadding.putByte(0x5C ^ tmp);\n      }\n\n      // if key is shorter than blocksize, add additional padding\n      if(keylen < _md.blockLength) {\n        var tmp = _md.blockLength - keylen;\n        for(var i = 0; i < tmp; ++i) {\n          _ipadding.putByte(0x36);\n          _opadding.putByte(0x5C);\n        }\n      }\n      _key = key;\n      _ipadding = _ipadding.bytes();\n      _opadding = _opadding.bytes();\n    }\n\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n\n    // prepare to do inner hash\n    // hash(ipadding | message)\n    _md.start();\n    _md.update(_ipadding);\n  };\n\n  /**\n   * Updates the HMAC with the given message bytes.\n   *\n   * @param bytes the bytes to update with.\n   */\n  ctx.update = function(bytes) {\n    _md.update(bytes);\n  };\n\n  /**\n   * Produces the Message Authentication Code (MAC).\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  ctx.getMac = function() {\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n    // here we do the outer hashing\n    var inner = _md.digest().bytes();\n    _md.start();\n    _md.update(_opadding);\n    _md.update(inner);\n    return _md.digest();\n  };\n  // alias for getMac\n  ctx.digest = ctx.getMac;\n\n  return ctx;\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'hmac';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/hmac',['require', 'module', './md', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Javascript implementation of basic PEM (Privacy Enhanced Mail) algorithms.\n *\n * See: RFC 1421.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n *\n * A Forge PEM object has the following fields:\n *\n * type: identifies the type of message (eg: \"RSA PRIVATE KEY\").\n *\n * procType: identifies the type of processing performed on the message,\n *   it has two subfields: version and type, eg: 4,ENCRYPTED.\n *\n * contentDomain: identifies the type of content in the message, typically\n *   only uses the value: \"RFC822\".\n *\n * dekInfo: identifies the message encryption algorithm and mode and includes\n *   any parameters for the algorithm, it has two subfields: algorithm and\n *   parameters, eg: DES-CBC,F8143EDE5960C597.\n *\n * headers: contains all other PEM encapsulated headers -- where order is\n *   significant (for pairing data like recipient ID + key info).\n *\n * body: the binary-encoded body.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// shortcut for pem API\nvar pem = forge.pem = forge.pem || {};\n\n/**\n * Encodes (serializes) the given PEM object.\n *\n * @param msg the PEM message object to encode.\n * @param options the options to use:\n *          maxline the maximum characters per line for the body, (default: 64).\n *\n * @return the PEM-formatted string.\n */\npem.encode = function(msg, options) {\n  options = options || {};\n  var rval = '-----BEGIN ' + msg.type + '-----\\r\\n';\n\n  // encode special headers\n  var header;\n  if(msg.procType) {\n    header = {\n      name: 'Proc-Type',\n      values: [String(msg.procType.version), msg.procType.type]\n    };\n    rval += foldHeader(header);\n  }\n  if(msg.contentDomain) {\n    header = {name: 'Content-Domain', values: [msg.contentDomain]};\n    rval += foldHeader(header);\n  }\n  if(msg.dekInfo) {\n    header = {name: 'DEK-Info', values: [msg.dekInfo.algorithm]};\n    if(msg.dekInfo.parameters) {\n      header.values.push(msg.dekInfo.parameters);\n    }\n    rval += foldHeader(header);\n  }\n\n  if(msg.headers) {\n    // encode all other headers\n    for(var i = 0; i < msg.headers.length; ++i) {\n      rval += foldHeader(msg.headers[i]);\n    }\n  }\n\n  // terminate header\n  if(msg.procType) {\n    rval += '\\r\\n';\n  }\n\n  // add body\n  rval += forge.util.encode64(msg.body, options.maxline || 64) + '\\r\\n';\n\n  rval += '-----END ' + msg.type + '-----\\r\\n';\n  return rval;\n};\n\n/**\n * Decodes (deserializes) all PEM messages found in the given string.\n *\n * @param str the PEM-formatted string to decode.\n *\n * @return the PEM message objects in an array.\n */\npem.decode = function(str) {\n  var rval = [];\n\n  // split string into PEM messages (be lenient w/EOF on BEGIN line)\n  var rMessage = /\\s*-----BEGIN ([A-Z0-9- ]+)-----\\r?\\n?([\\x21-\\x7e\\s]+?(?:\\r?\\n\\r?\\n))?([:A-Za-z0-9+\\/=\\s]+?)-----END \\1-----/g;\n  var rHeader = /([\\x21-\\x7e]+):\\s*([\\x21-\\x7e\\s^:]+)/;\n  var rCRLF = /\\r?\\n/;\n  var match;\n  while(true) {\n    match = rMessage.exec(str);\n    if(!match) {\n      break;\n    }\n\n    var msg = {\n      type: match[1],\n      procType: null,\n      contentDomain: null,\n      dekInfo: null,\n      headers: [],\n      body: forge.util.decode64(match[3])\n    };\n    rval.push(msg);\n\n    // no headers\n    if(!match[2]) {\n      continue;\n    }\n\n    // parse headers\n    var lines = match[2].split(rCRLF);\n    var li = 0;\n    while(match && li < lines.length) {\n      // get line, trim any rhs whitespace\n      var line = lines[li].replace(/\\s+$/, '');\n\n      // RFC2822 unfold any following folded lines\n      for(var nl = li + 1; nl < lines.length; ++nl) {\n        var next = lines[nl];\n        if(!/\\s/.test(next[0])) {\n          break;\n        }\n        line += next;\n        li = nl;\n      }\n\n      // parse header\n      match = line.match(rHeader);\n      if(match) {\n        var header = {name: match[1], values: []};\n        var values = match[2].split(',');\n        for(var vi = 0; vi < values.length; ++vi) {\n          header.values.push(ltrim(values[vi]));\n        }\n\n        // Proc-Type must be the first header\n        if(!msg.procType) {\n          if(header.name !== 'Proc-Type') {\n            throw new Error('Invalid PEM formatted message. The first ' +\n              'encapsulated header must be \"Proc-Type\".');\n          } else if(header.values.length !== 2) {\n            throw new Error('Invalid PEM formatted message. The \"Proc-Type\" ' +\n              'header must have two subfields.');\n          }\n          msg.procType = {version: values[0], type: values[1]};\n        } else if(!msg.contentDomain && header.name === 'Content-Domain') {\n          // special-case Content-Domain\n          msg.contentDomain = values[0] || '';\n        } else if(!msg.dekInfo && header.name === 'DEK-Info') {\n          // special-case DEK-Info\n          if(header.values.length === 0) {\n            throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n              'header must have at least one subfield.');\n          }\n          msg.dekInfo = {algorithm: values[0], parameters: values[1] || null};\n        } else {\n          msg.headers.push(header);\n        }\n      }\n\n      ++li;\n    }\n\n    if(msg.procType === 'ENCRYPTED' && !msg.dekInfo) {\n      throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n        'header must be present if \"Proc-Type\" is \"ENCRYPTED\".');\n    }\n  }\n\n  if(rval.length === 0) {\n    throw new Error('Invalid PEM formatted message.');\n  }\n\n  return rval;\n};\n\nfunction foldHeader(header) {\n  var rval = header.name + ': ';\n\n  // ensure values with CRLF are folded\n  var values = [];\n  var insertSpace = function(match, $1) {\n    return ' ' + $1;\n  };\n  for(var i = 0; i < header.values.length; ++i) {\n    values.push(header.values[i].replace(/^(\\S+\\r\\n)/, insertSpace));\n  }\n  rval += values.join(',') + '\\r\\n';\n\n  // do folding\n  var length = 0;\n  var candidate = -1;\n  for(var i = 0; i < rval.length; ++i, ++length) {\n    if(length > 65 && candidate !== -1) {\n      var insert = rval[candidate];\n      if(insert === ',') {\n        ++candidate;\n        rval = rval.substr(0, candidate) + '\\r\\n ' + rval.substr(candidate);\n      } else {\n        rval = rval.substr(0, candidate) +\n          '\\r\\n' + insert + rval.substr(candidate + 1);\n      }\n      length = (i - candidate - 1);\n      candidate = -1;\n      ++i;\n    } else if(rval[i] === ' ' || rval[i] === '\\t' || rval[i] === ',') {\n      candidate = i;\n    }\n  }\n\n  return rval;\n}\n\nfunction ltrim(str) {\n  return str.replace(/^\\s+/, '');\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'pem';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/pem',['require', 'module', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * DES (Data Encryption Standard) implementation.\n *\n * This implementation supports DES as well as 3DES-EDE in ECB and CBC mode.\n * It is based on the BSD-licensed implementation by Paul Tero:\n *\n * Paul Tero, July 2001\n * http://www.tero.co.uk/des/\n *\n * Optimised for performance with large blocks by Michael Hayworth, November 2001\n * http://www.netdealing.com\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n/* DES API */\nforge.des = forge.des || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new DES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the DES algorithm object.\n */\nforge.des.Algorithm = function(name, mode) {\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 8,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this DES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.des.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = forge.util.createBuffer(options.key);\n  if(this.name.indexOf('3DES') === 0) {\n    if(key.length() !== 24) {\n      throw new Error('Invalid Triple-DES key size: ' + key.length() * 8);\n    }\n  }\n\n  // do key expansion to 16 or 48 subkeys (single or triple DES)\n  this._keys = _createKeys(key);\n  this._init = true;\n};\n\n\n/** Register DES algorithms **/\n\nregisterAlgorithm('DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('DES-CTR', forge.cipher.modes.ctr);\n\nregisterAlgorithm('3DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('3DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('3DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('3DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('3DES-CTR', forge.cipher.modes.ctr);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.des.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n\n/** DES implementation **/\n\nvar spfunction1 = [0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004];\nvar spfunction2 = [-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000];\nvar spfunction3 = [0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200];\nvar spfunction4 = [0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080];\nvar spfunction5 = [0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100];\nvar spfunction6 = [0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010];\nvar spfunction7 = [0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002];\nvar spfunction8 = [0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000];\n\n/**\n * Create necessary sub keys.\n *\n * @param key the 64-bit or 192-bit key.\n *\n * @return the expanded keys.\n */\nfunction _createKeys(key) {\n  var pc2bytes0  = [0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204],\n      pc2bytes1  = [0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101],\n      pc2bytes2  = [0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808],\n      pc2bytes3  = [0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000],\n      pc2bytes4  = [0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010],\n      pc2bytes5  = [0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420],\n      pc2bytes6  = [0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002],\n      pc2bytes7  = [0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800],\n      pc2bytes8  = [0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002],\n      pc2bytes9  = [0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408],\n      pc2bytes10 = [0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020],\n      pc2bytes11 = [0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200],\n      pc2bytes12 = [0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010],\n      pc2bytes13 = [0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105];\n\n  // how many iterations (1 for des, 3 for triple des)\n  // changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  var iterations = key.length() > 8 ? 3 : 1;\n\n  // stores the return keys\n  var keys = [];\n\n  // now define the left shifts which need to be done\n  var shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n\n  var n = 0, tmp;\n  for(var j = 0; j < iterations; j ++) {\n    var left = key.getInt32();\n    var right = key.getInt32();\n\n    tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= tmp;\n    left ^= (tmp << 4);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= tmp;\n    left ^= (tmp << 2);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= tmp;\n    right ^= (tmp << 8);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    // right needs to be shifted and OR'd with last four bits of left\n    tmp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\n    // left needs to be put upside down\n    left = ((right << 24) | ((right << 8) & 0xff0000) |\n      ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0));\n    right = tmp;\n\n    // now go through and perform these shifts on the left and right keys\n    for(var i = 0; i < shifts.length; ++i) {\n      //shift the keys either one or two bits to the left\n      if(shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      // now apply PC-2, in such a way that E is easier when encrypting or\n      // decrypting this conversion will look like PC-2 except only the last 6\n      // bits of each byte are used rather than 48 consecutive bits and the\n      // order of lines will be according to how the S selection functions will\n      // be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      var lefttmp = (\n        pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] |\n        pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf] |\n        pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] |\n        pc2bytes6[(left >>> 4) & 0xf]);\n      var righttmp = (\n        pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] |\n        pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf] |\n        pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf]);\n      tmp = ((righttmp >>> 16) ^ lefttmp) & 0x0000ffff;\n      keys[n++] = lefttmp ^ tmp;\n      keys[n++] = righttmp ^ (tmp << 16);\n    }\n  }\n\n  return keys;\n}\n\n/**\n * Updates a single block (1 byte) using DES. The update will either\n * encrypt or decrypt the block.\n *\n * @param keys the expanded keys.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(keys, input, output, decrypt) {\n  // set up loops for single or triple DES\n  var iterations = keys.length === 32 ? 3 : 9;\n  var looping;\n  if(iterations === 3) {\n    looping = decrypt ? [30, -2, -2] : [0, 32, 2];\n  } else {\n    looping = (decrypt ?\n      [94, 62, -2, 32, 64, 2, 30, -2, -2] :\n      [0, 32, 2, 62, 30, -2, 64, 96, 2]);\n  }\n\n  var tmp;\n\n  var left = input[0];\n  var right = input[1];\n\n  // first each 64 bit chunk of the message must be permuted according to IP\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  // rotate left 1 bit\n  left = ((left << 1) | (left >>> 31));\n  right = ((right << 1) | (right >>> 31));\n\n  for(var j = 0; j < iterations; j += 3) {\n    var endloop = looping[j + 1];\n    var loopinc = looping[j + 2];\n\n    // now go through and perform the encryption or decryption\n    for(var i = looping[j]; i != endloop; i += loopinc) {\n      var right1 = right ^ keys[i];\n      var right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n\n      // passing these bytes through the S selection functions\n      tmp = left;\n      left = right;\n      right = tmp ^ (\n        spfunction2[(right1 >>> 24) & 0x3f] |\n        spfunction4[(right1 >>> 16) & 0x3f] |\n        spfunction6[(right1 >>>  8) & 0x3f] |\n        spfunction8[right1 & 0x3f] |\n        spfunction1[(right2 >>> 24) & 0x3f] |\n        spfunction3[(right2 >>> 16) & 0x3f] |\n        spfunction5[(right2 >>>  8) & 0x3f] |\n        spfunction7[right2 & 0x3f]);\n    }\n    // unreverse left and right\n    tmp = left;\n    left = right;\n    right = tmp;\n  }\n\n  // rotate right 1 bit\n  left = ((left >>> 1) | (left << 31));\n  right = ((right >>> 1) | (right << 31));\n\n  // now perform IP-1, which is IP in the opposite direction\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  output[0] = left;\n  output[1] = right;\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('DES-<mode>', key);\n * forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates a deprecated DES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param options the options to use.\n *          key the symmetric key to use (64 or 192 bits).\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'DES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'des';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine(\n  'js/des',['require', 'module', './cipher', './cipherModes', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar _nodejs = (\n  typeof process !== 'undefined' && process.versions && process.versions.node);\nvar crypto;\nif(_nodejs && !forge.disableNativeCode) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nforge.pbkdf2 = pkcs5.pbkdf2 = function(p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(_nodejs && !forge.disableNativeCode && crypto.pbkdf2 &&\n    (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    s = new Buffer(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = forge.md.sha1.create();\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'pbkdf2';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/pbkdf2',['require', 'module', './hmac', './md', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * A javascript implementation of a cryptographically-secure\n * Pseudo Random Number Generator (PRNG). The Fortuna algorithm is followed\n * here though the use of SHA-256 is not enforced; when generating an\n * a PRNG context, the hashing algorithm and block cipher used for\n * the generator are specified via a plugin.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nvar _nodejs = (\n  typeof process !== 'undefined' && process.versions && process.versions.node);\nvar _crypto = null;\nif(!forge.disableNativeCode && _nodejs && !process.versions['node-webkit']) {\n  _crypto = require('crypto');\n}\n\n/* PRNG API */\nvar prng = forge.prng = forge.prng || {};\n\n/**\n * Creates a new PRNG context.\n *\n * A PRNG plugin must be passed in that will provide:\n *\n * 1. A function that initializes the key and seed of a PRNG context. It\n *   will be given a 16 byte key and a 16 byte seed. Any key expansion\n *   or transformation of the seed from a byte string into an array of\n *   integers (or similar) should be performed.\n * 2. The cryptographic function used by the generator. It takes a key and\n *   a seed.\n * 3. A seed increment function. It takes the seed and returns seed + 1.\n * 4. An api to create a message digest.\n *\n * For an example, see random.js.\n *\n * @param plugin the PRNG plugin to use.\n */\nprng.create = function(plugin) {\n  var ctx = {\n    plugin: plugin,\n    key: null,\n    seed: null,\n    time: null,\n    // number of reseeds so far\n    reseeds: 0,\n    // amount of data generated so far\n    generated: 0\n  };\n\n  // create 32 entropy pools (each is a message digest)\n  var md = plugin.md;\n  var pools = new Array(32);\n  for(var i = 0; i < 32; ++i) {\n    pools[i] = md.create();\n  }\n  ctx.pools = pools;\n\n  // entropy pools are written to cyclically, starting at index 0\n  ctx.pool = 0;\n\n  /**\n   * Generates random bytes. The bytes may be generated synchronously or\n   * asynchronously. Web workers must use the asynchronous interface or\n   * else the behavior is undefined.\n   *\n   * @param count the number of random bytes to generate.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generate = function(count, callback) {\n    // do synchronously\n    if(!callback) {\n      return ctx.generateSync(count);\n    }\n\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n    var b = forge.util.createBuffer();\n\n    // reset key for every request\n    ctx.key = null;\n\n    generate();\n\n    function generate(err) {\n      if(err) {\n        return callback(err);\n      }\n\n      // sufficient bytes generated\n      if(b.length() >= count) {\n        return callback(null, b.getBytes(count));\n      }\n\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        // prevent stack overflow\n        return forge.util.nextTick(function() {\n          _reseed(generate);\n        });\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n\n      forge.util.setImmediate(generate);\n    }\n  };\n\n  /**\n   * Generates random bytes synchronously.\n   *\n   * @param count the number of random bytes to generate.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generateSync = function(count) {\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n\n    // reset key for every request\n    ctx.key = null;\n\n    var b = forge.util.createBuffer();\n    while(b.length() < count) {\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        _reseedSync();\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n    }\n\n    return b.getBytes(count);\n  };\n\n  /**\n   * Private function that asynchronously reseeds a generator.\n   *\n   * @param callback(err) called once the operation completes.\n   */\n  function _reseed(callback) {\n    if(ctx.pools[0].messageLength >= 32) {\n      _seed();\n      return callback();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.seedFile(needed, function(err, bytes) {\n      if(err) {\n        return callback(err);\n      }\n      ctx.collect(bytes);\n      _seed();\n      callback();\n    });\n  }\n\n  /**\n   * Private function that synchronously reseeds a generator.\n   */\n  function _reseedSync() {\n    if(ctx.pools[0].messageLength >= 32) {\n      return _seed();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.collect(ctx.seedFileSync(needed));\n    _seed();\n  }\n\n  /**\n   * Private function that seeds a generator once enough bytes are available.\n   */\n  function _seed() {\n    // create a plugin-based message digest\n    var md = ctx.plugin.md.create();\n\n    // digest pool 0's entropy and restart it\n    md.update(ctx.pools[0].digest().getBytes());\n    ctx.pools[0].start();\n\n    // digest the entropy of other pools whose index k meet the\n    // condition '2^k mod n == 0' where n is the number of reseeds\n    var k = 1;\n    for(var i = 1; i < 32; ++i) {\n      // prevent signed numbers from being used\n      k = (k === 31) ? 0x80000000 : (k << 2);\n      if(k % ctx.reseeds === 0) {\n        md.update(ctx.pools[i].digest().getBytes());\n        ctx.pools[i].start();\n      }\n    }\n\n    // get digest for key bytes and iterate again for seed bytes\n    var keyBytes = md.digest().getBytes();\n    md.start();\n    md.update(keyBytes);\n    var seedBytes = md.digest().getBytes();\n\n    // update\n    ctx.key = ctx.plugin.formatKey(keyBytes);\n    ctx.seed = ctx.plugin.formatSeed(seedBytes);\n    ctx.reseeds = (ctx.reseeds === 0xffffffff) ? 0 : ctx.reseeds + 1;\n    ctx.generated = 0;\n  }\n\n  /**\n   * The built-in default seedFile. This seedFile is used when entropy\n   * is needed immediately.\n   *\n   * @param needed the number of bytes that are needed.\n   *\n   * @return the random bytes.\n   */\n  function defaultSeedFile(needed) {\n    // use window.crypto.getRandomValues strong source of entropy if available\n    var getRandomValues = null;\n    if(typeof window !== 'undefined') {\n      var _crypto = window.crypto || window.msCrypto;\n      if(_crypto && _crypto.getRandomValues) {\n        getRandomValues = function(arr) {\n          return _crypto.getRandomValues(arr);\n        };\n      }\n    }\n\n    var b = forge.util.createBuffer();\n    if(getRandomValues) {\n      while(b.length() < needed) {\n        // max byte length is 65536 before QuotaExceededError is thrown\n        // http://www.w3.org/TR/WebCryptoAPI/#RandomSource-method-getRandomValues\n        var count = Math.max(1, Math.min(needed - b.length(), 65536) / 4);\n        var entropy = new Uint32Array(Math.floor(count));\n        try {\n          getRandomValues(entropy);\n          for(var i = 0; i < entropy.length; ++i) {\n            b.putInt32(entropy[i]);\n          }\n        } catch(e) {\n          /* only ignore QuotaExceededError */\n          if(!(typeof QuotaExceededError !== 'undefined' &&\n            e instanceof QuotaExceededError)) {\n            throw e;\n          }\n        }\n      }\n    }\n\n    // be sad and add some weak random data\n    if(b.length() < needed) {\n      /* Draws from Park-Miller \"minimal standard\" 31 bit PRNG,\n      implemented with David G. Carta's optimization: with 32 bit math\n      and without division (Public Domain). */\n      var hi, lo, next;\n      var seed = Math.floor(Math.random() * 0x010000);\n      while(b.length() < needed) {\n        lo = 16807 * (seed & 0xFFFF);\n        hi = 16807 * (seed >> 16);\n        lo += (hi & 0x7FFF) << 16;\n        lo += hi >> 15;\n        lo = (lo & 0x7FFFFFFF) + (lo >> 31);\n        seed = lo & 0xFFFFFFFF;\n\n        // consume lower 3 bytes of seed\n        for(var i = 0; i < 3; ++i) {\n          // throw in more pseudo random\n          next = seed >>> (i << 3);\n          next ^= Math.floor(Math.random() * 0x0100);\n          b.putByte(String.fromCharCode(next & 0xFF));\n        }\n      }\n    }\n\n    return b.getBytes(needed);\n  }\n  // initialize seed file APIs\n  if(_crypto) {\n    // use nodejs async API\n    ctx.seedFile = function(needed, callback) {\n      _crypto.randomBytes(needed, function(err, bytes) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, bytes.toString());\n      });\n    };\n    // use nodejs sync API\n    ctx.seedFileSync = function(needed) {\n      return _crypto.randomBytes(needed).toString();\n    };\n  } else {\n    ctx.seedFile = function(needed, callback) {\n      try {\n        callback(null, defaultSeedFile(needed));\n      } catch(e) {\n        callback(e);\n      }\n    };\n    ctx.seedFileSync = defaultSeedFile;\n  }\n\n  /**\n   * Adds entropy to a prng ctx's accumulator.\n   *\n   * @param bytes the bytes of entropy as a string.\n   */\n  ctx.collect = function(bytes) {\n    // iterate over pools distributing entropy cyclically\n    var count = bytes.length;\n    for(var i = 0; i < count; ++i) {\n      ctx.pools[ctx.pool].update(bytes.substr(i, 1));\n      ctx.pool = (ctx.pool === 31) ? 0 : ctx.pool + 1;\n    }\n  };\n\n  /**\n   * Collects an integer of n bits.\n   *\n   * @param i the integer entropy.\n   * @param n the number of bits in the integer.\n   */\n  ctx.collectInt = function(i, n) {\n    var bytes = '';\n    for(var x = 0; x < n; x += 8) {\n      bytes += String.fromCharCode((i >> x) & 0xFF);\n    }\n    ctx.collect(bytes);\n  };\n\n  /**\n   * Registers a Web Worker to receive immediate entropy from the main thread.\n   * This method is required until Web Workers can access the native crypto\n   * API. This method should be called twice for each created worker, once in\n   * the main thread, and once in the worker itself.\n   *\n   * @param worker the worker to register.\n   */\n  ctx.registerWorker = function(worker) {\n    // worker receives random bytes\n    if(worker === self) {\n      ctx.seedFile = function(needed, callback) {\n        function listener(e) {\n          var data = e.data;\n          if(data.forge && data.forge.prng) {\n            self.removeEventListener('message', listener);\n            callback(data.forge.prng.err, data.forge.prng.bytes);\n          }\n        }\n        self.addEventListener('message', listener);\n        self.postMessage({forge: {prng: {needed: needed}}});\n      };\n    } else {\n      // main thread sends random bytes upon request\n      var listener = function(e) {\n        var data = e.data;\n        if(data.forge && data.forge.prng) {\n          ctx.seedFile(data.forge.prng.needed, function(err, bytes) {\n            worker.postMessage({forge: {prng: {err: err, bytes: bytes}}});\n          });\n        }\n      };\n      // TODO: do we need to remove the event listener when the worker dies?\n      worker.addEventListener('message', listener);\n    }\n  };\n\n  return ctx;\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'prng';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/prng',['require', 'module', './md', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n\n})();\n\n/**\n * An API for getting cryptographically-secure random bytes. The bytes are\n * generated using the Fortuna algorithm devised by Bruce Schneier and\n * Niels Ferguson.\n *\n * Getting strong random bytes is not yet easy to do in javascript. The only\n * truish random entropy that can be collected is from the mouse, keyboard, or\n * from timing with respect to page loads, etc. This generator makes a poor\n * attempt at providing random bytes when those sources haven't yet provided\n * enough entropy to initially seed or to reseed the PRNG.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// forge.random already defined\nif(forge.random && forge.random.getBytes) {\n  return;\n}\n\n(function(jQuery) {\n\n// the default prng plugin, uses AES-128\nvar prng_aes = {};\nvar _prng_aes_output = new Array(4);\nvar _prng_aes_buffer = forge.util.createBuffer();\nprng_aes.formatKey = function(key) {\n  // convert the key into 32-bit integers\n  var tmp = forge.util.createBuffer(key);\n  key = new Array(4);\n  key[0] = tmp.getInt32();\n  key[1] = tmp.getInt32();\n  key[2] = tmp.getInt32();\n  key[3] = tmp.getInt32();\n\n  // return the expanded key\n  return forge.aes._expandKey(key, false);\n};\nprng_aes.formatSeed = function(seed) {\n  // convert seed into 32-bit integers\n  var tmp = forge.util.createBuffer(seed);\n  seed = new Array(4);\n  seed[0] = tmp.getInt32();\n  seed[1] = tmp.getInt32();\n  seed[2] = tmp.getInt32();\n  seed[3] = tmp.getInt32();\n  return seed;\n};\nprng_aes.cipher = function(key, seed) {\n  forge.aes._updateBlock(key, seed, _prng_aes_output, false);\n  _prng_aes_buffer.putInt32(_prng_aes_output[0]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[1]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[2]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[3]);\n  return _prng_aes_buffer.getBytes();\n};\nprng_aes.increment = function(seed) {\n  // FIXME: do we care about carry or signed issues?\n  ++seed[3];\n  return seed;\n};\nprng_aes.md = forge.md.sha256;\n\n/**\n * Creates a new PRNG.\n */\nfunction spawnPrng() {\n  var ctx = forge.prng.create(prng_aes);\n\n  /**\n   * Gets random bytes. If a native secure crypto API is unavailable, this\n   * method tries to make the bytes more unpredictable by drawing from data that\n   * can be collected from the user of the browser, eg: mouse movement.\n   *\n   * If a callback is given, this method will be called asynchronously.\n   *\n   * @param count the number of random bytes to get.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytes = function(count, callback) {\n    return ctx.generate(count, callback);\n  };\n\n  /**\n   * Gets random bytes asynchronously. If a native secure crypto API is\n   * unavailable, this method tries to make the bytes more unpredictable by\n   * drawing from data that can be collected from the user of the browser,\n   * eg: mouse movement.\n   *\n   * @param count the number of random bytes to get.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytesSync = function(count) {\n    return ctx.generate(count);\n  };\n\n  return ctx;\n}\n\n// create default prng context\nvar _ctx = spawnPrng();\n\n// add other sources of entropy only if window.crypto.getRandomValues is not\n// available -- otherwise this source will be automatically used by the prng\nvar _nodejs = (\n  typeof process !== 'undefined' && process.versions && process.versions.node);\nvar getRandomValues = null;\nif(typeof window !== 'undefined') {\n  var _crypto = window.crypto || window.msCrypto;\n  if(_crypto && _crypto.getRandomValues) {\n    getRandomValues = function(arr) {\n      return _crypto.getRandomValues(arr);\n    };\n  }\n}\nif(forge.disableNativeCode || (!_nodejs && !getRandomValues)) {\n  // if this is a web worker, do not use weak entropy, instead register to\n  // receive strong entropy asynchronously from the main thread\n  if(typeof window === 'undefined' || window.document === undefined) {\n    // FIXME:\n  }\n\n  // get load time entropy\n  _ctx.collectInt(+new Date(), 32);\n\n  // add some entropy from navigator object\n  if(typeof(navigator) !== 'undefined') {\n    var _navBytes = '';\n    for(var key in navigator) {\n      try {\n        if(typeof(navigator[key]) == 'string') {\n          _navBytes += navigator[key];\n        }\n      } catch(e) {\n        /* Some navigator keys might not be accessible, e.g. the geolocation\n          attribute throws an exception if touched in Mozilla chrome://\n          context.\n\n          Silently ignore this and just don't use this as a source of\n          entropy. */\n      }\n    }\n    _ctx.collect(_navBytes);\n    _navBytes = null;\n  }\n\n  // add mouse and keyboard collectors if jquery is available\n  if(jQuery) {\n    // set up mouse entropy capture\n    jQuery().mousemove(function(e) {\n      // add mouse coords\n      _ctx.collectInt(e.clientX, 16);\n      _ctx.collectInt(e.clientY, 16);\n    });\n\n    // set up keyboard entropy capture\n    jQuery().keypress(function(e) {\n      _ctx.collectInt(e.charCode, 8);\n    });\n  }\n}\n\n/* Random API */\nif(!forge.random) {\n  forge.random = _ctx;\n} else {\n  // extend forge.random with _ctx\n  for(var key in _ctx) {\n    forge.random[key] = _ctx[key];\n  }\n}\n\n// expose spawn PRNG\nforge.random.createInstance = spawnPrng;\n\n})(typeof(jQuery) !== 'undefined' ? jQuery : null);\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'random';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/random',['require', 'module', './aes', './md', './prng', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * RC2 implementation.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * Information on the RC2 cipher is available from RFC #2268,\n * http://www.ietf.org/rfc/rfc2268.txt\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nvar piTable = [\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n];\n\nvar s = [1, 2, 3, 5];\n\n\n/**\n * Rotate a word left by given number of bits.\n *\n * Bits that are shifted out on the left are put back in on the right\n * hand side.\n *\n * @param word The word to shift left.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar rol = function(word, bits) {\n  return ((word << bits) & 0xffff) | ((word & 0xffff) >> (16 - bits));\n};\n\n/**\n * Rotate a word right by given number of bits.\n *\n * Bits that are shifted out on the right are put back in on the left\n * hand side.\n *\n * @param word The word to shift right.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar ror = function(word, bits) {\n  return ((word & 0xffff) >> bits) | ((word << (16 - bits)) & 0xffff);\n};\n\n\n/* RC2 API */\nforge.rc2 = forge.rc2 || {};\n\n/**\n * Perform RC2 key expansion as per RFC #2268, section 2.\n *\n * @param key variable-length user key (between 1 and 128 bytes)\n * @param effKeyBits number of effective key bits (default: 128)\n * @return the expanded RC2 key (ByteBuffer of 128 bytes)\n */\nforge.rc2.expandKey = function(key, effKeyBits) {\n  if(typeof key === 'string') {\n    key = forge.util.createBuffer(key);\n  }\n  effKeyBits = effKeyBits || 128;\n\n  /* introduce variables that match the names used in RFC #2268 */\n  var L = key;\n  var T = key.length();\n  var T1 = effKeyBits;\n  var T8 = Math.ceil(T1 / 8);\n  var TM = 0xff >> (T1 & 0x07);\n  var i;\n\n  for(i = T; i < 128; i ++) {\n    L.putByte(piTable[(L.at(i - 1) + L.at(i - T)) & 0xff]);\n  }\n\n  L.setAt(128 - T8, piTable[L.at(128 - T8) & TM]);\n\n  for(i = 127 - T8; i >= 0; i --) {\n    L.setAt(i, piTable[L.at(i + 1) ^ L.at(i + T8)]);\n  }\n\n  return L;\n};\n\n\n/**\n * Creates a RC2 cipher object.\n *\n * @param key the symmetric key to use (as base for key generation).\n * @param bits the number of effective key bits.\n * @param encrypt false for decryption, true for encryption.\n *\n * @return the cipher.\n */\nvar createCipher = function(key, bits, encrypt) {\n  var _finish = false, _input = null, _output = null, _iv = null;\n  var mixRound, mashRound;\n  var i, j, K = [];\n\n  /* Expand key and fill into K[] Array */\n  key = forge.rc2.expandKey(key, bits);\n  for(i = 0; i < 64; i ++) {\n    K.push(key.getInt16Le());\n  }\n\n  if(encrypt) {\n    /**\n     * Perform one mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        R[i] = rol(R[i], s[i]);\n        j ++;\n      }\n    };\n\n    /**\n     * Perform one mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 0; i < 4; i ++) {\n        R[i] += K[R[(i + 3) % 4] & 63];\n      }\n    };\n  } else {\n    /**\n     * Perform one r-mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] = ror(R[i], s[i]);\n        R[i] -= K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        j --;\n      }\n    };\n\n    /**\n     * Perform one r-mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] -= K[R[(i + 3) % 4] & 63];\n      }\n    };\n  }\n\n  /**\n   * Run the specified cipher execution plan.\n   *\n   * This function takes four words from the input buffer, applies the IV on\n   * it (if requested) and runs the provided execution plan.\n   *\n   * The plan must be put together in form of a array of arrays.  Where the\n   * outer one is simply a list of steps to perform and the inner one needs\n   * to have two elements: the first one telling how many rounds to perform,\n   * the second one telling what to do (i.e. the function to call).\n   *\n   * @param {Array} plan The plan to execute.\n   */\n  var runPlan = function(plan) {\n    var R = [];\n\n    /* Get data from input buffer and fill the four words into R */\n    for(i = 0; i < 4; i ++) {\n      var val = _input.getInt16Le();\n\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting, apply the IV first. */\n          val ^= _iv.getInt16Le();\n        } else {\n          /* We're decryption, keep cipher text for next block. */\n          _iv.putInt16Le(val);\n        }\n      }\n\n      R.push(val & 0xffff);\n    }\n\n    /* Reset global \"j\" variable as per spec. */\n    j = encrypt ? 0 : 63;\n\n    /* Run execution plan. */\n    for(var ptr = 0; ptr < plan.length; ptr ++) {\n      for(var ctr = 0; ctr < plan[ptr][0]; ctr ++) {\n        plan[ptr][1](R);\n      }\n    }\n\n    /* Write back result to output buffer. */\n    for(i = 0; i < 4; i ++) {\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting in CBC-mode, feed back encrypted bytes into\n             IV buffer to carry it forward to next block. */\n          _iv.putInt16Le(R[i]);\n        } else {\n          R[i] ^= _iv.getInt16Le();\n        }\n      }\n\n      _output.putInt16Le(R[i]);\n    }\n  };\n\n\n  /* Create cipher object */\n  var cipher = null;\n  cipher = {\n    /**\n     * Starts or restarts the encryption or decryption process, whichever\n     * was previously configured.\n     *\n     * To use the cipher in CBC mode, iv may be given either as a string\n     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.\n     *\n     * @param iv the initialization vector to use, null for ECB mode.\n     * @param output the output the buffer to write to, null to create one.\n     */\n    start: function(iv, output) {\n      if(iv) {\n        /* CBC mode */\n        if(typeof iv === 'string') {\n          iv = forge.util.createBuffer(iv);\n        }\n      }\n\n      _finish = false;\n      _input = forge.util.createBuffer();\n      _output = output || new forge.util.createBuffer();\n      _iv = iv;\n\n      cipher.output = _output;\n    },\n\n    /**\n     * Updates the next block.\n     *\n     * @param input the buffer to read from.\n     */\n    update: function(input) {\n      if(!_finish) {\n        // not finishing, so fill the input buffer with more input\n        _input.putBuffer(input);\n      }\n\n      while(_input.length() >= 8) {\n        runPlan([\n            [ 5, mixRound ],\n            [ 1, mashRound ],\n            [ 6, mixRound ],\n            [ 1, mashRound ],\n            [ 5, mixRound ]\n          ]);\n      }\n    },\n\n    /**\n     * Finishes encrypting or decrypting.\n     *\n     * @param pad a padding function to use, null for PKCS#7 padding,\n     *           signature(blockSize, buffer, decrypt).\n     *\n     * @return true if successful, false on error.\n     */\n    finish: function(pad) {\n      var rval = true;\n\n      if(encrypt) {\n        if(pad) {\n          rval = pad(8, _input, !encrypt);\n        } else {\n          // add PKCS#7 padding to block (each pad byte is the\n          // value of the number of pad bytes)\n          var padding = (_input.length() === 8) ? 8 : (8 - _input.length());\n          _input.fillWithByte(padding, padding);\n        }\n      }\n\n      if(rval) {\n        // do final update\n        _finish = true;\n        cipher.update();\n      }\n\n      if(!encrypt) {\n        // check for error: input data not a multiple of block size\n        rval = (_input.length() === 0);\n        if(rval) {\n          if(pad) {\n            rval = pad(8, _output, !encrypt);\n          } else {\n            // ensure padding byte count is valid\n            var len = _output.length();\n            var count = _output.at(len - 1);\n\n            if(count > len) {\n              rval = false;\n            } else {\n              // trim off padding bytes\n              _output.truncate(count);\n            }\n          }\n        }\n      }\n\n      return rval;\n    }\n  };\n\n  return cipher;\n};\n\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startEncrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createEncryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start encrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createEncryptionCipher = function(key, bits) {\n  return createCipher(key, bits, true);\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startDecrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createDecryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start decrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createDecryptionCipher = function(key, bits) {\n  return createCipher(key, bits, false);\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'rc2';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/rc2',['require', 'module', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\n\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n\nforge.jsbn = forge.jsbn || {};\nforge.jsbn.BigInteger = BigInteger;\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'jsbn';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/jsbn',['require', 'module'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Partial implementation of PKCS#1 v2.2: RSA-OEAP\n *\n * Modified but based on the following MIT and BSD licensed code:\n *\n * https://github.com/kjur/jsjws/blob/master/rsa.js:\n *\n * The 'jsjws'(JSON Web Signature JavaScript Library) License\n *\n * Copyright (c) 2012 Kenji Urushima\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * http://webrsa.cvs.sourceforge.net/viewvc/webrsa/Client/RSAES-OAEP.js?content-type=text%2Fplain:\n *\n * RSAES-OAEP.js\n * $Id: RSAES-OAEP.js,v 1.1.1.1 2003/03/19 15:37:20 ellispritchard Exp $\n * JavaScript Implementation of PKCS #1 v2.1 RSA CRYPTOGRAPHY STANDARD (RSA Laboratories, June 14, 2002)\n * Copyright (C) Ellis Pritchard, Guardian Unlimited 2003.\n * Contact: ellis@nukinetics.com\n * Distributed under the BSD License.\n *\n * Official documentation: http://www.rsa.com/rsalabs/node.asp?id=2125\n *\n * @author Evan Jones (http://evanjones.ca/)\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// shortcut for PKCS#1 API\nvar pkcs1 = forge.pkcs1 = forge.pkcs1 || {};\n\n/**\n * Encode the given RSAES-OAEP message (M) using key, with optional label (L)\n * and seed.\n *\n * This method does not perform RSA encryption, it only encodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param message the message to encode.\n * @param options the options to use:\n *          label an optional label to use.\n *          seed the seed to use.\n *          md the message digest object to use, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the encoded message bytes.\n */\npkcs1.encode_rsa_oaep = function(key, message, options) {\n  // parse arguments\n  var label;\n  var seed;\n  var md;\n  var mgf1Md;\n  // legacy args (label, seed, md)\n  if(typeof options === 'string') {\n    label = options;\n    seed = arguments[3] || undefined;\n    md = arguments[4] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    seed = options.seed || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(!md) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  // compute length in bytes and check output\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n  var maxLength = keyLength - 2 * md.digestLength - 2;\n  if(message.length > maxLength) {\n    var error = new Error('RSAES-OAEP input message length is too long.');\n    error.length = message.length;\n    error.maxLength = maxLength;\n    throw error;\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest();\n\n  var PS = '';\n  var PS_length = maxLength - message.length;\n  for (var i = 0; i < PS_length; i++) {\n    PS += '\\x00';\n  }\n\n  var DB = lHash.getBytes() + PS + '\\x01' + message;\n\n  if(!seed) {\n    seed = forge.random.getBytes(md.digestLength);\n  } else if(seed.length !== md.digestLength) {\n    var error = new Error('Invalid RSAES-OAEP seed. The seed length must ' +\n      'match the digest length.')\n    error.seedLength = seed.length;\n    error.digestLength = md.digestLength;\n    throw error;\n  }\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var maskedDB = forge.util.xorBytes(DB, dbMask, DB.length);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var maskedSeed = forge.util.xorBytes(seed, seedMask, seed.length);\n\n  // return encoded message\n  return '\\x00' + maskedSeed + maskedDB;\n};\n\n/**\n * Decode the given RSAES-OAEP encoded message (EM) using key, with optional\n * label (L).\n *\n * This method does not perform RSA decryption, it only decodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param em the encoded message to decode.\n * @param options the options to use:\n *          label an optional label to use.\n *          md the message digest object to use for OAEP, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the decoded message bytes.\n */\npkcs1.decode_rsa_oaep = function(key, em, options) {\n  // parse args\n  var label;\n  var md;\n  var mgf1Md;\n  // legacy args\n  if(typeof options === 'string') {\n    label = options;\n    md = arguments[3] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // compute length in bytes\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n\n  if(em.length !== keyLength) {\n    var error = new Error('RSAES-OAEP encoded message length is invalid.');\n    error.length = em.length;\n    error.expectedLength = keyLength;\n    throw error;\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(md === undefined) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  if(keyLength < 2 * md.digestLength + 2) {\n    throw new Error('RSAES-OAEP key is too short for the hash function.');\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest().getBytes();\n\n  // split the message into its parts\n  var y = em.charAt(0);\n  var maskedSeed = em.substring(1, md.digestLength + 1);\n  var maskedDB = em.substring(1 + md.digestLength);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var seed = forge.util.xorBytes(maskedSeed, seedMask, maskedSeed.length);\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var db = forge.util.xorBytes(maskedDB, dbMask, maskedDB.length);\n\n  var lHashPrime = db.substring(0, md.digestLength);\n\n  // constant time check that all values match what is expected\n  var error = (y !== '\\x00');\n\n  // constant time check lHash vs lHashPrime\n  for(var i = 0; i < md.digestLength; ++i) {\n    error |= (lHash.charAt(i) !== lHashPrime.charAt(i));\n  }\n\n  // \"constant time\" find the 0x1 byte separating the padding (zeros) from the\n  // message\n  // TODO: It must be possible to do this in a better/smarter way?\n  var in_ps = 1;\n  var index = md.digestLength;\n  for(var j = md.digestLength; j < db.length; j++) {\n    var code = db.charCodeAt(j);\n\n    var is_0 = (code & 0x1) ^ 0x1;\n\n    // non-zero if not 0 or 1 in the ps section\n    var error_mask = in_ps ? 0xfffe : 0x0000;\n    error |= (code & error_mask);\n\n    // latch in_ps to zero after we find 0x1\n    in_ps = in_ps & is_0;\n    index += in_ps;\n  }\n\n  if(error || db.charCodeAt(index) !== 0x1) {\n    throw new Error('Invalid RSAES-OAEP padding.');\n  }\n\n  return db.substring(index + 1);\n};\n\nfunction rsa_mgf1(seed, maskLength, hash) {\n  // default to SHA-1 message digest\n  if(!hash) {\n    hash = forge.md.sha1.create();\n  }\n  var t = '';\n  var count = Math.ceil(maskLength / hash.digestLength);\n  for(var i = 0; i < count; ++i) {\n    var c = String.fromCharCode(\n      (i >> 24) & 0xFF, (i >> 16) & 0xFF, (i >> 8) & 0xFF, i & 0xFF);\n    hash.start();\n    hash.update(seed + c);\n    t += hash.digest().getBytes();\n  }\n  return t.substring(0, maskLength);\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'pkcs1';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/pkcs1',['require', 'module', './util', './random', './sha1'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// forge.prime already defined\nif(forge.prime) {\n  return;\n}\n\n/* PRIME API */\nvar prime = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying (setImmediate would be better here)\n  forge.util.setImmediate(function() {\n    primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  });\n}\n\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'prime';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/prime',['require', 'module', './util', './jsbn', './random'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n\n})();\n\n/**\n * Javascript implementation of basic RSA algorithms.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The only algorithm currently supported for PKI is RSA.\n *\n * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo\n * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier\n * and a subjectPublicKey of type bit string.\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of RSA, there aren't any.\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm AlgorithmIdentifier,\n *   subjectPublicKey BIT STRING\n * }\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * For an RSA public key, the subjectPublicKey is:\n *\n * RSAPublicKey ::= SEQUENCE {\n *   modulus            INTEGER,    -- n\n *   publicExponent     INTEGER     -- e\n * }\n *\n * PrivateKeyInfo ::= SEQUENCE {\n *   version                   Version,\n *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n *   privateKey                PrivateKey,\n *   attributes           [0]  IMPLICIT Attributes OPTIONAL\n * }\n *\n * Version ::= INTEGER\n * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n * PrivateKey ::= OCTET STRING\n * Attributes ::= SET OF Attribute\n *\n * An RSA private key as the following structure:\n *\n * RSAPrivateKey ::= SEQUENCE {\n *   version Version,\n *   modulus INTEGER, -- n\n *   publicExponent INTEGER, -- e\n *   privateExponent INTEGER, -- d\n *   prime1 INTEGER, -- p\n *   prime2 INTEGER, -- q\n *   exponent1 INTEGER, -- d mod (p-1)\n *   exponent2 INTEGER, -- d mod (q-1)\n *   coefficient INTEGER -- (inverse of q) mod p\n * }\n *\n * Version ::= INTEGER\n *\n * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1\n */\n(function() {\nfunction initModule(forge) {\n/* ########## Begin module implementation ########## */\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/*\n * RSA encryption and decryption, see RFC 2313.\n */\nforge.pki = forge.pki || {};\nforge.pki.rsa = forge.rsa = forge.rsa || {};\nvar pki = forge.pki;\n\n// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\n\n// validator for a PrivateKeyInfo structure\nvar privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\n// validator for an RSA private key\nvar rsaPrivateKeyValidator = {\n  // RSAPrivateKey\n  name: 'RSAPrivateKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'RSAPrivateKey.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // modulus (n)\n    name: 'RSAPrivateKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPrivateKey.publicExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPublicExponent'\n  }, {\n    // privateExponent (d)\n    name: 'RSAPrivateKey.privateExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrivateExponent'\n  }, {\n    // prime1 (p)\n    name: 'RSAPrivateKey.prime1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime1'\n  }, {\n    // prime2 (q)\n    name: 'RSAPrivateKey.prime2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime2'\n  }, {\n    // exponent1 (d mod (p-1))\n    name: 'RSAPrivateKey.exponent1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent1'\n  }, {\n    // exponent2 (d mod (q-1))\n    name: 'RSAPrivateKey.exponent2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent2'\n  }, {\n    // coefficient ((inverse of q) mod p)\n    name: 'RSAPrivateKey.coefficient',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyCoefficient'\n  }]\n};\n\n// validator for an RSA public key\nvar rsaPublicKeyValidator = {\n  // RSAPublicKey\n  name: 'RSAPublicKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // modulus (n)\n    name: 'RSAPublicKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPublicKey.exponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyExponent'\n  }]\n};\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  }]\n};\n\n/**\n * Wrap digest in DigestInfo object.\n *\n * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n * Digest ::= OCTET STRING\n *\n * @param md the message digest object with the hash to sign.\n *\n * @return the encoded message (ready for RSA encrytion)\n */\nvar emsaPkcs1v15encode = function(md) {\n  // get the oid for the algorithm\n  var oid;\n  if(md.algorithm in pki.oids) {\n    oid = pki.oids[md.algorithm];\n  } else {\n    var error = new Error('Unknown message digest algorithm.');\n    error.algorithm = md.algorithm;\n    throw error;\n  }\n  var oidBytes = asn1.oidToDer(oid).getBytes();\n\n  // create the digest info\n  var digestInfo = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  var digestAlgorithm = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));\n  var digest = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n    false, md.digest().getBytes());\n  digestInfo.value.push(digestAlgorithm);\n  digestInfo.value.push(digest);\n\n  // encode digest info\n  return asn1.toDer(digestInfo).getBytes();\n};\n\n/**\n * Performs x^c mod n (RSA encryption or decryption operation).\n *\n * @param x the number to raise and mod.\n * @param key the key to use.\n * @param pub true if the key is public, false if private.\n *\n * @return the result of x^c mod n.\n */\nvar _modPow = function(x, key, pub) {\n  if(pub) {\n    return x.modPow(key.e, key.n);\n  }\n\n  if(!key.p || !key.q) {\n    // allow calculation without CRT params (slow)\n    return x.modPow(key.d, key.n);\n  }\n\n  // pre-compute dP, dQ, and qInv if necessary\n  if(!key.dP) {\n    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));\n  }\n  if(!key.dQ) {\n    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));\n  }\n  if(!key.qInv) {\n    key.qInv = key.q.modInverse(key.p);\n  }\n\n  /* Chinese remainder theorem (CRT) states:\n\n    Suppose n1, n2, ..., nk are positive integers which are pairwise\n    coprime (n1 and n2 have no common factors other than 1). For any\n    integers x1, x2, ..., xk there exists an integer x solving the\n    system of simultaneous congruences (where ~= means modularly\n    congruent so a ~= b mod n means a mod n = b mod n):\n\n    x ~= x1 mod n1\n    x ~= x2 mod n2\n    ...\n    x ~= xk mod nk\n\n    This system of congruences has a single simultaneous solution x\n    between 0 and n - 1. Furthermore, each xk solution and x itself\n    is congruent modulo the product n = n1*n2*...*nk.\n    So x1 mod n = x2 mod n = xk mod n = x mod n.\n\n    The single simultaneous solution x can be solved with the following\n    equation:\n\n    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.\n\n    Where x is less than n, xi = x mod ni.\n\n    For RSA we are only concerned with k = 2. The modulus n = pq, where\n    p and q are coprime. The RSA decryption algorithm is:\n\n    y = x^d mod n\n\n    Given the above:\n\n    x1 = x^d mod p\n    r1 = n/p = q\n    s1 = q^-1 mod p\n    x2 = x^d mod q\n    r2 = n/q = p\n    s2 = p^-1 mod q\n\n    So y = (x1r1s1 + x2r2s2) mod n\n         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n\n\n    According to Fermat's Little Theorem, if the modulus P is prime,\n    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.\n    Since A is not divisible by P it follows that if:\n    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:\n\n    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort\n    to calculate). In order to calculate x^d mod p more quickly the\n    exponent d mod (p - 1) is stored in the RSA private key (the same\n    is done for x^d mod q). These values are referred to as dP and dQ\n    respectively. Therefore we now have:\n\n    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n\n\n    Since we'll be reducing x^dP by modulo p (same for q) we can also\n    reduce x by p (and q respectively) before hand. Therefore, let\n\n    xp = ((x mod p)^dP mod p), and\n    xq = ((x mod q)^dQ mod q), yielding:\n\n    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n\n\n    This can be further reduced to a simple algorithm that only\n    requires 1 inverse (the q inverse is used) to be used and stored.\n    The algorithm is called Garner's algorithm. If qInv is the\n    inverse of q, we simply calculate:\n\n    y = (qInv*(xp - xq) mod p) * q + xq\n\n    However, there are two further complications. First, we need to\n    ensure that xp > xq to prevent signed BigIntegers from being used\n    so we add p until this is true (since we will be mod'ing with\n    p anyway). Then, there is a known timing attack on algorithms\n    using the CRT. To mitigate this risk, \"cryptographic blinding\"\n    should be used. This requires simply generating a random number r\n    between 0 and n-1 and its inverse and multiplying x by r^e before\n    calculating y and then multiplying y by r^-1 afterwards. Note that\n    r must be coprime with n (gcd(r, n) === 1) in order to have an\n    inverse.\n  */\n\n  // cryptographic blinding\n  var r;\n  do {\n    r = new BigInteger(\n      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),\n      16);\n  } while(r.compareTo(key.n) >= 0 || !r.gcd(key.n).equals(BigInteger.ONE));\n  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);\n\n  // calculate xp and xq\n  var xp = x.mod(key.p).modPow(key.dP, key.p);\n  var xq = x.mod(key.q).modPow(key.dQ, key.q);\n\n  // xp must be larger than xq to avoid signed bit usage\n  while(xp.compareTo(xq) < 0) {\n    xp = xp.add(key.p);\n  }\n\n  // do last step\n  var y = xp.subtract(xq)\n    .multiply(key.qInv).mod(key.p)\n    .multiply(key.q).add(xq);\n\n  // remove effect of random for cryptographic blinding\n  y = y.multiply(r.modInverse(key.n)).mod(key.n);\n\n  return y;\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or\n * 'encrypt' on a public key object instead.\n *\n * Performs RSA encryption.\n *\n * The parameter bt controls whether to put padding bytes before the\n * message passed in. Set bt to either true or false to disable padding\n * completely (in order to handle e.g. EMSA-PSS encoding seperately before),\n * signaling whether the encryption operation is a public key operation\n * (i.e. encrypting data) or not, i.e. private key operation (data signing).\n *\n * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01\n * (for signing) or 0x02 (for encryption). The key operation mode (private\n * or public) is derived from this flag in that case).\n *\n * @param m the message to encrypt as a byte string.\n * @param key the RSA key to use.\n * @param bt for PKCS#1 v1.5 padding, the block type to use\n *   (0x01 for private key, 0x02 for public),\n *   to disable padding: true = public key, false = private key.\n *\n * @return the encrypted bytes as a string.\n */\npki.rsa.encrypt = function(m, key, bt) {\n  var pub = bt;\n  var eb;\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  if(bt !== false && bt !== true) {\n    // legacy, default to PKCS#1 v1.5 padding\n    pub = (bt === 0x02);\n    eb = _encodePkcs1_v1_5(m, key, bt);\n  } else {\n    eb = forge.util.createBuffer();\n    eb.putBytes(m);\n  }\n\n  // load encryption block as big integer 'x'\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var x = new BigInteger(eb.toHex(), 16);\n\n  // do RSA encryption\n  var y = _modPow(x, key, pub);\n\n  // convert y into the encrypted data byte string, if y is shorter in\n  // bytes than k, then prepend zero bytes to fill up ed\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var yhex = y.toString(16);\n  var ed = forge.util.createBuffer();\n  var zeros = k - Math.ceil(yhex.length / 2);\n  while(zeros > 0) {\n    ed.putByte(0x00);\n    --zeros;\n  }\n  ed.putBytes(forge.util.hexToBytes(yhex));\n  return ed.getBytes();\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or\n * 'verify' on a public key object instead.\n *\n * Performs RSA decryption.\n *\n * The parameter ml controls whether to apply PKCS#1 v1.5 padding\n * or not.  Set ml = false to disable padding removal completely\n * (in order to handle e.g. EMSA-PSS later on) and simply pass back\n * the RSA encryption block.\n *\n * @param ed the encrypted data to decrypt in as a byte string.\n * @param key the RSA key to use.\n * @param pub true for a public key operation, false for private.\n * @param ml the message length, if known, false to disable padding.\n *\n * @return the decrypted message as a byte string.\n */\npki.rsa.decrypt = function(ed, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  // error if the length of the encrypted data ED is not k\n  if(ed.length !== k) {\n    var error = new Error('Encrypted message length is invalid.');\n    error.length = ed.length;\n    error.expected = k;\n    throw error;\n  }\n\n  // convert encrypted data into a big integer\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);\n\n  // y must be less than the modulus or it wasn't the result of\n  // a previous mod operation (encryption) using that modulus\n  if(y.compareTo(key.n) >= 0) {\n    throw new Error('Encrypted message is invalid.');\n  }\n\n  // do RSA decryption\n  var x = _modPow(y, key, pub);\n\n  // create the encryption block, if x is shorter in bytes than k, then\n  // prepend zero bytes to fill up eb\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var xhex = x.toString(16);\n  var eb = forge.util.createBuffer();\n  var zeros = k - Math.ceil(xhex.length / 2);\n  while(zeros > 0) {\n    eb.putByte(0x00);\n    --zeros;\n  }\n  eb.putBytes(forge.util.hexToBytes(xhex));\n\n  if(ml !== false) {\n    // legacy, default to PKCS#1 v1.5 padding\n    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);\n  }\n\n  // return message\n  return eb.getBytes();\n};\n\n/**\n * Creates an RSA key-pair generation state object. It is used to allow\n * key-generation to be performed in steps. It also allows for a UI to\n * display progress updates.\n *\n * @param bits the size for the private key in bits, defaults to 2048.\n * @param e the public exponent to use, defaults to 65537 (0x10001).\n * @param [options] the options to use.\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n *\n * @return the state object to use to generate the key-pair.\n */\npki.rsa.createKeyPairGenerationState = function(bits, e, options) {\n  // TODO: migrate step-based prime generation code to forge.prime\n\n  // set default bits\n  if(typeof(bits) === 'string') {\n    bits = parseInt(bits, 10);\n  }\n  bits = bits || 2048;\n\n  // create prng with api that matches BigInteger secure random\n  options = options || {};\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  var algorithm = options.algorithm || 'PRIMEINC';\n\n  // create PRIMEINC algorithm state\n  var rval;\n  if(algorithm === 'PRIMEINC') {\n    rval = {\n      algorithm: algorithm,\n      state: 0,\n      bits: bits,\n      rng: rng,\n      eInt: e || 65537,\n      e: new BigInteger(null),\n      p: null,\n      q: null,\n      qBits: bits >> 1,\n      pBits: bits - (bits >> 1),\n      pqState: 0,\n      num: null,\n      keys: null\n    };\n    rval.e.fromInt(rval.eInt);\n  } else {\n    throw new Error('Invalid key generation algorithm: ' + algorithm);\n  }\n\n  return rval;\n};\n\n/**\n * Attempts to runs the key-generation algorithm for at most n seconds\n * (approximately) using the given state. When key-generation has completed,\n * the keys will be stored in state.keys.\n *\n * To use this function to update a UI while generating a key or to prevent\n * causing browser lockups/warnings, set \"n\" to a value other than 0. A\n * simple pattern for generating a key and showing a progress indicator is:\n *\n * var state = pki.rsa.createKeyPairGenerationState(2048);\n * var step = function() {\n *   // step key-generation, run algorithm for 100 ms, repeat\n *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {\n *     setTimeout(step, 1);\n *   } else {\n *     // key-generation complete\n *     // TODO: turn off progress indicator here\n *     // TODO: use the generated key-pair in \"state.keys\"\n *   }\n * };\n * // TODO: turn on progress indicator here\n * setTimeout(step, 0);\n *\n * @param state the state to use.\n * @param n the maximum number of milliseconds to run the algorithm for, 0\n *          to run the algorithm to completion.\n *\n * @return true if the key-generation completed, false if not.\n */\npki.rsa.stepKeyPairGenerationState = function(state, n) {\n  // set default algorithm if not set\n  if(!('algorithm' in state)) {\n    state.algorithm = 'PRIMEINC';\n  }\n\n  // TODO: migrate step-based prime generation code to forge.prime\n  // TODO: abstract as PRIMEINC algorithm\n\n  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)\n  // with some minor optimizations and designed to run in steps\n\n  // local state vars\n  var THIRTY = new BigInteger(null);\n  THIRTY.fromInt(30);\n  var deltaIdx = 0;\n  var op_or = function(x,y) { return x|y; };\n\n  // keep stepping until time limit is reached or done\n  var t1 = +new Date();\n  var t2;\n  var total = 0;\n  while(state.keys === null && (n <= 0 || total < n)) {\n    // generate p or q\n    if(state.state === 0) {\n      /* Note: All primes are of the form:\n\n        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i\n\n        When we generate a random number, we always align it at 30k + 1. Each\n        time the number is determined not to be prime we add to get to the\n        next 'i', eg: if the number was at 30k + 1 we add 6. */\n      var bits = (state.p === null) ? state.pBits : state.qBits;\n      var bits1 = bits - 1;\n\n      // get a random number\n      if(state.pqState === 0) {\n        state.num = new BigInteger(bits, state.rng);\n        // force MSB set\n        if(!state.num.testBit(bits1)) {\n          state.num.bitwiseTo(\n            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);\n        }\n        // align number on 30k+1 boundary\n        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);\n        deltaIdx = 0;\n\n        ++state.pqState;\n      } else if(state.pqState === 1) {\n        // try to make the number a prime\n        if(state.num.bitLength() > bits) {\n          // overflow, try again\n          state.pqState = 0;\n          // do primality test\n        } else if(state.num.isProbablePrime(\n          _getMillerRabinTests(state.num.bitLength()))) {\n          ++state.pqState;\n        } else {\n          // get next potential prime\n          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n        }\n      } else if(state.pqState === 2) {\n        // ensure number is coprime with e\n        state.pqState =\n          (state.num.subtract(BigInteger.ONE).gcd(state.e)\n          .compareTo(BigInteger.ONE) === 0) ? 3 : 0;\n      } else if(state.pqState === 3) {\n        // store p or q\n        state.pqState = 0;\n        if(state.p === null) {\n          state.p = state.num;\n        } else {\n          state.q = state.num;\n        }\n\n        // advance state if both p and q are ready\n        if(state.p !== null && state.q !== null) {\n          ++state.state;\n        }\n        state.num = null;\n      }\n    } else if(state.state === 1) {\n      // ensure p is larger than q (swap them if not)\n      if(state.p.compareTo(state.q) < 0) {\n        state.num = state.p;\n        state.p = state.q;\n        state.q = state.num;\n      }\n      ++state.state;\n    } else if(state.state === 2) {\n      // compute phi: (p - 1)(q - 1) (Euler's totient function)\n      state.p1 = state.p.subtract(BigInteger.ONE);\n      state.q1 = state.q.subtract(BigInteger.ONE);\n      state.phi = state.p1.multiply(state.q1);\n      ++state.state;\n    } else if(state.state === 3) {\n      // ensure e and phi are coprime\n      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {\n        // phi and e are coprime, advance\n        ++state.state;\n      } else {\n        // phi and e aren't coprime, so generate a new p and q\n        state.p = null;\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 4) {\n      // create n, ensure n is has the right number of bits\n      state.n = state.p.multiply(state.q);\n\n      // ensure n is right number of bits\n      if(state.n.bitLength() === state.bits) {\n        // success, advance\n        ++state.state;\n      } else {\n        // failed, get new q\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 5) {\n      // set keys\n      var d = state.e.modInverse(state.phi);\n      state.keys = {\n        privateKey: pki.rsa.setPrivateKey(\n          state.n, state.e, d, state.p, state.q,\n          d.mod(state.p1), d.mod(state.q1),\n          state.q.modInverse(state.p)),\n        publicKey: pki.rsa.setPublicKey(state.n, state.e)\n      };\n    }\n\n    // update timing\n    t2 = +new Date();\n    total += t2 - t1;\n    t1 = t2;\n  }\n\n  return state.keys !== null;\n};\n\n/**\n * Generates an RSA public-private key pair in a single call.\n *\n * To generate a key-pair in steps (to allow for progress updates and to\n * prevent blocking or warnings in slow browsers) then use the key-pair\n * generation state functions.\n *\n * To generate a key-pair asynchronously (either through web-workers, if\n * available, or by breaking up the work on the main thread), pass a\n * callback function.\n *\n * @param [bits] the size for the private key in bits, defaults to 2048.\n * @param [e] the public exponent to use, defaults to 65537.\n * @param [options] options for key-pair generation, if given then 'bits'\n *          and 'e' must *not* be given:\n *          bits the size for the private key in bits, (default: 2048).\n *          e the public exponent to use, (default: 65537 (0x10001)).\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n * @param [callback(err, keypair)] called once the operation completes.\n *\n * @return an object with privateKey and publicKey properties.\n */\npki.rsa.generateKeyPair = function(bits, e, options, callback) {\n  // (bits), (options), (callback)\n  if(arguments.length === 1) {\n    if(typeof bits === 'object') {\n      options = bits;\n      bits = undefined;\n    } else if(typeof bits === 'function') {\n      callback = bits;\n      bits = undefined;\n    }\n  } else if(arguments.length === 2) {\n    // (bits, e), (bits, options), (bits, callback), (options, callback)\n    if(typeof bits === 'number') {\n      if(typeof e === 'function') {\n        callback = e;\n        e = undefined;\n      } else if(typeof e !== 'number') {\n        options = e;\n        e = undefined;\n      }\n    } else {\n      options = bits;\n      callback = e;\n      bits = undefined;\n      e = undefined;\n    }\n  } else if(arguments.length === 3) {\n    // (bits, e, options), (bits, e, callback), (bits, options, callback)\n    if(typeof e === 'number') {\n      if(typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      }\n    } else {\n      callback = options;\n      options = e;\n      e = undefined;\n    }\n  }\n  options = options || {};\n  if(bits === undefined) {\n    bits = options.bits || 2048;\n  }\n  if(e === undefined) {\n    e = options.e || 0x10001;\n  }\n\n  // if native code is permitted and a callback is given, use native\n  // key generation code if available and if parameters are acceptable\n  if(!forge.disableNativeCode && callback &&\n    bits >= 256 && bits <= 16384 && (e === 0x10001 || e === 3)) {\n    if(_detectSubtleCrypto('generateKey') && _detectSubtleCrypto('exportKey')) {\n      // use standard native generateKey\n      return window.crypto.subtle.generateKey({\n        name: 'RSASSA-PKCS1-v1_5',\n        modulusLength: bits,\n        publicExponent: _intToUint8Array(e),\n        hash: {name: 'SHA-256'}\n      }, true /* key can be exported*/, ['sign', 'verify'])\n      .then(function(pair) {\n        return window.crypto.subtle.exportKey('pkcs8', pair.privateKey);\n      }).catch(function(err) {\n        callback(err);\n      }).then(function(pkcs8) {\n        if(pkcs8) {\n          var privateKey = pki.privateKeyFromAsn1(\n            asn1.fromDer(forge.util.createBuffer(pkcs8)));\n          callback(null, {\n            privateKey: privateKey,\n            publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n          });\n        }\n      });\n    }\n    if(_detectSubtleMsCrypto('generateKey') &&\n      _detectSubtleMsCrypto('exportKey')) {\n      var genOp = window.msCrypto.subtle.generateKey({\n        name: 'RSASSA-PKCS1-v1_5',\n        modulusLength: bits,\n        publicExponent: _intToUint8Array(e),\n        hash: {name: 'SHA-256'}\n      }, true /* key can be exported*/, ['sign', 'verify']);\n      genOp.oncomplete = function(e) {\n        var pair = e.target.result;\n        var exportOp = window.msCrypto.subtle.exportKey(\n          'pkcs8', pair.privateKey);\n        exportOp.oncomplete = function(e) {\n          var pkcs8 = e.target.result;\n          var privateKey = pki.privateKeyFromAsn1(\n            asn1.fromDer(forge.util.createBuffer(pkcs8)));\n          callback(null, {\n            privateKey: privateKey,\n            publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n          });\n        };\n        exportOp.onerror = function(err) {\n          callback(err);\n        };\n      };\n      genOp.onerror = function(err) {\n        callback(err);\n      };\n      return;\n    }\n  }\n\n  // use JavaScript implementation\n  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);\n  if(!callback) {\n    pki.rsa.stepKeyPairGenerationState(state, 0);\n    return state.keys;\n  }\n  _generateKeyPair(state, options, callback);\n};\n\n/**\n * Sets an RSA public key from BigIntegers modulus and exponent.\n *\n * @param n the modulus.\n * @param e the exponent.\n *\n * @return the public key.\n */\npki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {\n  var key = {\n    n: n,\n    e: e\n  };\n\n  /**\n   * Encrypts the given data with this public key. Newer applications\n   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for\n   * legacy applications.\n   *\n   * @param data the byte string to encrypt.\n   * @param scheme the encryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA encryption,\n   *          an object with an 'encode' property set to a function\n   *          with the signature 'function(data, key)' that returns\n   *          a binary-encoded string representing the encoded data.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the encrypted byte string.\n   */\n  key.encrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {\n        encode: function(m, key, pub) {\n          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();\n        }\n      };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        encode: function(m, key) {\n          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = { encode: function(e) { return e; } };\n    } else if(typeof scheme === 'string') {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // do scheme-based encoding then rsa encryption\n    var e = scheme.encode(data, key, true);\n    return pki.rsa.encrypt(e, key, true);\n  };\n\n  /**\n   * Verifies the given signature against the given digest.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the\n   * signature is an OCTET STRING that holds a DigestInfo.\n   *\n   * DigestInfo ::= SEQUENCE {\n   *   digestAlgorithm DigestAlgorithmIdentifier,\n   *   digest Digest\n   * }\n   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n   * Digest ::= OCTET STRING\n   *\n   * To perform PSS signature verification, provide an instance\n   * of Forge PSS object as the scheme parameter.\n   *\n   * @param digest the message digest hash to compare against the signature,\n   *          as a binary-encoded string.\n   * @param signature the signature to verify, as a binary-encoded string.\n   * @param scheme signature verification scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be expected, but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n   key.verify = function(digest, signature, scheme) {\n     if(typeof scheme === 'string') {\n       scheme = scheme.toUpperCase();\n     } else if(scheme === undefined) {\n       scheme = 'RSASSA-PKCS1-V1_5';\n     }\n\n     if(scheme === 'RSASSA-PKCS1-V1_5') {\n       scheme = {\n         verify: function(digest, d) {\n           // remove padding\n           d = _decodePkcs1_v1_5(d, key, true);\n           // d is ASN.1 BER-encoded DigestInfo\n           var obj = asn1.fromDer(d);\n           // compare the given digest to the decrypted one\n           return digest === obj.value[1].value;\n         }\n       };\n     } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n       scheme = {\n         verify: function(digest, d) {\n           // remove padding\n           d = _decodePkcs1_v1_5(d, key, true);\n           return digest === d;\n         }\n       };\n     }\n\n     // do rsa decryption w/o any decoding, then verify -- which does decoding\n     var d = pki.rsa.decrypt(signature, key, true, false);\n     return scheme.verify(digest, d, key.n.bitLength());\n  };\n\n  return key;\n};\n\n/**\n * Sets an RSA private key from BigIntegers modulus, exponent, primes,\n * prime exponents, and modular multiplicative inverse.\n *\n * @param n the modulus.\n * @param e the public exponent.\n * @param d the private exponent ((inverse of e) mod n).\n * @param p the first prime.\n * @param q the second prime.\n * @param dP exponent1 (d mod (p-1)).\n * @param dQ exponent2 (d mod (q-1)).\n * @param qInv ((inverse of q) mod p)\n *\n * @return the private key.\n */\npki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(\n  n, e, d, p, q, dP, dQ, qInv) {\n  var key = {\n    n: n,\n    e: e,\n    d: d,\n    p: p,\n    q: q,\n    dP: dP,\n    dQ: dQ,\n    qInv: qInv\n  };\n\n  /**\n   * Decrypts the given data with this private key. The decryption scheme\n   * must match the one used to encrypt the data.\n   *\n   * @param data the byte string to decrypt.\n   * @param scheme the decryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA decryption.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the decrypted byte string.\n   */\n  key.decrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    // do rsa decryption w/o any decoding\n    var d = pki.rsa.decrypt(data, key, false, false);\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = { decode: _decodePkcs1_v1_5 };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        decode: function(d, key) {\n          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = { decode: function(d) { return d; } };\n    } else {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // decode according to scheme\n    return scheme.decode(d, key, false);\n  };\n\n  /**\n   * Signs the given digest, producing a signature.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide\n   * an instance of Forge PSS object as the scheme parameter.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param scheme the signature scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be used but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return the signature as a byte string.\n   */\n  key.sign = function(md, scheme) {\n    /* Note: The internal implementation of RSA operations is being\n      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy\n      code like the use of an encoding block identifier 'bt' will eventually\n      be removed. */\n\n    // private key operation\n    var bt = false;\n\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    }\n\n    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = { encode: emsaPkcs1v15encode };\n      bt = 0x01;\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = { encode: function() { return md; } };\n      bt = 0x01;\n    }\n\n    // encode and then encrypt\n    var d = scheme.encode(md, key.n.bitLength());\n    return pki.rsa.encrypt(d, key, bt);\n  };\n\n  return key;\n};\n\n/**\n * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.\n *\n * @param rsaKey the ASN.1 RSAPrivateKey.\n *\n * @return the ASN.1 PrivateKeyInfo.\n */\npki.wrapRsaPrivateKey = function(rsaKey) {\n  // PrivateKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // privateKeyAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // PrivateKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      asn1.toDer(rsaKey).getBytes())\n    ]);\n};\n\n/**\n * Converts a private key from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a PrivateKeyInfo containing an\n *          RSAPrivateKey or an RSAPrivateKey.\n *\n * @return the private key.\n */\npki.privateKeyFromAsn1 = function(obj) {\n  // get PrivateKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {\n    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));\n  }\n\n  // get RSAPrivateKey\n  capture = {};\n  errors = [];\n  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read private key. ' +\n      'ASN.1 object does not contain an RSAPrivateKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // Note: Version is currently ignored.\n  // capture.privateKeyVersion\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n, e, d, p, q, dP, dQ, qInv;\n  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();\n  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();\n  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();\n  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();\n  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();\n  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();\n  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();\n  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();\n\n  // set private key\n  return pki.setRsaPrivateKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16),\n    new BigInteger(d, 16),\n    new BigInteger(p, 16),\n    new BigInteger(q, 16),\n    new BigInteger(dP, 16),\n    new BigInteger(dQ, 16),\n    new BigInteger(qInv, 16));\n};\n\n/**\n * Converts a private key to an ASN.1 RSAPrivateKey.\n *\n * @param key the private key.\n *\n * @return the ASN.1 representation of an RSAPrivateKey.\n */\npki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {\n  // RSAPrivateKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0 = only 2 primes, 1 multiple primes)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e)),\n    // privateExponent (d)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.d)),\n    // privateKeyPrime1 (p)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.p)),\n    // privateKeyPrime2 (q)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.q)),\n    // privateKeyExponent1 (dP)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dP)),\n    // privateKeyExponent2 (dQ)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dQ)),\n    // coefficient (qInv)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.qInv))\n  ]);\n};\n\n/**\n * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @return the public key.\n */\npki.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {\n    // get oid\n    var oid = asn1.derToOid(capture.publicKeyOid);\n    if(oid !== pki.oids.rsaEncryption) {\n      var error = new Error('Cannot read public key. Unknown OID.');\n      error.oid = oid;\n      throw error;\n    }\n    obj = capture.rsaPublicKey;\n  }\n\n  // get RSA params\n  errors = [];\n  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read public key. ' +\n      'ASN.1 object does not contain an RSAPublicKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();\n  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();\n\n  // set public key\n  return pki.setRsaPublicKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16));\n};\n\n/**\n * Converts a public key to an ASN.1 SubjectPublicKeyInfo.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a SubjectPublicKeyInfo.\n */\npki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {\n  // SubjectPublicKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // subjectPublicKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [\n      pki.publicKeyToRSAPublicKey(key)\n    ])\n  ]);\n};\n\n/**\n * Converts a public key to an ASN.1 RSAPublicKey.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a RSAPublicKey.\n */\npki.publicKeyToRSAPublicKey = function(key) {\n  // RSAPublicKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e))\n  ]);\n};\n\n/**\n * Encodes a message using PKCS#1 v1.5 padding.\n *\n * @param m the message to encode.\n * @param key the RSA key to use.\n * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02\n *          (for encryption).\n *\n * @return the padded byte buffer.\n */\nfunction _encodePkcs1_v1_5(m, key, bt) {\n  var eb = forge.util.createBuffer();\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* use PKCS#1 v1.5 padding */\n  if(m.length > (k - 11)) {\n    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');\n    error.length = m.length;\n    error.max = k - 11;\n    throw error;\n  }\n\n  /* A block type BT, a padding string PS, and the data D shall be\n    formatted into an octet string EB, the encryption block:\n\n    EB = 00 || BT || PS || 00 || D\n\n    The block type BT shall be a single octet indicating the structure of\n    the encryption block. For this version of the document it shall have\n    value 00, 01, or 02. For a private-key operation, the block type\n    shall be 00 or 01. For a public-key operation, it shall be 02.\n\n    The padding string PS shall consist of k-3-||D|| octets. For block\n    type 00, the octets shall have value 00; for block type 01, they\n    shall have value FF; and for block type 02, they shall be\n    pseudorandomly generated and nonzero. This makes the length of the\n    encryption block EB equal to k. */\n\n  // build the encryption block\n  eb.putByte(0x00);\n  eb.putByte(bt);\n\n  // create the padding\n  var padNum = k - 3 - m.length;\n  var padByte;\n  // private key op\n  if(bt === 0x00 || bt === 0x01) {\n    padByte = (bt === 0x00) ? 0x00 : 0xFF;\n    for(var i = 0; i < padNum; ++i) {\n      eb.putByte(padByte);\n    }\n  } else {\n    // public key op\n    // pad with random non-zero values\n    while(padNum > 0) {\n      var numZeros = 0;\n      var padBytes = forge.random.getBytes(padNum);\n      for(var i = 0; i < padNum; ++i) {\n        padByte = padBytes.charCodeAt(i);\n        if(padByte === 0) {\n          ++numZeros;\n        } else {\n          eb.putByte(padByte);\n        }\n      }\n      padNum = numZeros;\n    }\n  }\n\n  // zero followed by message\n  eb.putByte(0x00);\n  eb.putBytes(m);\n\n  return eb;\n}\n\n/**\n * Decodes a message using PKCS#1 v1.5 padding.\n *\n * @param em the message to decode.\n * @param key the RSA key to use.\n * @param pub true if the key is a public key, false if it is private.\n * @param ml the message length, if specified.\n *\n * @return the decoded bytes.\n */\nfunction _decodePkcs1_v1_5(em, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* It is an error if any of the following conditions occurs:\n\n    1. The encryption block EB cannot be parsed unambiguously.\n    2. The padding string PS consists of fewer than eight octets\n      or is inconsisent with the block type BT.\n    3. The decryption process is a public-key operation and the block\n      type BT is not 00 or 01, or the decryption process is a\n      private-key operation and the block type is not 02.\n   */\n\n  // parse the encryption block\n  var eb = forge.util.createBuffer(em);\n  var first = eb.getByte();\n  var bt = eb.getByte();\n  if(first !== 0x00 ||\n    (pub && bt !== 0x00 && bt !== 0x01) ||\n    (!pub && bt != 0x02) ||\n    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  var padNum = 0;\n  if(bt === 0x00) {\n    // check all padding bytes for 0x00\n    padNum = k - 3 - ml;\n    for(var i = 0; i < padNum; ++i) {\n      if(eb.getByte() !== 0x00) {\n        throw new Error('Encryption block is invalid.');\n      }\n    }\n  } else if(bt === 0x01) {\n    // find the first byte that isn't 0xFF, should be after all padding\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() !== 0xFF) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  } else if(bt === 0x02) {\n    // look for 0x00 byte\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() === 0x00) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  }\n\n  // zero must be 0x00 and padNum must be (k - 3 - message length)\n  var zero = eb.getByte();\n  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  return eb.getBytes();\n}\n\n/**\n * Runs the key-generation algorithm asynchronously, either in the background\n * via Web Workers, or using the main thread and setImmediate.\n *\n * @param state the key-pair generation state.\n * @param [options] options for key-pair generation:\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2, -1 to use estimated cores minus one).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n * @param callback(err, keypair) called once the operation completes.\n */\nfunction _generateKeyPair(state, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  var opts = {\n    algorithm: {\n      name: options.algorithm || 'PRIMEINC',\n      options: {\n        workers: options.workers || 2,\n        workLoad: options.workLoad || 100,\n        workerScript: options.workerScript\n      }\n    }\n  };\n  if('prng' in options) {\n    opts.prng = options.prng;\n  }\n\n  generate();\n\n  function generate() {\n    // find p and then q (done in series to simplify)\n    getPrime(state.pBits, function(err, num) {\n      if(err) {\n        return callback(err);\n      }\n      state.p = num;\n      if(state.q !== null) {\n        return finish(err, state.q);\n      }\n      getPrime(state.qBits, finish);\n    });\n  }\n\n  function getPrime(bits, callback) {\n    forge.prime.generateProbablePrime(bits, opts, callback);\n  }\n\n  function finish(err, num) {\n    if(err) {\n      return callback(err);\n    }\n\n    // set q\n    state.q = num;\n\n    // ensure p is larger than q (swap them if not)\n    if(state.p.compareTo(state.q) < 0) {\n      var tmp = state.p;\n      state.p = state.q;\n      state.q = tmp;\n    }\n\n    // ensure p is coprime with e\n    if(state.p.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.p = null;\n      generate();\n      return;\n    }\n\n    // ensure q is coprime with e\n    if(state.q.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // compute phi: (p - 1)(q - 1) (Euler's totient function)\n    state.p1 = state.p.subtract(BigInteger.ONE);\n    state.q1 = state.q.subtract(BigInteger.ONE);\n    state.phi = state.p1.multiply(state.q1);\n\n    // ensure e and phi are coprime\n    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {\n      // phi and e aren't coprime, so generate a new p and q\n      state.p = state.q = null;\n      generate();\n      return;\n    }\n\n    // create n, ensure n is has the right number of bits\n    state.n = state.p.multiply(state.q);\n    if(state.n.bitLength() !== state.bits) {\n      // failed, get new q\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // set keys\n    var d = state.e.modInverse(state.phi);\n    state.keys = {\n      privateKey: pki.rsa.setPrivateKey(\n        state.n, state.e, d, state.p, state.q,\n        d.mod(state.p1), d.mod(state.q1),\n        state.q.modInverse(state.p)),\n      publicKey: pki.rsa.setPublicKey(state.n, state.e)\n    };\n\n    callback(null, state.keys);\n  }\n}\n\n/**\n * Converts a positive BigInteger into 2's-complement big-endian bytes.\n *\n * @param b the big integer to convert.\n *\n * @return the bytes.\n */\nfunction _bnToBytes(b) {\n  // prepend 0x00 if first byte >= 0x80\n  var hex = b.toString(16);\n  if(hex[0] >= '8') {\n    hex = '00' + hex;\n  }\n  var bytes = forge.util.hexToBytes(hex);\n\n  // ensure integer is minimally-encoded\n  if(bytes.length > 1 &&\n    // leading 0x00 for positive integer\n    ((bytes.charCodeAt(0) === 0 &&\n    (bytes.charCodeAt(1) & 0x80) === 0) ||\n    // leading 0xFF for negative integer\n    (bytes.charCodeAt(0) === 0xFF &&\n    (bytes.charCodeAt(1) & 0x80) === 0x80))) {\n    return bytes.substr(1);\n  }\n  return bytes;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction _getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n/**\n * Performs feature detection on the SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleCrypto(fn) {\n  return (typeof window !== 'undefined' &&\n    typeof window.crypto === 'object' &&\n    typeof window.crypto.subtle === 'object' &&\n    typeof window.crypto.subtle[fn] === 'function');\n}\n\n/**\n * Performs feature detection on the deprecated Microsoft Internet Explorer\n * outdated SubtleCrypto interface. This function should only be used after\n * checking for the modern, standard SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleMsCrypto(fn) {\n  return (typeof window !== 'undefined' &&\n    typeof window.msCrypto === 'object' &&\n    typeof window.msCrypto.subtle === 'object' &&\n    typeof window.msCrypto.subtle[fn] === 'function');\n}\n\nfunction _intToUint8Array(x) {\n  var bytes = forge.util.hexToBytes(x.toString(16));\n  var buffer = new Uint8Array(bytes.length);\n  for(var i = 0; i < bytes.length; ++i) {\n    buffer[i] = bytes.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction _privateKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error(\n      'Unsupported key algorithm \"' + jwk.kty + '\"; algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPrivateKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e),\n    _base64ToBigInt(jwk.d),\n    _base64ToBigInt(jwk.p),\n    _base64ToBigInt(jwk.q),\n    _base64ToBigInt(jwk.dp),\n    _base64ToBigInt(jwk.dq),\n    _base64ToBigInt(jwk.qi));\n}\n\nfunction _publicKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error('Key algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPublicKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e));\n}\n\nfunction _base64ToBigInt(b64) {\n  return new BigInteger(forge.util.bytesToHex(forge.util.decode64(b64)), 16);\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'rsa';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/rsa',[\n  'require',\n  'module',\n  './asn1',\n  './jsbn',\n  './oids',\n  './pkcs1',\n  './prime',\n  './random',\n  './util'\n], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Password-based encryption functions.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * An EncryptedPrivateKeyInfo:\n *\n * EncryptedPrivateKeyInfo ::= SEQUENCE {\n *   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n *   encryptedData        EncryptedData }\n *\n * EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedData ::= OCTET STRING\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Password-based encryption implementation. */\nvar pki = forge.pki = forge.pki || {};\npki.pbe = forge.pbe = forge.pbe || {};\nvar oids = pki.oids;\n\n// validator for an EncryptedPrivateKeyInfo structure\n// Note: Currently only works w/algorithm params\nvar encryptedPrivateKeyValidator = {\n  name: 'EncryptedPrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedPrivateKeyInfo.encryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encryptionOid'\n    }, {\n      name: 'AlgorithmIdentifier.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'encryptionParams'\n    }]\n  }, {\n    // encryptedData\n    name: 'EncryptedPrivateKeyInfo.encryptedData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encryptedData'\n  }]\n};\n\n// validator for a PBES2Algorithms structure\n// Note: Currently only works w/PBKDF2 + AES encryption schemes\nvar PBES2AlgorithmsValidator = {\n  name: 'PBES2Algorithms',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PBES2Algorithms.keyDerivationFunc',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.keyDerivationFunc.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'kdfOid'\n    }, {\n      name: 'PBES2Algorithms.params',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'PBES2Algorithms.params.salt',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'kdfSalt'\n      }, {\n        name: 'PBES2Algorithms.params.iterationCount',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'kdfIterationCount'\n      }, {\n        name: 'PBES2Algorithms.params.keyLength',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        optional: true,\n        capture: 'keyLength'\n      }, {\n        // prf\n        name: 'PBES2Algorithms.params.prf',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        optional: true,\n        value: [{\n          name: 'PBES2Algorithms.params.prf.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'prfOid'\n        }]\n      }]\n    }]\n  }, {\n    name: 'PBES2Algorithms.encryptionScheme',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.encryptionScheme.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encOid'\n    }, {\n      name: 'PBES2Algorithms.encryptionScheme.iv',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'encIv'\n    }]\n  }]\n};\n\nvar pkcs12PbeParamsValidator = {\n  name: 'pkcs-12PbeParams',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'pkcs-12PbeParams.salt',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'salt'\n  }, {\n    name: 'pkcs-12PbeParams.iterations',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'iterations'\n  }]\n};\n\n/**\n * Encrypts a ASN.1 PrivateKeyInfo object, producing an EncryptedPrivateKeyInfo.\n *\n * PBES2Algorithms ALGORITHM-IDENTIFIER ::=\n *   { {PBES2-params IDENTIFIED BY id-PBES2}, ...}\n *\n * id-PBES2 OBJECT IDENTIFIER ::= {pkcs-5 13}\n *\n * PBES2-params ::= SEQUENCE {\n *   keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\n *   encryptionScheme AlgorithmIdentifier {{PBES2-Encs}}\n * }\n *\n * PBES2-KDFs ALGORITHM-IDENTIFIER ::=\n *   { {PBKDF2-params IDENTIFIED BY id-PBKDF2}, ... }\n *\n * PBES2-Encs ALGORITHM-IDENTIFIER ::= { ... }\n *\n * PBKDF2-params ::= SEQUENCE {\n *   salt CHOICE {\n *     specified OCTET STRING,\n *     otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n *   },\n *   iterationCount INTEGER (1..MAX),\n *   keyLength INTEGER (1..MAX) OPTIONAL,\n *   prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1\n * }\n *\n * @param obj the ASN.1 PrivateKeyInfo object.\n * @param password the password to encrypt with.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          prfAlgorithm the PRF message digest algorithm to use\n *            ('sha1', 'sha224', 'sha256', 'sha384', 'sha512')\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptPrivateKeyInfo = function(obj, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || 'aes128';\n  options.prfAlgorithm = options.prfAlgorithm || 'sha1';\n\n  // generate PBE params\n  var salt = forge.random.getBytesSync(options.saltSize);\n  var count = options.count;\n  var countBytes = asn1.integerToDer(count);\n  var dkLen;\n  var encryptionAlgorithm;\n  var encryptedData;\n  if(options.algorithm.indexOf('aes') === 0 || options.algorithm === 'des') {\n    // do PBES2\n    var ivLen, encOid, cipherFn;\n    switch(options.algorithm) {\n    case 'aes128':\n      dkLen = 16;\n      ivLen = 16;\n      encOid = oids['aes128-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes192':\n      dkLen = 24;\n      ivLen = 16;\n      encOid = oids['aes192-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes256':\n      dkLen = 32;\n      ivLen = 16;\n      encOid = oids['aes256-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'des':\n      dkLen = 8;\n      ivLen = 8;\n      encOid = oids['desCBC'];\n      cipherFn = forge.des.createEncryptionCipher;\n      break;\n    default:\n      var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n      error.algorithm = options.algorithm;\n      throw error;\n    }\n\n    // get PRF message digest\n    var prfAlgorithm = 'hmacWith' + options.prfAlgorithm.toUpperCase();\n    var md = prfAlgorithmToMessageDigest(prfAlgorithm);\n\n    // encrypt private key using pbe SHA-1 and AES/DES\n    var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n    var iv = forge.random.getBytesSync(ivLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    // get PBKDF2-params\n    var params = createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm);\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pkcs5PBES2']).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // keyDerivationFunc\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oids['pkcs5PBKDF2']).getBytes()),\n          // PBKDF2-params\n          params\n        ]),\n        // encryptionScheme\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(encOid).getBytes()),\n          // iv\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, iv)\n        ])\n      ])\n    ]);\n  } else if(options.algorithm === '3des') {\n    // Do PKCS12 PBE\n    dkLen = 24;\n\n    var saltBytes = new forge.util.ByteBuffer(salt);\n    var dk = pki.pbe.generatePkcs12Key(password, saltBytes, 1, count, dkLen);\n    var iv = pki.pbe.generatePkcs12Key(password, saltBytes, 2, count, dkLen);\n    var cipher = forge.des.createEncryptionCipher(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pbeWithSHAAnd3-KeyTripleDES-CBC']).getBytes()),\n      // pkcs-12PbeParams\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // salt\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n        // iteration count\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          countBytes.getBytes())\n      ])\n    ]);\n  } else {\n    var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // EncryptedPrivateKeyInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // encryptionAlgorithm\n    encryptionAlgorithm,\n    // encryptedData\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, encryptedData)\n  ]);\n  return rval;\n};\n\n/**\n * Decrypts a ASN.1 PrivateKeyInfo object.\n *\n * @param obj the ASN.1 EncryptedPrivateKeyInfo object.\n * @param password the password to decrypt with.\n *\n * @return the ASN.1 PrivateKeyInfo on success, null on failure.\n */\npki.decryptPrivateKeyInfo = function(obj, password) {\n  var rval = null;\n\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, encryptedPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get cipher\n  var oid = asn1.derToOid(capture.encryptionOid);\n  var cipher = pki.pbe.getCipher(oid, capture.encryptionParams, password);\n\n  // get encrypted data\n  var encrypted = forge.util.createBuffer(capture.encryptedData);\n\n  cipher.update(encrypted);\n  if(cipher.finish()) {\n    rval = asn1.fromDer(cipher.output);\n  }\n\n  return rval;\n};\n\n/**\n * Converts a EncryptedPrivateKeyInfo to PEM format.\n *\n * @param epki the EncryptedPrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted encrypted private key.\n */\npki.encryptedPrivateKeyToPem = function(epki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'ENCRYPTED PRIVATE KEY',\n    body: asn1.toDer(epki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PEM-encoded EncryptedPrivateKeyInfo to ASN.1 format. Decryption\n * is not performed.\n *\n * @param pem the EncryptedPrivateKeyInfo in PEM-format.\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptedPrivateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY') {\n    var error = new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM header type is \"ENCRYPTED PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  return asn1.fromDer(msg.body);\n};\n\n/**\n * Encrypts an RSA private key. By default, the key will be wrapped in\n * a PrivateKeyInfo and encrypted to produce a PKCS#8 EncryptedPrivateKeyInfo.\n * This is the standard, preferred way to encrypt a private key.\n *\n * To produce a non-standard PEM-encrypted private key that uses encapsulated\n * headers to indicate the encryption algorithm (old-style non-PKCS#8 OpenSSL\n * private key encryption), set the 'legacy' option to true. Note: Using this\n * option will cause the iteration count to be forced to 1.\n *\n * Note: The 'des' algorithm is supported, but it is not considered to be\n * secure because it only uses a single 56-bit key. If possible, it is highly\n * recommended that a different algorithm be used.\n *\n * @param rsaKey the RSA key to encrypt.\n * @param password the password to use.\n * @param options:\n *          algorithm: the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des', 'des').\n *          count: the iteration count to use.\n *          saltSize: the salt size to use.\n *          legacy: output an old non-PKCS#8 PEM-encrypted+encapsulated\n *            headers (DEK-Info) private key.\n *\n * @return the PEM-encoded ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptRsaPrivateKey = function(rsaKey, password, options) {\n  // standard PKCS#8\n  options = options || {};\n  if(!options.legacy) {\n    // encrypt PrivateKeyInfo\n    var rval = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));\n    rval = pki.encryptPrivateKeyInfo(rval, password, options);\n    return pki.encryptedPrivateKeyToPem(rval);\n  }\n\n  // legacy non-PKCS#8\n  var algorithm;\n  var iv;\n  var dkLen;\n  var cipherFn;\n  switch(options.algorithm) {\n  case 'aes128':\n    algorithm = 'AES-128-CBC';\n    dkLen = 16;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes192':\n    algorithm = 'AES-192-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes256':\n    algorithm = 'AES-256-CBC';\n    dkLen = 32;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case '3des':\n    algorithm = 'DES-EDE3-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  case 'des':\n    algorithm = 'DES-CBC';\n    dkLen = 8;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  default:\n    var error = new Error('Could not encrypt RSA private key; unsupported ' +\n      'encryption algorithm \"' + options.algorithm + '\".');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // encrypt private key using OpenSSL legacy key derivation\n  var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n  cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));\n  cipher.finish();\n\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    procType: {\n      version: '4',\n      type: 'ENCRYPTED'\n    },\n    dekInfo: {\n      algorithm: algorithm,\n      parameters: forge.util.bytesToHex(iv).toUpperCase()\n    },\n    body: cipher.output.getBytes()\n  };\n  return forge.pem.encode(msg);\n};\n\n/**\n * Decrypts an RSA private key.\n *\n * @param pem the PEM-formatted EncryptedPrivateKeyInfo to decrypt.\n * @param password the password to use.\n *\n * @return the RSA key on success, null on failure.\n */\npki.decryptRsaPrivateKey = function(pem, password) {\n  var rval = null;\n\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY' &&\n    msg.type !== 'PRIVATE KEY' &&\n    msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM header type ' +\n      'is not \"ENCRYPTED PRIVATE KEY\", \"PRIVATE KEY\", or \"RSA PRIVATE KEY\".');\n    error.headerType = error;\n    throw error;\n  }\n\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    var dkLen;\n    var cipherFn;\n    switch(msg.dekInfo.algorithm) {\n    case 'DES-CBC':\n      dkLen = 8;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'DES-EDE3-CBC':\n      dkLen = 24;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'AES-128-CBC':\n      dkLen = 16;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-192-CBC':\n      dkLen = 24;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-256-CBC':\n      dkLen = 32;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'RC2-40-CBC':\n      dkLen = 5;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 40);\n      };\n      break;\n    case 'RC2-64-CBC':\n      dkLen = 8;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 64);\n      };\n      break;\n    case 'RC2-128-CBC':\n      dkLen = 16;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 128);\n      };\n      break;\n    default:\n      var error = new Error('Could not decrypt private key; unsupported ' +\n        'encryption algorithm \"' + msg.dekInfo.algorithm + '\".');\n      error.algorithm = msg.dekInfo.algorithm;\n      throw error;\n    }\n\n    // use OpenSSL legacy key derivation\n    var iv = forge.util.hexToBytes(msg.dekInfo.parameters);\n    var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(forge.util.createBuffer(msg.body));\n    if(cipher.finish()) {\n      rval = cipher.output.getBytes();\n    } else {\n      return rval;\n    }\n  } else {\n    rval = msg.body;\n  }\n\n  if(msg.type === 'ENCRYPTED PRIVATE KEY') {\n    rval = pki.decryptPrivateKeyInfo(asn1.fromDer(rval), password);\n  } else {\n    // decryption already performed above\n    rval = asn1.fromDer(rval);\n  }\n\n  if(rval !== null) {\n    rval = pki.privateKeyFromAsn1(rval);\n  }\n\n  return rval;\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\npki.pbe.generatePkcs12Key = function(password, salt, id, iter, n, md) {\n  var j, l;\n\n  if(typeof md === 'undefined' || md === null) {\n    md = forge.md.sha1.create();\n  }\n\n  var u = md.digestLength;\n  var v = md.blockLength;\n  var result = new forge.util.ByteBuffer();\n\n  /* Convert password to Unicode byte buffer + trailing 0-byte. */\n  var passBuf = new forge.util.ByteBuffer();\n  if(password !== null && password !== undefined) {\n    for(l = 0; l < password.length; l++) {\n      passBuf.putInt16(password.charCodeAt(l));\n    }\n    passBuf.putInt16(0);\n  }\n\n  /* Length of salt and password in BYTES. */\n  var p = passBuf.length();\n  var s = salt.length();\n\n  /* 1. Construct a string, D (the \"diversifier\"), by concatenating\n        v copies of ID. */\n  var D = new forge.util.ByteBuffer();\n  D.fillWithByte(id, v);\n\n  /* 2. Concatenate copies of the salt together to create a string S of length\n        v * ceil(s / v) bytes (the final copy of the salt may be trunacted\n        to create S).\n        Note that if the salt is the empty string, then so is S. */\n  var Slen = v * Math.ceil(s / v);\n  var S = new forge.util.ByteBuffer();\n  for(l = 0; l < Slen; l ++) {\n    S.putByte(salt.at(l % s));\n  }\n\n  /* 3. Concatenate copies of the password together to create a string P of\n        length v * ceil(p / v) bytes (the final copy of the password may be\n        truncated to create P).\n        Note that if the password is the empty string, then so is P. */\n  var Plen = v * Math.ceil(p / v);\n  var P = new forge.util.ByteBuffer();\n  for(l = 0; l < Plen; l ++) {\n    P.putByte(passBuf.at(l % p));\n  }\n\n  /* 4. Set I=S||P to be the concatenation of S and P. */\n  var I = S;\n  I.putBuffer(P);\n\n  /* 5. Set c=ceil(n / u). */\n  var c = Math.ceil(n / u);\n\n  /* 6. For i=1, 2, ..., c, do the following: */\n  for(var i = 1; i <= c; i ++) {\n    /* a) Set Ai=H^r(D||I). (l.e. the rth hash of D||I, H(H(H(...H(D||I)))) */\n    var buf = new forge.util.ByteBuffer();\n    buf.putBytes(D.bytes());\n    buf.putBytes(I.bytes());\n    for(var round = 0; round < iter; round ++) {\n      md.start();\n      md.update(buf.getBytes());\n      buf = md.digest();\n    }\n\n    /* b) Concatenate copies of Ai to create a string B of length v bytes (the\n          final copy of Ai may be truncated to create B). */\n    var B = new forge.util.ByteBuffer();\n    for(l = 0; l < v; l ++) {\n      B.putByte(buf.at(l % u));\n    }\n\n    /* c) Treating I as a concatenation I0, I1, ..., Ik-1 of v-byte blocks,\n          where k=ceil(s / v) + ceil(p / v), modify I by setting\n          Ij=(Ij+B+1) mod 2v for each j.  */\n    var k = Math.ceil(s / v) + Math.ceil(p / v);\n    var Inew = new forge.util.ByteBuffer();\n    for(j = 0; j < k; j ++) {\n      var chunk = new forge.util.ByteBuffer(I.getBytes(v));\n      var x = 0x1ff;\n      for(l = B.length() - 1; l >= 0; l --) {\n        x = x >> 8;\n        x += B.at(l) + chunk.at(l);\n        chunk.setAt(l, x & 0xff);\n      }\n      Inew.putBuffer(chunk);\n    }\n    I = Inew;\n\n    /* Add Ai to A. */\n    result.putBuffer(buf);\n  }\n\n  result.truncate(result.length() - n);\n  return result;\n};\n\n/**\n * Get new Forge cipher object instance.\n *\n * @param oid the OID (in string notation).\n * @param params the ASN.1 params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipher = function(oid, params, password) {\n  switch(oid) {\n  case pki.oids['pkcs5PBES2']:\n    return pki.pbe.getCipherForPBES2(oid, params, password);\n\n  case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n  case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n    return pki.pbe.getCipherForPKCS12PBE(oid, params, password);\n\n  default:\n    var error = new Error('Cannot read encrypted PBE data block. Unsupported OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'pkcs5PBES2',\n      'pbeWithSHAAnd3-KeyTripleDES-CBC',\n      'pbewithSHAAnd40BitRC2-CBC'\n    ];\n    throw error;\n  }\n};\n\n/**\n * Get new Forge cipher object instance according to PBES2 params block.\n *\n * The returned cipher instance is already started using the IV\n * from PBES2 parameter block.\n *\n * @param oid the PKCS#5 PBKDF2 OID (in string notation).\n * @param params the ASN.1 PBES2-params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipherForPBES2 = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, PBES2AlgorithmsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // check oids\n  oid = asn1.derToOid(capture.kdfOid);\n  if(oid !== pki.oids['pkcs5PBKDF2']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported key derivation function OID.');\n    error.oid = oid;\n    error.supportedOids = ['pkcs5PBKDF2'];\n    throw error;\n  }\n  oid = asn1.derToOid(capture.encOid);\n  if(oid !== pki.oids['aes128-CBC'] &&\n    oid !== pki.oids['aes192-CBC'] &&\n    oid !== pki.oids['aes256-CBC'] &&\n    oid !== pki.oids['des-EDE3-CBC'] &&\n    oid !== pki.oids['desCBC']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported encryption scheme OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'aes128-CBC', 'aes192-CBC', 'aes256-CBC', 'des-EDE3-CBC', 'desCBC'];\n    throw error;\n  }\n\n  // set PBE params\n  var salt = capture.kdfSalt;\n  var count = forge.util.createBuffer(capture.kdfIterationCount);\n  count = count.getInt(count.length() << 3);\n  var dkLen;\n  var cipherFn;\n  switch(pki.oids[oid]) {\n  case 'aes128-CBC':\n    dkLen = 16;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes192-CBC':\n    dkLen = 24;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes256-CBC':\n    dkLen = 32;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'des-EDE3-CBC':\n    dkLen = 24;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  case 'desCBC':\n    dkLen = 8;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n\n  // decrypt private key using pbe with chosen PRF and AES/DES\n  var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n  var iv = capture.encIv;\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n\n  return cipher;\n};\n\n/**\n * Get new Forge cipher object instance for PKCS#12 PBE.\n *\n * The returned cipher instance is already started using the key & IV\n * derived from the provided password and PKCS#12 PBE salt.\n *\n * @param oid The PKCS#12 PBE OID (in string notation).\n * @param params The ASN.1 PKCS#12 PBE-params object.\n * @param password The password to decrypt with.\n *\n * @return the new cipher object instance.\n */\npki.pbe.getCipherForPKCS12PBE = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, pkcs12PbeParamsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var salt = forge.util.createBuffer(capture.salt);\n  var count = forge.util.createBuffer(capture.iterations);\n  count = count.getInt(count.length() << 3);\n\n  var dkLen, dIvLen, cipherFn;\n  switch(oid) {\n    case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n      dkLen = 24;\n      dIvLen = 8;\n      cipherFn = forge.des.startDecrypting;\n      break;\n\n    case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n      dkLen = 5;\n      dIvLen = 8;\n      cipherFn = function(key, iv) {\n        var cipher = forge.rc2.createDecryptionCipher(key, 40);\n        cipher.start(iv, null);\n        return cipher;\n      };\n      break;\n\n    default:\n      var error = new Error('Cannot read PKCS #12 PBE data block. Unsupported OID.');\n      error.oid = oid;\n      throw error;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n  var key = pki.pbe.generatePkcs12Key(password, salt, 1, count, dkLen, md);\n  md.start();\n  var iv = pki.pbe.generatePkcs12Key(password, salt, 2, count, dIvLen, md);\n\n  return cipherFn(key, iv);\n};\n\n/**\n * OpenSSL's legacy key derivation function.\n *\n * See: http://www.openssl.org/docs/crypto/EVP_BytesToKey.html\n *\n * @param password the password to derive the key from.\n * @param salt the salt to use, null for none.\n * @param dkLen the number of bytes needed for the derived key.\n * @param [options] the options to use:\n *          [md] an optional message digest object to use.\n */\npki.pbe.opensslDeriveBytes = function(password, salt, dkLen, md) {\n  if(typeof md === 'undefined' || md === null) {\n    md = forge.md.md5.create();\n  }\n  if(salt === null) {\n    salt = '';\n  }\n  var digests = [hash(md, password + salt)];\n  for(var length = 16, i = 1; length < dkLen; ++i, length += 16) {\n    digests.push(hash(md, digests[i - 1] + password + salt));\n  }\n  return digests.join('').substr(0, dkLen);\n};\n\nfunction hash(md, bytes) {\n  return md.start().update(bytes).digest().getBytes();\n}\n\nfunction prfOidToMessageDigest(prfOid) {\n  // get PRF algorithm, default to SHA-1\n  var prfAlgorithm;\n  if(!prfOid) {\n    prfAlgorithm = 'hmacWithSHA1';\n  } else {\n    prfAlgorithm = pki.oids[asn1.derToOid(prfOid)];\n    if(!prfAlgorithm) {\n      var error = new Error('Unsupported PRF OID.');\n      error.oid = prfOid;\n      error.supported = [\n        'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n        'hmacWithSHA512'];\n      throw error;\n    }\n  }\n  return prfAlgorithmToMessageDigest(prfAlgorithm);\n}\n\nfunction prfAlgorithmToMessageDigest(prfAlgorithm) {\n  var factory = forge.md;\n  switch(prfAlgorithm) {\n  case 'hmacWithSHA224':\n    factory = forge.md.sha512;\n  case 'hmacWithSHA1':\n  case 'hmacWithSHA256':\n  case 'hmacWithSHA384':\n  case 'hmacWithSHA512':\n    prfAlgorithm = prfAlgorithm.substr(8).toLowerCase();\n    break;\n  default:\n    var error = new Error('Unsupported PRF algorithm.');\n    error.algorithm = prfAlgorithm;\n    error.supported = [\n      'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n      'hmacWithSHA512'];\n    throw error;\n  }\n  return factory[prfAlgorithm].create();\n}\n\nfunction createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm) {\n  var params = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // salt\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n    // iteration count\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      countBytes.getBytes())\n  ]);\n  // when PRF algorithm is not SHA-1 default, add key length and PRF algorithm\n  if(prfAlgorithm !== 'hmacWithSHA1') {\n    params.value.push(\n      // key length\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(dkLen.toString(16))),\n      // AlgorithmIdentifier\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // algorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids[prfAlgorithm]).getBytes()),\n        // parameters (null)\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n      ]));\n  }\n  return params;\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'pbe';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/pbe',[\n  'require',\n  'module',\n  './aes',\n  './asn1',\n  './des',\n  './md',\n  './oids',\n  './pem',\n  './pbkdf2',\n  './random',\n  './rc2',\n  './rsa',\n  './util'\n], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'pkcs7asn1';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/pkcs7asn1',['require', 'module', './asn1', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'mgf1';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/mgf1',['require', 'module', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nforge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'mgf';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/mgf',['require', 'module', './mgf1'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// shortcut for PSS API\nvar pss = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i ++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i ++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i ++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'pss';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/pss',['require', 'module', './random', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n      // SubjectPublicKeyInfo\n      publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        capture: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        capture: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    capture: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'CertificationRequest.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'CertificationRequest.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'csrSignatureOid'\n    }, {\n      name: 'CertificationRequest.signatureAlgorithm.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'csrSignatureParams'\n    }]\n  }, {\n    // signature\n    name: 'CertificationRequest.signature',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    capture: 'csrSignature'\n  }]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error('Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n  case 'RSAPublicKey':\n    bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n    break;\n  case 'SubjectPublicKeyInfo':\n    bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n    break;\n  default:\n    throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error('The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = issuer.attributes;\n      error.actualIssuer = subject.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // check signature OID for supported signature types\n      if(child.signatureOid in oids) {\n        var oid = oids[child.signatureOid];\n        switch(oid) {\n        case 'sha1WithRSAEncryption':\n          md = forge.md.sha1.create();\n          break;\n        case 'md5WithRSAEncryption':\n          md = forge.md.md5.create();\n          break;\n        case 'sha256WithRSAEncryption':\n          md = forge.md.sha256.create();\n          break;\n        case 'sha512WithRSAEncryption':\n          md = forge.md.sha512.create();\n          break;\n        case 'RSASSA-PSS':\n          md = forge.md.sha256.create();\n          break;\n        }\n      }\n      if(md === null) {\n        var error = new Error('Could not compute certificate digest. ' +\n          'Unknown signature OID.');\n        error.signatureOid = child.signatureOid;\n        throw error;\n      }\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      var scheme;\n\n      switch(child.signatureOid) {\n      case oids.sha1WithRSAEncryption:\n        scheme = undefined;  /* use PKCS#1 v1.5 padding scheme */\n        break;\n      case oids['RSASSA-PSS']:\n        var hash, mgf;\n\n        /* initialize mgf */\n        hash = oids[child.signatureParameters.mgf.hash.algorithmOid];\n        if(hash === undefined || forge.md[hash] === undefined) {\n          var error = new Error('Unsupported MGF hash function.');\n          error.oid = child.signatureParameters.mgf.hash.algorithmOid;\n          error.name = hash;\n          throw error;\n        }\n\n        mgf = oids[child.signatureParameters.mgf.algorithmOid];\n        if(mgf === undefined || forge.mgf[mgf] === undefined) {\n          var error = new Error('Unsupported MGF function.');\n          error.oid = child.signatureParameters.mgf.algorithmOid;\n          error.name = mgf;\n          throw error;\n        }\n\n        mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n        /* initialize hash function */\n        hash = oids[child.signatureParameters.hash.algorithmOid];\n        if(hash === undefined || forge.md[hash] === undefined) {\n          throw {\n            message: 'Unsupported RSASSA-PSS hash function.',\n            oid: child.signatureParameters.hash.algorithmOid,\n            name: hash\n          };\n        }\n\n        scheme = forge.pss.create(forge.md[hash].create(), mgf,\n          child.signatureParameters.saltLength);\n        break;\n      }\n\n      // verify signature on cert using public key\n      rval = cert.publicKey.verify(\n        md.digest().getBytes(), child.signature, scheme);\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // ensure signature is not interpreted as an embedded ASN.1 object\n  if(typeof capture.certSignature !== 'string') {\n    var certSignature = '\\x00';\n    for(var i = 0; i < capture.certSignature.length; ++i) {\n      certSignature += asn1.toDer(capture.certSignature[i]).getBytes();\n    }\n    capture.certSignature = certSignature;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids['rsaEncryption']) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  // skip \"unused bits\" in signature value BITSTRING\n  var signature = forge.util.createBuffer(capture.certSignature);\n  ++signature.read;\n  cert.signature = signature.getBytes();\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // check signature OID for supported signature types\n    cert.md = null;\n    if(cert.signatureOid in oids) {\n      var oid = oids[cert.signatureOid];\n      switch(oid) {\n      case 'sha1WithRSAEncryption':\n        cert.md = forge.md.sha1.create();\n        break;\n      case 'md5WithRSAEncryption':\n        cert.md = forge.md.md5.create();\n        break;\n      case 'sha256WithRSAEncryption':\n        cert.md = forge.md.sha256.create();\n        break;\n      case 'sha512WithRSAEncryption':\n        cert.md = forge.md.sha512.create();\n        break;\n      case 'RSASSA-PSS':\n        cert.md = forge.md.sha256.create();\n        break;\n      }\n    }\n    if(cert.md === null) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = cert.signatureOid;\n      throw error;\n    }\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer, imd);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject, smd);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n        // rfc822Name\n        case 1:\n        // dNSName\n        case 2:\n        // uniformResourceIdentifier (URI)\n        case 6:\n          break;\n        // IPAddress\n        case 7:\n          // convert to IPv4/IPv6 string representation\n          altName.ip = forge.util.bytesToIP(gn.value);\n          break;\n        // registeredID\n        case 8:\n          altName.oid = asn1.derToOid(gn.value);\n          break;\n        default:\n          // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // ensure signature is not interpreted as an embedded ASN.1 object\n  if(typeof capture.csrSignature !== 'string') {\n    var csrSignature = '\\x00';\n    for(var i = 0; i < capture.csrSignature.length; ++i) {\n      csrSignature += asn1.toDer(capture.csrSignature[i]).getBytes();\n    }\n    capture.csrSignature = csrSignature;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  // skip \"unused bits\" in signature value BITSTRING\n  var signature = forge.util.createBuffer(capture.csrSignature);\n  ++signature.read;\n  csr.signature = signature.getBytes();\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // check signature OID for supported signature types\n    csr.md = null;\n    if(csr.signatureOid in oids) {\n      var oid = oids[csr.signatureOid];\n      switch(oid) {\n      case 'sha1WithRSAEncryption':\n        csr.md = forge.md.sha1.create();\n        break;\n      case 'md5WithRSAEncryption':\n        csr.md = forge.md.md5.create();\n        break;\n      case 'sha256WithRSAEncryption':\n        csr.md = forge.md.sha256.create();\n        break;\n      case 'sha512WithRSAEncryption':\n        csr.md = forge.md.sha512.create();\n        break;\n      case 'RSASSA-PSS':\n        csr.md = forge.md.sha256.create();\n        break;\n      }\n    }\n    if(csr.md === null) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = csr.signatureOid;\n      throw error;\n    }\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      // check signature OID for supported signature types\n      if(csr.signatureOid in oids) {\n        // TODO: create DRY `OID to md` function\n        var oid = oids[csr.signatureOid];\n        switch(oid) {\n        case 'sha1WithRSAEncryption':\n          md = forge.md.sha1.create();\n          break;\n        case 'md5WithRSAEncryption':\n          md = forge.md.md5.create();\n          break;\n        case 'sha256WithRSAEncryption':\n          md = forge.md.sha256.create();\n          break;\n        case 'sha512WithRSAEncryption':\n          md = forge.md.sha512.create();\n          break;\n        case 'RSASSA-PSS':\n          md = forge.md.sha256.create();\n          break;\n        }\n      }\n      if(md === null) {\n        var error = new Error('Could not compute certification request digest. ' +\n          'Unknown signature OID.');\n        error.signatureOid = csr.signatureOid;\n        throw error;\n      }\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      var scheme;\n\n      switch(csr.signatureOid) {\n      case oids.sha1WithRSAEncryption:\n        /* use PKCS#1 v1.5 padding scheme */\n        break;\n      case oids['RSASSA-PSS']:\n        var hash, mgf;\n\n        /* initialize mgf */\n        hash = oids[csr.signatureParameters.mgf.hash.algorithmOid];\n        if(hash === undefined || forge.md[hash] === undefined) {\n          var error = new Error('Unsupported MGF hash function.');\n          error.oid = csr.signatureParameters.mgf.hash.algorithmOid;\n          error.name = hash;\n          throw error;\n        }\n\n        mgf = oids[csr.signatureParameters.mgf.algorithmOid];\n        if(mgf === undefined || forge.mgf[mgf] === undefined) {\n          var error = new Error('Unsupported MGF function.');\n          error.oid = csr.signatureParameters.mgf.algorithmOid;\n          error.name = mgf;\n          throw error;\n        }\n\n        mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n        /* initialize hash function */\n        hash = oids[csr.signatureParameters.hash.algorithmOid];\n        if(hash === undefined || forge.md[hash] === undefined) {\n          var error = new Error('Unsupported RSASSA-PSS hash function.');\n          error.oid = csr.signatureParameters.hash.algorithmOid;\n          error.name = hash;\n          throw error;\n        }\n\n        scheme = forge.pss.create(forge.md[hash].create(), mgf,\n          csr.signatureParameters.saltLength);\n        break;\n      }\n\n      // verify signature on csr using its public key\n      rval = csr.publicKey.verify(\n        md.digest().getBytes(), csr.signature, scheme);\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if (e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n  case oids['RSASSA-PSS']:\n    var parts = [];\n\n    if(params.hash.algorithmOid !== undefined) {\n      parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ])\n      ]));\n    }\n\n    if(params.mgf.algorithmOid !== undefined) {\n      parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ])\n      ]));\n    }\n\n    if(params.saltLength !== undefined) {\n      parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          asn1.integerToDer(params.saltLength).getBytes())\n      ]));\n    }\n\n    return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n  default:\n    return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // notBefore\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(cert.validity.notBefore)),\n      // notAfter\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(cert.validity.notAfter))\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) {  // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes =  pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param verify called for every certificate in the chain.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, verify) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  // get current date\n  var now = new Date();\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    // 1. check valid time\n    if(now < cert.validity.notBefore || now > cert.validity.notAfter) {\n      error = {\n        message: 'Certificate is not valid yet or has expired.',\n        error: pki.certificateError.certificate_expired,\n        notBefore: cert.validity.notBefore,\n        notAfter: cert.validity.notAfter,\n        now: now\n      };\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = verify ? verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n             error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'x509';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge.pki;\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/x509',[\n  'require',\n  'module',\n  './aes',\n  './asn1',\n  './des',\n  './md',\n  './mgf',\n  './oids',\n  './pem',\n  './pss',\n  './rsa',\n  './util'\n], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Javascript implementation of PKCS#12.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#12 is as follows\n * (see ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12-tc1.pdf for details)\n *\n * PFX ::= SEQUENCE {\n *   version  INTEGER {v3(3)}(v3,...),\n *   authSafe ContentInfo,\n *   macData  MacData OPTIONAL\n * }\n *\n * MacData ::= SEQUENCE {\n *   mac DigestInfo,\n *   macSalt OCTET STRING,\n *   iterations INTEGER DEFAULT 1\n * }\n * Note: The iterations default is for historical reasons and its use is\n * deprecated. A higher value, like 1024, is recommended.\n *\n * DigestInfo is defined in PKCS#7 as follows:\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of SHA1 there is none.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * Digest ::= OCTET STRING\n *\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType ContentType,\n *   content     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n * -- Data if unencrypted\n * -- EncryptedData if password-encrypted\n * -- EnvelopedData if public key-encrypted\n *\n *\n * SafeContents ::= SEQUENCE OF SafeBag\n *\n * SafeBag ::= SEQUENCE {\n *   bagId     BAG-TYPE.&id ({PKCS12BagSet})\n *   bagValue  [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n *   bagAttributes SET OF PKCS12Attribute OPTIONAL\n * }\n *\n * PKCS12Attribute ::= SEQUENCE {\n *   attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n *   attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n * } -- This type is compatible with the X.500 type ’Attribute’\n *\n * PKCS12AttrSet ATTRIBUTE ::= {\n *   friendlyName | -- from PKCS #9\n *   localKeyId, -- from PKCS #9\n *   ... -- Other attributes are allowed\n * }\n *\n * CertBag ::= SEQUENCE {\n *   certId    BAG-TYPE.&id   ({CertTypes}),\n *   certValue [0] EXPLICIT BAG-TYPE.&Type ({CertTypes}{@certId})\n * }\n *\n * x509Certificate BAG-TYPE ::= {OCTET STRING IDENTIFIED BY {certTypes 1}}\n *   -- DER-encoded X.509 certificate stored in OCTET STRING\n *\n * sdsiCertificate BAG-TYPE ::= {IA5String IDENTIFIED BY {certTypes 2}}\n * -- Base64-encoded SDSI certificate stored in IA5String\n *\n * CertTypes BAG-TYPE ::= {\n *   x509Certificate |\n *   sdsiCertificate,\n *   ... -- For future extensions\n * }\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// shortcut for asn.1 & PKI API\nvar asn1 = forge.asn1;\nvar pki = forge.pki;\n\n// shortcut for PKCS#12 API\nvar p12 = forge.pkcs12 = forge.pkcs12 || {};\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,  // a ContentInfo\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'content'\n  }]\n};\n\nvar pfxValidator = {\n  name: 'PFX',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PFX.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  },\n  contentInfoValidator, {\n    name: 'PFX.macData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'mac',\n    value: [{\n      name: 'PFX.macData.mac',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,  // DigestInfo\n      constructed: true,\n      value: [{\n        name: 'PFX.macData.mac.digestAlgorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,  // DigestAlgorithmIdentifier\n        constructed: true,\n        value: [{\n          name: 'PFX.macData.mac.digestAlgorithm.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'macAlgorithm'\n        }, {\n          name: 'PFX.macData.mac.digestAlgorithm.parameters',\n          tagClass: asn1.Class.UNIVERSAL,\n          captureAsn1: 'macAlgorithmParameters'\n        }]\n      }, {\n        name: 'PFX.macData.mac.digest',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'macDigest'\n      }]\n    }, {\n      name: 'PFX.macData.macSalt',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'macSalt'\n    }, {\n      name: 'PFX.macData.iterations',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      optional: true,\n      capture: 'macIterations'\n    }]\n  }]\n};\n\nvar safeBagValidator = {\n  name: 'SafeBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SafeBag.bagId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'bagId'\n  }, {\n    name: 'SafeBag.bagValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'bagValue'\n  }, {\n    name: 'SafeBag.bagAttributes',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    optional: true,\n    capture: 'bagAttributes'\n  }]\n};\n\nvar attributeValidator = {\n  name: 'Attribute',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Attribute.attrId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'oid'\n  }, {\n    name: 'Attribute.attrValues',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    capture: 'values'\n  }]\n};\n\nvar certBagValidator = {\n  name: 'CertBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'CertBag.certId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'certId'\n  }, {\n    name: 'CertBag.certValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    /* So far we only support X.509 certificates (which are wrapped in\n       an OCTET STRING, hence hard code that here). */\n    value: [{\n      name: 'CertBag.certValue[0]',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.OCTETSTRING,\n      constructed: false,\n      capture: 'cert'\n    }]\n  }]\n};\n\n/**\n * Search SafeContents structure for bags with matching attributes.\n *\n * The search can optionally be narrowed by a certain bag type.\n *\n * @param safeContents the SafeContents structure to search in.\n * @param attrName the name of the attribute to compare against.\n * @param attrValue the attribute value to search for.\n * @param [bagType] bag type to narrow search by.\n *\n * @return an array of matching bags.\n */\nfunction _getBagsByAttribute(safeContents, attrName, attrValue, bagType) {\n  var result = [];\n\n  for(var i = 0; i < safeContents.length; i ++) {\n    for(var j = 0; j < safeContents[i].safeBags.length; j ++) {\n      var bag = safeContents[i].safeBags[j];\n      if(bagType !== undefined && bag.type !== bagType) {\n        continue;\n      }\n      // only filter by bag type, no attribute specified\n      if(attrName === null) {\n        result.push(bag);\n        continue;\n      }\n      if(bag.attributes[attrName] !== undefined &&\n        bag.attributes[attrName].indexOf(attrValue) >= 0) {\n        result.push(bag);\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Converts a PKCS#12 PFX in ASN.1 notation into a PFX object.\n *\n * @param obj The PKCS#12 PFX in ASN.1 notation.\n * @param strict true to use strict DER decoding, false not to (default: true).\n * @param {String} password Password to decrypt with (optional).\n *\n * @return PKCS#12 PFX object.\n */\np12.pkcs12FromAsn1 = function(obj, strict, password) {\n  // handle args\n  if(typeof strict === 'string') {\n    password = strict;\n    strict = true;\n  } else if(strict === undefined) {\n    strict = true;\n  }\n\n  // validate PFX and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, pfxValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#12 PFX. ' +\n      'ASN.1 object is not an PKCS#12 PFX.');\n    error.errors = error;\n    throw error;\n  }\n\n  var pfx = {\n    version: capture.version.charCodeAt(0),\n    safeContents: [],\n\n    /**\n     * Gets bags with matching attributes.\n     *\n     * @param filter the attributes to filter by:\n     *          [localKeyId] the localKeyId to search for.\n     *          [localKeyIdHex] the localKeyId in hex to search for.\n     *          [friendlyName] the friendly name to search for.\n     *          [bagType] bag type to narrow each attribute search by.\n     *\n     * @return a map of attribute type to an array of matching bags or, if no\n     *           attribute was given but a bag type, the map key will be the\n     *           bag type.\n     */\n    getBags: function(filter) {\n      var rval = {};\n\n      var localKeyId;\n      if('localKeyId' in filter) {\n        localKeyId = filter.localKeyId;\n      } else if('localKeyIdHex' in filter) {\n        localKeyId = forge.util.hexToBytes(filter.localKeyIdHex);\n      }\n\n      // filter on bagType only\n      if(localKeyId === undefined && !('friendlyName' in filter) &&\n        'bagType' in filter) {\n        rval[filter.bagType] = _getBagsByAttribute(\n          pfx.safeContents, null, null, filter.bagType);\n      }\n\n      if(localKeyId !== undefined) {\n        rval.localKeyId = _getBagsByAttribute(\n          pfx.safeContents, 'localKeyId',\n          localKeyId, filter.bagType);\n      }\n      if('friendlyName' in filter) {\n        rval.friendlyName = _getBagsByAttribute(\n          pfx.safeContents, 'friendlyName',\n          filter.friendlyName, filter.bagType);\n      }\n\n      return rval;\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching friendlyName attribute.\n     *\n     * @param friendlyName the friendly name to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching friendlyName attribute.\n     */\n    getBagsByFriendlyName: function(friendlyName, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'friendlyName', friendlyName, bagType);\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching localKeyId attribute.\n     *\n     * @param localKeyId the localKeyId to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching localKeyId attribute.\n     */\n    getBagsByLocalKeyId: function(localKeyId, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'localKeyId', localKeyId, bagType);\n    }\n  };\n\n  if(capture.version.charCodeAt(0) !== 3) {\n    var error = new Error('PKCS#12 PFX of version other than 3 not supported.');\n    error.version = capture.version.charCodeAt(0);\n    throw error;\n  }\n\n  if(asn1.derToOid(capture.contentType) !== pki.oids.data) {\n    var error = new Error('Only PKCS#12 PFX in password integrity mode supported.');\n    error.oid = asn1.derToOid(capture.contentType);\n    throw error;\n  }\n\n  var data = capture.content.value[0];\n  if(data.tagClass !== asn1.Class.UNIVERSAL ||\n     data.type !== asn1.Type.OCTETSTRING) {\n    throw new Error('PKCS#12 authSafe content data is not an OCTET STRING.');\n  }\n  data = _decodePkcs7Data(data);\n\n  // check for MAC\n  if(capture.mac) {\n    var md = null;\n    var macKeyBytes = 0;\n    var macAlgorithm = asn1.derToOid(capture.macAlgorithm);\n    switch(macAlgorithm) {\n    case pki.oids.sha1:\n      md = forge.md.sha1.create();\n      macKeyBytes = 20;\n      break;\n    case pki.oids.sha256:\n      md = forge.md.sha256.create();\n      macKeyBytes = 32;\n      break;\n    case pki.oids.sha384:\n      md = forge.md.sha384.create();\n      macKeyBytes = 48;\n      break;\n    case pki.oids.sha512:\n      md = forge.md.sha512.create();\n      macKeyBytes = 64;\n      break;\n    case pki.oids.md5:\n      md = forge.md.md5.create();\n      macKeyBytes = 16;\n      break;\n    }\n    if(md === null) {\n      throw new Error('PKCS#12 uses unsupported MAC algorithm: ' + macAlgorithm);\n    }\n\n    // verify MAC (iterations default to 1)\n    var macSalt = new forge.util.ByteBuffer(capture.macSalt);\n    var macIterations = (('macIterations' in capture) ?\n      parseInt(forge.util.bytesToHex(capture.macIterations), 16) : 1);\n    var macKey = p12.generateKey(\n      password, macSalt, 3, macIterations, macKeyBytes, md);\n    var mac = forge.hmac.create();\n    mac.start(md, macKey);\n    mac.update(data.value);\n    var macValue = mac.getMac();\n    if(macValue.getBytes() !== capture.macDigest) {\n      throw new Error('PKCS#12 MAC could not be verified. Invalid password?');\n    }\n  }\n\n  _decodeAuthenticatedSafe(pfx, data.value, strict, password);\n  return pfx;\n};\n\n/**\n * Decodes PKCS#7 Data. PKCS#7 (RFC 2315) defines \"Data\" as an OCTET STRING,\n * but it is sometimes an OCTET STRING that is composed/constructed of chunks,\n * each its own OCTET STRING. This is BER-encoding vs. DER-encoding. This\n * function transforms this corner-case into the usual simple,\n * non-composed/constructed OCTET STRING.\n *\n * This function may be moved to ASN.1 at some point to better deal with\n * more BER-encoding issues, should they arise.\n *\n * @param data the ASN.1 Data object to transform.\n */\nfunction _decodePkcs7Data(data) {\n  // handle special case of \"chunked\" data content: an octet string composed\n  // of other octet strings\n  if(data.composed || data.constructed) {\n    var value = forge.util.createBuffer();\n    for(var i = 0; i < data.value.length; ++i) {\n      value.putBytes(data.value[i].value);\n    }\n    data.composed = data.constructed = false;\n    data.value = value.getBytes();\n  }\n  return data;\n}\n\n/**\n * Decode PKCS#12 AuthenticatedSafe (BER encoded) into PFX object.\n *\n * The AuthenticatedSafe is a BER-encoded SEQUENCE OF ContentInfo.\n *\n * @param pfx The PKCS#12 PFX object to fill.\n * @param {String} authSafe BER-encoded AuthenticatedSafe.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n */\nfunction _decodeAuthenticatedSafe(pfx, authSafe, strict, password) {\n  authSafe = asn1.fromDer(authSafe, strict);  /* actually it's BER encoded */\n\n  if(authSafe.tagClass !== asn1.Class.UNIVERSAL ||\n     authSafe.type !== asn1.Type.SEQUENCE ||\n     authSafe.constructed !== true) {\n    throw new Error('PKCS#12 AuthenticatedSafe expected to be a ' +\n      'SEQUENCE OF ContentInfo');\n  }\n\n  for(var i = 0; i < authSafe.value.length; i ++) {\n    var contentInfo = authSafe.value[i];\n\n    // validate contentInfo and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(contentInfo, contentInfoValidator, capture, errors)) {\n      var error = new Error('Cannot read ContentInfo.');\n      error.errors = errors;\n      throw error;\n    }\n\n    var obj = {\n      encrypted: false\n    };\n    var safeContents = null;\n    var data = capture.content.value[0];\n    switch(asn1.derToOid(capture.contentType)) {\n    case pki.oids.data:\n      if(data.tagClass !== asn1.Class.UNIVERSAL ||\n         data.type !== asn1.Type.OCTETSTRING) {\n        throw new Error('PKCS#12 SafeContents Data is not an OCTET STRING.');\n      }\n      safeContents = _decodePkcs7Data(data).value;\n      break;\n    case pki.oids.encryptedData:\n      safeContents = _decryptSafeContents(data, password);\n      obj.encrypted = true;\n      break;\n    default:\n      var error = new Error('Unsupported PKCS#12 contentType.');\n      error.contentType = asn1.derToOid(capture.contentType);\n      throw error;\n    }\n\n    obj.safeBags = _decodeSafeContents(safeContents, strict, password);\n    pfx.safeContents.push(obj);\n  }\n}\n\n/**\n * Decrypt PKCS#7 EncryptedData structure.\n *\n * @param data ASN.1 encoded EncryptedContentInfo object.\n * @param password The user-provided password.\n *\n * @return The decrypted SafeContents (ASN.1 object).\n */\nfunction _decryptSafeContents(data, password) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(\n    data, forge.pkcs7.asn1.encryptedDataValidator, capture, errors)) {\n    var error = new Error('Cannot read EncryptedContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var oid = asn1.derToOid(capture.contentType);\n  if(oid !== pki.oids.data) {\n    var error = new Error(\n      'PKCS#12 EncryptedContentInfo ContentType is not Data.');\n    error.oid = oid;\n    throw error;\n  }\n\n  // get cipher\n  oid = asn1.derToOid(capture.encAlgorithm);\n  var cipher = pki.pbe.getCipher(oid, capture.encParameter, password);\n\n  // get encrypted data\n  var encryptedContentAsn1 = _decodePkcs7Data(capture.encryptedContentAsn1);\n  var encrypted = forge.util.createBuffer(encryptedContentAsn1.value);\n\n  cipher.update(encrypted);\n  if(!cipher.finish()) {\n    throw new Error('Failed to decrypt PKCS#12 SafeContents.');\n  }\n\n  return cipher.output.getBytes();\n}\n\n/**\n * Decode PKCS#12 SafeContents (BER-encoded) into array of Bag objects.\n *\n * The safeContents is a BER-encoded SEQUENCE OF SafeBag.\n *\n * @param {String} safeContents BER-encoded safeContents.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n *\n * @return {Array} Array of Bag objects.\n */\nfunction _decodeSafeContents(safeContents, strict, password) {\n  // if strict and no safe contents, return empty safes\n  if(!strict && safeContents.length === 0) {\n    return [];\n  }\n\n  // actually it's BER-encoded\n  safeContents = asn1.fromDer(safeContents, strict);\n\n  if(safeContents.tagClass !== asn1.Class.UNIVERSAL ||\n    safeContents.type !== asn1.Type.SEQUENCE ||\n    safeContents.constructed !== true) {\n    throw new Error(\n      'PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.');\n  }\n\n  var res = [];\n  for(var i = 0; i < safeContents.value.length; i++) {\n    var safeBag = safeContents.value[i];\n\n    // validate SafeBag and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(safeBag, safeBagValidator, capture, errors)) {\n      var error = new Error('Cannot read SafeBag.');\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Create bag object and push to result array. */\n    var bag = {\n      type: asn1.derToOid(capture.bagId),\n      attributes: _decodeBagAttributes(capture.bagAttributes)\n    };\n    res.push(bag);\n\n    var validator, decoder;\n    var bagAsn1 = capture.bagValue.value[0];\n    switch(bag.type) {\n      case pki.oids.pkcs8ShroudedKeyBag:\n        /* bagAsn1 has a EncryptedPrivateKeyInfo, which we need to decrypt.\n           Afterwards we can handle it like a keyBag,\n           which is a PrivateKeyInfo. */\n        bagAsn1 = pki.decryptPrivateKeyInfo(bagAsn1, password);\n        if(bagAsn1 === null) {\n          throw new Error(\n            'Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?');\n        }\n\n        /* fall through */\n      case pki.oids.keyBag:\n        /* A PKCS#12 keyBag is a simple PrivateKeyInfo as understood by our\n           PKI module, hence we don't have to do validation/capturing here,\n           just pass what we already got. */\n        try {\n          bag.key = pki.privateKeyFromAsn1(bagAsn1);\n        } catch(e) {\n          // ignore unknown key type, pass asn1 value\n          bag.key = null;\n          bag.asn1 = bagAsn1;\n        }\n        continue;  /* Nothing more to do. */\n\n      case pki.oids.certBag:\n        /* A PKCS#12 certBag can wrap both X.509 and sdsi certificates.\n           Therefore put the SafeBag content through another validator to\n           capture the fields.  Afterwards check & store the results. */\n        validator = certBagValidator;\n        decoder = function() {\n          if(asn1.derToOid(capture.certId) !== pki.oids.x509Certificate) {\n            var error = new Error(\n              'Unsupported certificate type, only X.509 supported.');\n            error.oid = asn1.derToOid(capture.certId);\n            throw error;\n          }\n\n          // true=produce cert hash\n          var certAsn1 = asn1.fromDer(capture.cert, strict);\n          try {\n            bag.cert = pki.certificateFromAsn1(certAsn1, true);\n          } catch(e) {\n            // ignore unknown cert type, pass asn1 value\n            bag.cert = null;\n            bag.asn1 = certAsn1;\n          }\n        };\n        break;\n\n      default:\n        var error = new Error('Unsupported PKCS#12 SafeBag type.');\n        error.oid = bag.type;\n        throw error;\n    }\n\n    /* Validate SafeBag value (i.e. CertBag, etc.) and capture data if needed. */\n    if(validator !== undefined &&\n       !asn1.validate(bagAsn1, validator, capture, errors)) {\n      var error = new Error('Cannot read PKCS#12 ' + validator.name);\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Call decoder function from above to store the results. */\n    decoder();\n  }\n\n  return res;\n}\n\n/**\n * Decode PKCS#12 SET OF PKCS12Attribute into JavaScript object.\n *\n * @param attributes SET OF PKCS12Attribute (ASN.1 object).\n *\n * @return the decoded attributes.\n */\nfunction _decodeBagAttributes(attributes) {\n  var decodedAttrs = {};\n\n  if(attributes !== undefined) {\n    for(var i = 0; i < attributes.length; ++i) {\n      var capture = {};\n      var errors = [];\n      if(!asn1.validate(attributes[i], attributeValidator, capture, errors)) {\n        var error = new Error('Cannot read PKCS#12 BagAttribute.');\n        error.errors = errors;\n        throw error;\n      }\n\n      var oid = asn1.derToOid(capture.oid);\n      if(pki.oids[oid] === undefined) {\n        // unsupported attribute type, ignore.\n        continue;\n      }\n\n      decodedAttrs[pki.oids[oid]] = [];\n      for(var j = 0; j < capture.values.length; ++j) {\n        decodedAttrs[pki.oids[oid]].push(capture.values[j].value);\n      }\n    }\n  }\n\n  return decodedAttrs;\n}\n\n/**\n * Wraps a private key and certificate in a PKCS#12 PFX wrapper. If a\n * password is provided then the private key will be encrypted.\n *\n * An entire certificate chain may also be included. To do this, pass\n * an array for the \"cert\" parameter where the first certificate is\n * the one that is paired with the private key and each subsequent one\n * verifies the previous one. The certificates may be in PEM format or\n * have been already parsed by Forge.\n *\n * @todo implement password-based-encryption for the whole package\n *\n * @param key the private key.\n * @param cert the certificate (may be an array of certificates in order\n *          to specify a certificate chain).\n * @param password the password to use, null for none.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          useMac true to include a MAC, false not to, defaults to true.\n *          localKeyId the local key ID to use, in hex.\n *          friendlyName the friendly name to use.\n *          generateLocalKeyId true to generate a random local key ID,\n *            false not to, defaults to true.\n *\n * @return the PKCS#12 PFX ASN.1 object.\n */\np12.toPkcs12Asn1 = function(key, cert, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || options.encAlgorithm || 'aes128';\n  if(!('useMac' in options)) {\n    options.useMac = true;\n  }\n  if(!('localKeyId' in options)) {\n    options.localKeyId = null;\n  }\n  if(!('generateLocalKeyId' in options)) {\n    options.generateLocalKeyId = true;\n  }\n\n  var localKeyId = options.localKeyId;\n  var bagAttrs;\n  if(localKeyId !== null) {\n    localKeyId = forge.util.hexToBytes(localKeyId);\n  } else if(options.generateLocalKeyId) {\n    // use SHA-1 of paired cert, if available\n    if(cert) {\n      var pairedCert = forge.util.isArray(cert) ? cert[0] : cert;\n      if(typeof pairedCert === 'string') {\n        pairedCert = pki.certificateFromPem(pairedCert);\n      }\n      var sha1 = forge.md.sha1.create();\n      sha1.update(asn1.toDer(pki.certificateToAsn1(pairedCert)).getBytes());\n      localKeyId = sha1.digest().getBytes();\n    } else {\n      // FIXME: consider using SHA-1 of public key (which can be generated\n      // from private key components), see: cert.generateSubjectKeyIdentifier\n      // generate random bytes\n      localKeyId = forge.random.getBytes(20);\n    }\n  }\n\n  var attrs = [];\n  if(localKeyId !== null) {\n    attrs.push(\n      // localKeyID\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.localKeyId).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            localKeyId)\n        ])\n      ]));\n  }\n  if('friendlyName' in options) {\n    attrs.push(\n      // friendlyName\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.friendlyName).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BMPSTRING, false,\n            options.friendlyName)\n        ])\n      ]));\n  }\n\n  if(attrs.length > 0) {\n    bagAttrs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, attrs);\n  }\n\n  // collect contents for AuthenticatedSafe\n  var contents = [];\n\n  // create safe bag(s) for certificate chain\n  var chain = [];\n  if(cert !== null) {\n    if(forge.util.isArray(cert)) {\n      chain = cert;\n    } else {\n      chain = [cert];\n    }\n  }\n\n  var certSafeBags = [];\n  for(var i = 0; i < chain.length; ++i) {\n    // convert cert from PEM as necessary\n    cert = chain[i];\n    if(typeof cert === 'string') {\n      cert = pki.certificateFromPem(cert);\n    }\n\n    // SafeBag\n    var certBagAttrs = (i === 0) ? bagAttrs : undefined;\n    var certAsn1 = pki.certificateToAsn1(cert);\n    var certSafeBag =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.certBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // CertBag\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // certId\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(pki.oids.x509Certificate).getBytes()),\n            // certValue (x509Certificate)\n            asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n              asn1.create(\n                asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                asn1.toDer(certAsn1).getBytes())\n            ])])]),\n        // bagAttributes (OPTIONAL)\n        certBagAttrs\n      ]);\n    certSafeBags.push(certSafeBag);\n  }\n\n  if(certSafeBags.length > 0) {\n    // SafeContents\n    var certSafeContents = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, certSafeBags);\n\n    // ContentInfo\n    var certCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(certSafeContents).getBytes())\n        ])\n      ]);\n    contents.push(certCI);\n  }\n\n  // create safe contents for private key\n  var keyBag = null;\n  if(key !== null) {\n    // SafeBag\n    var pkAsn1 = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(key));\n    if(password === null) {\n      // no encryption\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.keyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // PrivateKeyInfo\n          pkAsn1\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    } else {\n      // encrypted PrivateKeyInfo\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.pkcs8ShroudedKeyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // EncryptedPrivateKeyInfo\n          pki.encryptPrivateKeyInfo(pkAsn1, password, options)\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    }\n\n    // SafeContents\n    var keySafeContents =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [keyBag]);\n\n    // ContentInfo\n    var keyCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(keySafeContents).getBytes())\n        ])\n      ]);\n    contents.push(keyCI);\n  }\n\n  // create AuthenticatedSafe by stringing together the contents\n  var safe = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, contents);\n\n  var macData;\n  if(options.useMac) {\n    // MacData\n    var sha1 = forge.md.sha1.create();\n    var macSalt = new forge.util.ByteBuffer(\n      forge.random.getBytes(options.saltSize));\n    var count = options.count;\n    // 160-bit key\n    var key = p12.generateKey(password, macSalt, 3, count, 20);\n    var mac = forge.hmac.create();\n    mac.start(sha1, key);\n    mac.update(asn1.toDer(safe).getBytes());\n    var macValue = mac.getMac();\n    macData = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // mac DigestInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // digestAlgorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm = SHA-1\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(pki.oids.sha1).getBytes()),\n          // parameters = Null\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]),\n        // digest\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n          false, macValue.getBytes())\n      ]),\n      // macSalt OCTET STRING\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, macSalt.getBytes()),\n      // iterations INTEGER (XXX: Only support count < 65536)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(count).getBytes()\n      )\n    ]);\n  }\n\n  // PFX\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (3)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(3).getBytes()),\n    // PKCS#7 ContentInfo\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // contentType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        // OID for the content type is 'data'\n        asn1.oidToDer(pki.oids.data).getBytes()),\n      // content\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          asn1.toDer(safe).getBytes())\n      ])\n    ]),\n    macData\n  ]);\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\np12.generateKey = forge.pbe.generatePkcs12Key;\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'pkcs12';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/pkcs12',[\n  'require',\n  'module',\n  './asn1',\n  './hmac',\n  './oids',\n  './pkcs7asn1',\n  './pbe',\n  './random',\n  './rsa',\n  './sha1',\n  './util',\n  './x509'\n], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Javascript implementation of a basic Public Key Infrastructure, including\n * support for RSA public and private keys.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = forge.pki = forge.pki || {};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED. Use pem.decode() instead.\n *\n * Converts PEM-formatted data to DER.\n *\n * @param pem the PEM-formatted data.\n *\n * @return the DER-formatted data.\n */\npki.pemToDer = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PEM to DER; PEM is encrypted.');\n  }\n  return forge.util.createBuffer(msg.body);\n};\n\n/**\n * Converts an RSA private key from PEM format.\n *\n * @param pem the PEM-formatted private key.\n *\n * @return the private key.\n */\npki.privateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PRIVATE KEY' && msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM ' +\n      'header type is not \"PRIVATE KEY\" or \"RSA PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert private key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.privateKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA private key to PEM format.\n *\n * @param key the private key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    body: asn1.toDer(pki.privateKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PrivateKeyInfo to PEM format.\n *\n * @param pki the PrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyInfoToPem = function(pki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'PRIVATE KEY',\n    body: asn1.toDer(pki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'pki';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/pki',[\n  'require',\n  'module',\n  './asn1',\n  './oids',\n  './pbe',\n  './pem',\n  './pbkdf2',\n  './pkcs12',\n  './pss',\n  './rsa',\n  './util',\n  './x509'\n], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * A Javascript implementation of Transport Layer Security (TLS).\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n *\n * The TLS Handshake Protocol involves the following steps:\n *\n * - Exchange hello messages to agree on algorithms, exchange random values,\n * and check for session resumption.\n *\n * - Exchange the necessary cryptographic parameters to allow the client and\n * server to agree on a premaster secret.\n *\n * - Exchange certificates and cryptographic information to allow the client\n * and server to authenticate themselves.\n *\n * - Generate a master secret from the premaster secret and exchanged random\n * values.\n *\n * - Provide security parameters to the record layer.\n *\n * - Allow the client and server to verify that their peer has calculated the\n * same security parameters and that the handshake occurred without tampering\n * by an attacker.\n *\n * Up to 4 different messages may be sent during a key exchange. The server\n * certificate, the server key exchange, the client certificate, and the\n * client key exchange.\n *\n * A typical handshake (from the client's perspective).\n *\n * 1. Client sends ClientHello.\n * 2. Client receives ServerHello.\n * 3. Client receives optional Certificate.\n * 4. Client receives optional ServerKeyExchange.\n * 5. Client receives ServerHelloDone.\n * 6. Client sends optional Certificate.\n * 7. Client sends ClientKeyExchange.\n * 8. Client sends optional CertificateVerify.\n * 9. Client sends ChangeCipherSpec.\n * 10. Client sends Finished.\n * 11. Client receives ChangeCipherSpec.\n * 12. Client receives Finished.\n * 13. Client sends/receives application data.\n *\n * To reuse an existing session:\n *\n * 1. Client sends ClientHello with session ID for reuse.\n * 2. Client receives ServerHello with same session ID if reusing.\n * 3. Client receives ChangeCipherSpec message if reusing.\n * 4. Client receives Finished.\n * 5. Client sends ChangeCipherSpec.\n * 6. Client sends Finished.\n *\n * Note: Client ignores HelloRequest if in the middle of a handshake.\n *\n * Record Layer:\n *\n * The record layer fragments information blocks into TLSPlaintext records\n * carrying data in chunks of 2^14 bytes or less. Client message boundaries are\n * not preserved in the record layer (i.e., multiple client messages of the\n * same ContentType MAY be coalesced into a single TLSPlaintext record, or a\n * single message MAY be fragmented across several records).\n *\n * struct {\n *   uint8 major;\n *   uint8 minor;\n * } ProtocolVersion;\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   opaque fragment[TLSPlaintext.length];\n * } TLSPlaintext;\n *\n * type:\n *   The higher-level protocol used to process the enclosed fragment.\n *\n * version:\n *   The version of the protocol being employed. TLS Version 1.2 uses version\n *   {3, 3}. TLS Version 1.0 uses version {3, 1}. Note that a client that\n *   supports multiple versions of TLS may not know what version will be\n *   employed before it receives the ServerHello.\n *\n * length:\n *   The length (in bytes) of the following TLSPlaintext.fragment. The length\n *   MUST NOT exceed 2^14 = 16384 bytes.\n *\n * fragment:\n *   The application data. This data is transparent and treated as an\n *   independent block to be dealt with by the higher-level protocol specified\n *   by the type field.\n *\n * Implementations MUST NOT send zero-length fragments of Handshake, Alert, or\n * ChangeCipherSpec content types. Zero-length fragments of Application data\n * MAY be sent as they are potentially useful as a traffic analysis\n * countermeasure.\n *\n * Note: Data of different TLS record layer content types MAY be interleaved.\n * Application data is generally of lower precedence for transmission than\n * other content types. However, records MUST be delivered to the network in\n * the same order as they are protected by the record layer. Recipients MUST\n * receive and process interleaved application layer traffic during handshakes\n * subsequent to the first one on a connection.\n *\n * struct {\n *   ContentType type;       // same as TLSPlaintext.type\n *   ProtocolVersion version;// same as TLSPlaintext.version\n *   uint16 length;\n *   opaque fragment[TLSCompressed.length];\n * } TLSCompressed;\n *\n * length:\n *   The length (in bytes) of the following TLSCompressed.fragment.\n *   The length MUST NOT exceed 2^14 + 1024.\n *\n * fragment:\n *   The compressed form of TLSPlaintext.fragment.\n *\n * Note: A CompressionMethod.null operation is an identity operation; no fields\n * are altered. In this implementation, since no compression is supported,\n * uncompressed records are always the same as compressed records.\n *\n * Encryption Information:\n *\n * The encryption and MAC functions translate a TLSCompressed structure into a\n * TLSCiphertext. The decryption functions reverse the process. The MAC of the\n * record also includes a sequence number so that missing, extra, or repeated\n * messages are detectable.\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   select (SecurityParameters.cipher_type) {\n *     case stream: GenericStreamCipher;\n *     case block:  GenericBlockCipher;\n *     case aead:   GenericAEADCipher;\n *   } fragment;\n * } TLSCiphertext;\n *\n * type:\n *   The type field is identical to TLSCompressed.type.\n *\n * version:\n *   The version field is identical to TLSCompressed.version.\n *\n * length:\n *   The length (in bytes) of the following TLSCiphertext.fragment.\n *   The length MUST NOT exceed 2^14 + 2048.\n *\n * fragment:\n *   The encrypted form of TLSCompressed.fragment, with the MAC.\n *\n * Note: Only CBC Block Ciphers are supported by this implementation.\n *\n * The TLSCompressed.fragment structures are converted to/from block\n * TLSCiphertext.fragment structures.\n *\n * struct {\n *   opaque IV[SecurityParameters.record_iv_length];\n *   block-ciphered struct {\n *     opaque content[TLSCompressed.length];\n *     opaque MAC[SecurityParameters.mac_length];\n *     uint8 padding[GenericBlockCipher.padding_length];\n *     uint8 padding_length;\n *   };\n * } GenericBlockCipher;\n *\n * The MAC is generated as described in Section 6.2.3.1.\n *\n * IV:\n *   The Initialization Vector (IV) SHOULD be chosen at random, and MUST be\n *   unpredictable. Note that in versions of TLS prior to 1.1, there was no\n *   IV field, and the last ciphertext block of the previous record (the \"CBC\n *   residue\") was used as the IV. This was changed to prevent the attacks\n *   described in [CBCATT]. For block ciphers, the IV length is of length\n *   SecurityParameters.record_iv_length, which is equal to the\n *   SecurityParameters.block_size.\n *\n * padding:\n *   Padding that is added to force the length of the plaintext to be an\n *   integral multiple of the block cipher's block length. The padding MAY be\n *   any length up to 255 bytes, as long as it results in the\n *   TLSCiphertext.length being an integral multiple of the block length.\n *   Lengths longer than necessary might be desirable to frustrate attacks on\n *   a protocol that are based on analysis of the lengths of exchanged\n *   messages. Each uint8 in the padding data vector MUST be filled with the\n *   padding length value. The receiver MUST check this padding and MUST use\n *   the bad_record_mac alert to indicate padding errors.\n *\n * padding_length:\n *   The padding length MUST be such that the total size of the\n *   GenericBlockCipher structure is a multiple of the cipher's block length.\n *   Legal values range from zero to 255, inclusive. This length specifies the\n *   length of the padding field exclusive of the padding_length field itself.\n *\n * The encrypted data length (TLSCiphertext.length) is one more than the sum of\n * SecurityParameters.block_length, TLSCompressed.length,\n * SecurityParameters.mac_length, and padding_length.\n *\n * Example: If the block length is 8 bytes, the content length\n * (TLSCompressed.length) is 61 bytes, and the MAC length is 20 bytes, then the\n * length before padding is 82 bytes (this does not include the IV. Thus, the\n * padding length modulo 8 must be equal to 6 in order to make the total length\n * an even multiple of 8 bytes (the block length). The padding length can be\n * 6, 14, 22, and so on, through 254. If the padding length were the minimum\n * necessary, 6, the padding would be 6 bytes, each containing the value 6.\n * Thus, the last 8 octets of the GenericBlockCipher before block encryption\n * would be xx 06 06 06 06 06 06 06, where xx is the last octet of the MAC.\n *\n * Note: With block ciphers in CBC mode (Cipher Block Chaining), it is critical\n * that the entire plaintext of the record be known before any ciphertext is\n * transmitted. Otherwise, it is possible for the attacker to mount the attack\n * described in [CBCATT].\n *\n * Implementation note: Canvel et al. [CBCTIME] have demonstrated a timing\n * attack on CBC padding based on the time required to compute the MAC. In\n * order to defend against this attack, implementations MUST ensure that\n * record processing time is essentially the same whether or not the padding\n * is correct. In general, the best way to do this is to compute the MAC even\n * if the padding is incorrect, and only then reject the packet. For instance,\n * if the pad appears to be incorrect, the implementation might assume a\n * zero-length pad and then compute the MAC. This leaves a small timing\n * channel, since MAC performance depends, to some extent, on the size of the\n * data fragment, but it is not believed to be large enough to be exploitable,\n * due to the large block size of existing MACs and the small size of the\n * timing signal.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n/**\n * Generates pseudo random bytes by mixing the result of two hash functions,\n * MD5 and SHA-1.\n *\n * prf_TLS1(secret, label, seed) =\n *   P_MD5(S1, label + seed) XOR P_SHA-1(S2, label + seed);\n *\n * Each P_hash function functions as follows:\n *\n * P_hash(secret, seed) = HMAC_hash(secret, A(1) + seed) +\n *                        HMAC_hash(secret, A(2) + seed) +\n *                        HMAC_hash(secret, A(3) + seed) + ...\n * A() is defined as:\n *   A(0) = seed\n *   A(i) = HMAC_hash(secret, A(i-1))\n *\n * The '+' operator denotes concatenation.\n *\n * As many iterations A(N) as are needed are performed to generate enough\n * pseudo random byte output. If an iteration creates more data than is\n * necessary, then it is truncated.\n *\n * Therefore:\n * A(1) = HMAC_hash(secret, A(0))\n *      = HMAC_hash(secret, seed)\n * A(2) = HMAC_hash(secret, A(1))\n *      = HMAC_hash(secret, HMAC_hash(secret, seed))\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, A(0)) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, A(1)) + seed) +\n *   ...\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, seed) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, HMAC_hash(secret, seed)) + seed) +\n *   ...\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_TLS1 = function(secret, label, seed, length) {\n  var rval = forge.util.createBuffer();\n\n  /* For TLS 1.0, the secret is split in half, into two secrets of equal\n    length. If the secret has an odd length then the last byte of the first\n    half will be the same as the first byte of the second. The length of the\n    two secrets is half of the secret rounded up. */\n  var idx = (secret.length >> 1);\n  var slen = idx + (secret.length & 1);\n  var s1 = secret.substr(0, slen);\n  var s2 = secret.substr(idx, slen);\n  var ai = forge.util.createBuffer();\n  var hmac = forge.hmac.create();\n  seed = label + seed;\n\n  // determine the number of iterations that must be performed to generate\n  // enough output bytes, md5 creates 16 byte hashes, sha1 creates 20\n  var md5itr = Math.ceil(length / 16);\n  var sha1itr = Math.ceil(length / 20);\n\n  // do md5 iterations\n  hmac.start('MD5', s1);\n  var md5bytes = forge.util.createBuffer();\n  ai.putBytes(seed);\n  for(var i = 0; i < md5itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    md5bytes.putBuffer(hmac.digest());\n  }\n\n  // do sha1 iterations\n  hmac.start('SHA1', s2);\n  var sha1bytes = forge.util.createBuffer();\n  ai.clear();\n  ai.putBytes(seed);\n  for(var i = 0; i < sha1itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    sha1bytes.putBuffer(hmac.digest());\n  }\n\n  // XOR the md5 bytes with the sha1 bytes\n  rval.putBytes(forge.util.xorBytes(\n    md5bytes.getBytes(), sha1bytes.getBytes(), length));\n\n  return rval;\n};\n\n/**\n * Generates pseudo random bytes using a SHA256 algorithm. For TLS 1.2.\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_sha256 = function(secret, label, seed, length) {\n   // FIXME: implement me for TLS 1.2\n};\n\n/**\n * Gets a MAC for a record using the SHA-1 hash algorithm.\n *\n * @param key the mac key.\n * @param state the sequence number (array of two 32-bit integers).\n * @param record the record.\n *\n * @return the sha-1 hash (20 bytes) for the given record.\n */\nvar hmac_sha1 = function(key, seqNum, record) {\n  /* MAC is computed like so:\n  HMAC_hash(\n    key, seqNum +\n      TLSCompressed.type +\n      TLSCompressed.version +\n      TLSCompressed.length +\n      TLSCompressed.fragment)\n  */\n  var hmac = forge.hmac.create();\n  hmac.start('SHA1', key);\n  var b = forge.util.createBuffer();\n  b.putInt32(seqNum[0]);\n  b.putInt32(seqNum[1]);\n  b.putByte(record.type);\n  b.putByte(record.version.major);\n  b.putByte(record.version.minor);\n  b.putInt16(record.length);\n  b.putBytes(record.fragment.bytes());\n  hmac.update(b.getBytes());\n  return hmac.digest().getBytes();\n};\n\n/**\n * Compresses the TLSPlaintext record into a TLSCompressed record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSPlaintext record to compress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar deflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.deflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // deflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Decompresses the TLSCompressed record into a TLSPlaintext record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSCompressed record to decompress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar inflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.inflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // inflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Reads a TLS variable-length vector from a byte buffer.\n *\n * Variable-length vectors are defined by specifying a subrange of legal\n * lengths, inclusively, using the notation <floor..ceiling>. When these are\n * encoded, the actual length precedes the vector's contents in the byte\n * stream. The length will be in the form of a number consuming as many bytes\n * as required to hold the vector's specified maximum (ceiling) length. A\n * variable-length vector with an actual length field of zero is referred to\n * as an empty vector.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n *\n * @return the resulting byte buffer.\n */\nvar readVector = function(b, lenBytes) {\n  var len = 0;\n  switch(lenBytes) {\n  case 1:\n    len = b.getByte();\n    break;\n  case 2:\n    len = b.getInt16();\n    break;\n  case 3:\n    len = b.getInt24();\n    break;\n  case 4:\n    len = b.getInt32();\n    break;\n  }\n\n  // read vector bytes into a new buffer\n  return forge.util.createBuffer(b.getBytes(len));\n};\n\n/**\n * Writes a TLS variable-length vector to a byte buffer.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n * @param v the byte buffer vector.\n */\nvar writeVector = function(b, lenBytes, v) {\n  // encode length at the start of the vector, where the number of bytes for\n  // the length is the maximum number of bytes it would take to encode the\n  // vector's ceiling\n  b.putInt(v.length(), lenBytes << 3);\n  b.putBuffer(v);\n};\n\n/**\n * The tls implementation.\n */\nvar tls = {};\n\n/**\n * Version: TLS 1.2 = 3.3, TLS 1.1 = 3.2, TLS 1.0 = 3.1. Both TLS 1.1 and\n * TLS 1.2 were still too new (ie: openSSL didn't implement them) at the time\n * of this implementation so TLS 1.0 was implemented instead.\n */\ntls.Versions = {\n  TLS_1_0: {major: 3, minor: 1},\n  TLS_1_1: {major: 3, minor: 2},\n  TLS_1_2: {major: 3, minor: 3}\n};\ntls.SupportedVersions = [\n  tls.Versions.TLS_1_1,\n  tls.Versions.TLS_1_0\n];\ntls.Version = tls.SupportedVersions[0];\n\n/**\n * Maximum fragment size. True maximum is 16384, but we fragment before that\n * to allow for unusual small increases during compression.\n */\ntls.MaxFragment = 16384 - 1024;\n\n/**\n * Whether this entity is considered the \"client\" or \"server\".\n * enum { server, client } ConnectionEnd;\n */\ntls.ConnectionEnd = {\n  server: 0,\n  client: 1\n};\n\n/**\n * Pseudo-random function algorithm used to generate keys from the master\n * secret.\n * enum { tls_prf_sha256 } PRFAlgorithm;\n */\ntls.PRFAlgorithm = {\n  tls_prf_sha256: 0\n};\n\n/**\n * Bulk encryption algorithms.\n * enum { null, rc4, des3, aes } BulkCipherAlgorithm;\n */\ntls.BulkCipherAlgorithm = {\n  none: null,\n  rc4: 0,\n  des3: 1,\n  aes: 2\n};\n\n/**\n * Cipher types.\n * enum { stream, block, aead } CipherType;\n */\ntls.CipherType = {\n  stream: 0,\n  block: 1,\n  aead: 2\n};\n\n/**\n * MAC (Message Authentication Code) algorithms.\n * enum { null, hmac_md5, hmac_sha1, hmac_sha256,\n *   hmac_sha384, hmac_sha512} MACAlgorithm;\n */\ntls.MACAlgorithm = {\n  none: null,\n  hmac_md5: 0,\n  hmac_sha1: 1,\n  hmac_sha256: 2,\n  hmac_sha384: 3,\n  hmac_sha512: 4\n};\n\n/**\n * Compression algorithms.\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n */\ntls.CompressionMethod = {\n  none: 0,\n  deflate: 1\n};\n\n/**\n * TLS record content types.\n * enum {\n *   change_cipher_spec(20), alert(21), handshake(22),\n *   application_data(23), (255)\n * } ContentType;\n */\ntls.ContentType = {\n  change_cipher_spec: 20,\n  alert: 21,\n  handshake: 22,\n  application_data: 23,\n  heartbeat: 24\n};\n\n/**\n * TLS handshake types.\n * enum {\n *   hello_request(0), client_hello(1), server_hello(2),\n *   certificate(11), server_key_exchange (12),\n *   certificate_request(13), server_hello_done(14),\n *   certificate_verify(15), client_key_exchange(16),\n *   finished(20), (255)\n * } HandshakeType;\n */\ntls.HandshakeType = {\n  hello_request: 0,\n  client_hello: 1,\n  server_hello: 2,\n  certificate: 11,\n  server_key_exchange: 12,\n  certificate_request: 13,\n  server_hello_done: 14,\n  certificate_verify: 15,\n  client_key_exchange: 16,\n  finished: 20\n};\n\n/**\n * TLS Alert Protocol.\n *\n * enum { warning(1), fatal(2), (255) } AlertLevel;\n *\n * enum {\n *   close_notify(0),\n *   unexpected_message(10),\n *   bad_record_mac(20),\n *   decryption_failed(21),\n *   record_overflow(22),\n *   decompression_failure(30),\n *   handshake_failure(40),\n *   bad_certificate(42),\n *   unsupported_certificate(43),\n *   certificate_revoked(44),\n *   certificate_expired(45),\n *   certificate_unknown(46),\n *   illegal_parameter(47),\n *   unknown_ca(48),\n *   access_denied(49),\n *   decode_error(50),\n *   decrypt_error(51),\n *   export_restriction(60),\n *   protocol_version(70),\n *   insufficient_security(71),\n *   internal_error(80),\n *   user_canceled(90),\n *   no_renegotiation(100),\n *   (255)\n * } AlertDescription;\n *\n * struct {\n *   AlertLevel level;\n *   AlertDescription description;\n * } Alert;\n */\ntls.Alert = {};\ntls.Alert.Level = {\n  warning: 1,\n  fatal: 2\n};\ntls.Alert.Description = {\n  close_notify: 0,\n  unexpected_message: 10,\n  bad_record_mac: 20,\n  decryption_failed: 21,\n  record_overflow: 22,\n  decompression_failure: 30,\n  handshake_failure: 40,\n  bad_certificate: 42,\n  unsupported_certificate: 43,\n  certificate_revoked: 44,\n  certificate_expired: 45,\n  certificate_unknown: 46,\n  illegal_parameter: 47,\n  unknown_ca: 48,\n  access_denied: 49,\n  decode_error: 50,\n  decrypt_error: 51,\n  export_restriction: 60,\n  protocol_version: 70,\n  insufficient_security: 71,\n  internal_error: 80,\n  user_canceled: 90,\n  no_renegotiation: 100\n};\n\n/**\n * TLS Heartbeat Message types.\n * enum {\n *   heartbeat_request(1),\n *   heartbeat_response(2),\n *   (255)\n * } HeartbeatMessageType;\n */\ntls.HeartbeatMessageType = {\n  heartbeat_request: 1,\n  heartbeat_response: 2\n};\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites = {};\n\n/**\n * Gets a supported cipher suite from its 2 byte ID.\n *\n * @param twoBytes two bytes in a string.\n *\n * @return the matching supported cipher suite or null.\n */\ntls.getCipherSuite = function(twoBytes) {\n  var rval = null;\n  for(var key in tls.CipherSuites) {\n    var cs = tls.CipherSuites[key];\n    if(cs.id[0] === twoBytes.charCodeAt(0) &&\n      cs.id[1] === twoBytes.charCodeAt(1)) {\n      rval = cs;\n      break;\n    }\n  }\n  return rval;\n};\n\n/**\n * Called when an unexpected record is encountered.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleUnexpected = function(c, record) {\n  // if connection is client and closed, ignore unexpected messages\n  var ignore = (!c.open && c.entity === tls.ConnectionEnd.client);\n  if(!ignore) {\n    c.error(c, {\n      message: 'Unexpected message. Received TLS record out of order.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unexpected_message\n      }\n    });\n  }\n};\n\n/**\n * Called when a client receives a HelloRequest record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleHelloRequest = function(c, record, length) {\n  // ignore renegotiation requests from the server during a handshake, but\n  // if handshaking, send a warning alert that renegotation is denied\n  if(!c.handshaking && c.handshakes > 0) {\n    // send alert warning\n    tls.queue(c, tls.createAlert(c, {\n       level: tls.Alert.Level.warning,\n       description: tls.Alert.Description.no_renegotiation\n    }));\n    tls.flush(c);\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Parses a hello message from a ClientHello or ServerHello record.\n *\n * @param record the record to parse.\n *\n * @return the parsed message.\n */\ntls.parseHelloMessage = function(c, record, length) {\n  var msg = null;\n\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  // minimum of 38 bytes in message\n  if(length < 38) {\n    c.error(c, {\n      message: client ?\n        'Invalid ServerHello message. Message too short.' :\n        'Invalid ClientHello message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else {\n    // use 'remaining' to calculate # of remaining bytes in the message\n    var b = record.fragment;\n    var remaining = b.length();\n    msg = {\n      version: {\n        major: b.getByte(),\n        minor: b.getByte()\n      },\n      random: forge.util.createBuffer(b.getBytes(32)),\n      session_id: readVector(b, 1),\n      extensions: []\n    };\n    if(client) {\n      msg.cipher_suite = b.getBytes(2);\n      msg.compression_method = b.getByte();\n    } else {\n      msg.cipher_suites = readVector(b, 2);\n      msg.compression_methods = readVector(b, 1);\n    }\n\n    // read extensions if there are any bytes left in the message\n    remaining = length - (remaining - b.length());\n    if(remaining > 0) {\n      // parse extensions\n      var exts = readVector(b, 2);\n      while(exts.length() > 0) {\n        msg.extensions.push({\n          type: [exts.getByte(), exts.getByte()],\n          data: readVector(exts, 2)\n        });\n      }\n\n      // TODO: make extension support modular\n      if(!client) {\n        for(var i = 0; i < msg.extensions.length; ++i) {\n          var ext = msg.extensions[i];\n\n          // support SNI extension\n          if(ext.type[0] === 0x00 && ext.type[1] === 0x00) {\n            // get server name list\n            var snl = readVector(ext.data, 2);\n            while(snl.length() > 0) {\n              // read server name type\n              var snType = snl.getByte();\n\n              // only HostName type (0x00) is known, break out if\n              // another type is detected\n              if(snType !== 0x00) {\n                break;\n              }\n\n              // add host name to server name list\n              c.session.extensions.server_name.serverNameList.push(\n                readVector(snl, 2).getBytes());\n            }\n          }\n        }\n      }\n    }\n\n    // version already set, do not allow version change\n    if(c.session.version) {\n      if(msg.version.major !== c.session.version.major ||\n        msg.version.minor !== c.session.version.minor) {\n        return c.error(c, {\n          message: 'TLS version change is disallowed during renegotiation.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    // get the chosen (ServerHello) cipher suite\n    if(client) {\n      // FIXME: should be checking configured acceptable cipher suites\n      c.session.cipherSuite = tls.getCipherSuite(msg.cipher_suite);\n    } else {\n      // get a supported preferred (ClientHello) cipher suite\n      // choose the first supported cipher suite\n      var tmp = forge.util.createBuffer(msg.cipher_suites.bytes());\n      while(tmp.length() > 0) {\n        // FIXME: should be checking configured acceptable suites\n        // cipher suites take up 2 bytes\n        c.session.cipherSuite = tls.getCipherSuite(tmp.getBytes(2));\n        if(c.session.cipherSuite !== null) {\n          break;\n        }\n      }\n    }\n\n    // cipher suite not supported\n    if(c.session.cipherSuite === null) {\n      return c.error(c, {\n        message: 'No cipher suites in common.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.handshake_failure\n        },\n        cipherSuite: forge.util.bytesToHex(msg.cipher_suite)\n      });\n    }\n\n    // TODO: handle compression methods\n    if(client) {\n      c.session.compressionMethod = msg.compression_method;\n    } else {\n      // no compression\n      c.session.compressionMethod = tls.CompressionMethod.none;\n    }\n  }\n\n  return msg;\n};\n\n/**\n * Creates security parameters for the given connection based on the given\n * hello message.\n *\n * @param c the TLS connection.\n * @param msg the hello message.\n */\ntls.createSecurityParameters = function(c, msg) {\n  /* Note: security params are from TLS 1.2, some values like prf_algorithm\n  are ignored for TLS 1.0/1.1 and the builtin as specified in the spec is\n  used. */\n\n  // TODO: handle other options from server when more supported\n\n  // get client and server randoms\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var msgRandom = msg.random.bytes();\n  var cRandom = client ? c.session.sp.client_random : msgRandom;\n  var sRandom = client ? msgRandom : tls.createRandom().getBytes();\n\n  // create new security parameters\n  c.session.sp = {\n    entity: c.entity,\n    prf_algorithm: tls.PRFAlgorithm.tls_prf_sha256,\n    bulk_cipher_algorithm: null,\n    cipher_type: null,\n    enc_key_length: null,\n    block_length: null,\n    fixed_iv_length: null,\n    record_iv_length: null,\n    mac_algorithm: null,\n    mac_length: null,\n    mac_key_length: null,\n    compression_algorithm: c.session.compressionMethod,\n    pre_master_secret: null,\n    master_secret: null,\n    client_random: cRandom,\n    server_random: sRandom\n  };\n};\n\n/**\n * Called when a client receives a ServerHello record.\n *\n * When a ServerHello message will be sent:\n *   The server will send this message in response to a client hello message\n *   when it was able to find an acceptable set of algorithms. If it cannot\n *   find such a match, it will respond with a handshake failure alert.\n *\n * uint24 length;\n * struct {\n *   ProtocolVersion server_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suite;\n *   CompressionMethod compression_method;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ServerHello;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // ensure server version is compatible\n  if(msg.version.minor <= c.version.minor) {\n    c.version.minor = msg.version.minor;\n  } else {\n    return c.error(c, {\n      message: 'Incompatible TLS version.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.protocol_version\n      }\n    });\n  }\n\n  // indicate session version has been set\n  c.session.version = c.version;\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // if the session ID is not blank and matches the cached one, resume\n  // the session\n  if(sessionId.length > 0 && sessionId === c.session.id) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = SCC;\n    c.session.resuming = true;\n\n    // get new server random\n    c.session.sp.server_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a server Certificate message next\n    c.expect = SCE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // set new session ID\n  c.session.id = sessionId;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a ClientHello record.\n *\n * When a ClientHello message will be sent:\n *   When a client first connects to a server it is required to send the\n *   client hello as its first message. The client can also send a client\n *   hello in response to a hello request or on its own initiative in order\n *   to renegotiate the security parameters in an existing connection.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // see if the given session ID is in the cache\n  var session = null;\n  if(c.sessionCache) {\n    session = c.sessionCache.getSession(sessionId);\n    if(session === null) {\n      // session ID not found\n      sessionId = '';\n    } else if(session.version.major !== msg.version.major ||\n      session.version.minor > msg.version.minor) {\n      // if session version is incompatible with client version, do not resume\n      session = null;\n      sessionId = '';\n    }\n  }\n\n  // no session found to resume, generate a new session ID\n  if(sessionId.length === 0) {\n    sessionId = forge.random.getBytes(32);\n  }\n\n  // update session\n  c.session.id = sessionId;\n  c.session.clientHelloVersion = msg.version;\n  c.session.sp = {};\n  if(session) {\n    // use version and security parameters from resumed session\n    c.version = c.session.version = session.version;\n    c.session.sp = session.sp;\n  } else {\n    // use highest compatible minor version\n    var version;\n    for(var i = 1; i < tls.SupportedVersions.length; ++i) {\n      version = tls.SupportedVersions[i];\n      if(version.minor <= msg.version.minor) {\n        break;\n      }\n    }\n    c.version = {major: version.major, minor: version.minor};\n    c.session.version = c.version;\n  }\n\n  // if a session is set, resume it\n  if(session !== null) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = CCC;\n    c.session.resuming = true;\n\n    // get new client random\n    c.session.sp.client_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a Certificate or ClientKeyExchange\n    c.expect = (c.verifyClient !== false) ? CCE : CKE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // connection now open\n  c.open = true;\n\n  // queue server hello\n  tls.queue(c, tls.createRecord(c, {\n    type: tls.ContentType.handshake,\n    data: tls.createServerHello(c)\n  }));\n\n  if(c.session.resuming) {\n    // queue change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // queue finished\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  } else {\n    // queue server certificate\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    }));\n\n    if(!c.fail) {\n      // queue server key exchange\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerKeyExchange(c)\n      }));\n\n      // request client certificate if set\n      if(c.verifyClient !== false) {\n        // queue certificate request\n        tls.queue(c, tls.createRecord(c, {\n          type: tls.ContentType.handshake,\n          data: tls.createCertificateRequest(c)\n        }));\n      }\n\n      // queue server hello done\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerHelloDone(c)\n      }));\n    }\n  }\n\n  // send records\n  tls.flush(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a Certificate record.\n *\n * When this message will be sent:\n *   The server must send a certificate whenever the agreed-upon key exchange\n *   method is not an anonymous one. This message will always immediately\n *   follow the server hello message.\n *\n * Meaning of this message:\n *   The certificate type must be appropriate for the selected cipher suite's\n *   key exchange algorithm, and is generally an X.509v3 certificate. It must\n *   contain a key which matches the key exchange method, as follows. Unless\n *   otherwise specified, the signing algorithm for the certificate must be\n *   the same as the algorithm for the certificate key. Unless otherwise\n *   specified, the public key may be of any length.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n * struct {\n *   ASN.1Cert certificate_list<1..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificate = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid Certificate message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    certificate_list: readVector(b, 3)\n  };\n\n  /* The sender's certificate will be first in the list (chain), each\n    subsequent one that follows will certify the previous one, but root\n    certificates (self-signed) that specify the certificate authority may\n    be omitted under the assumption that clients must already possess it. */\n  var cert, asn1;\n  var certs = [];\n  try {\n    while(msg.certificate_list.length() > 0) {\n      // each entry in msg.certificate_list is a vector with 3 len bytes\n      cert = readVector(msg.certificate_list, 3);\n      asn1 = forge.asn1.fromDer(cert);\n      cert = forge.pki.certificateFromAsn1(asn1, true);\n      certs.push(cert);\n    }\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Could not parse certificate list.',\n      cause: ex,\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.bad_certificate\n      }\n    });\n  }\n\n  // ensure at least 1 certificate was provided if in client-mode\n  // or if verifyClient was set to true to require a certificate\n  // (as opposed to 'optional')\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((client || c.verifyClient === true) && certs.length === 0) {\n    // error, no certificate\n    c.error(c, {\n      message: client ?\n        'No server certificate provided.' :\n        'No client certificate provided.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else if(certs.length === 0) {\n    // no certs to verify\n    // expect a ServerKeyExchange or ClientKeyExchange message next\n    c.expect = client ? SKE : CKE;\n  } else {\n    // save certificate in session\n    if(client) {\n      c.session.serverCertificate = certs[0];\n    } else {\n      c.session.clientCertificate = certs[0];\n    }\n\n    if(tls.verifyCertificateChain(c, certs)) {\n      // expect a ServerKeyExchange or ClientKeyExchange message next\n      c.expect = client ? SKE : CKE;\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerKeyExchange record.\n *\n * When this message will be sent:\n *   This message will be sent immediately after the server certificate\n *   message (or the server hello message, if this is an anonymous\n *   negotiation).\n *\n *   The server key exchange message is sent by the server only when the\n *   server certificate message (if sent) does not contain enough data to\n *   allow the client to exchange a premaster secret.\n *\n * Meaning of this message:\n *   This message conveys cryptographic information to allow the client to\n *   communicate the premaster secret: either an RSA public key to encrypt\n *   the premaster secret with, or a Diffie-Hellman public key with which the\n *   client can complete a key exchange (with the result being the premaster\n *   secret.)\n *\n * enum {\n *   dhe_dss, dhe_rsa, dh_anon, rsa, dh_dss, dh_rsa\n * } KeyExchangeAlgorithm;\n *\n * struct {\n *   opaque dh_p<1..2^16-1>;\n *   opaque dh_g<1..2^16-1>;\n *   opaque dh_Ys<1..2^16-1>;\n * } ServerDHParams;\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case dh_anon:\n *       ServerDHParams params;\n *     case dhe_dss:\n *     case dhe_rsa:\n *       ServerDHParams params;\n *       digitally-signed struct {\n *         opaque client_random[32];\n *         opaque server_random[32];\n *         ServerDHParams params;\n *       } signed_params;\n *     case rsa:\n *     case dh_dss:\n *     case dh_rsa:\n *       struct {};\n *   };\n * } ServerKeyExchange;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length > 0 is invalid\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  // expect an optional CertificateRequest message next\n  c.expect = SCR;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ClientKeyExchange record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length < 48 is invalid\n  if(length < 48) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    enc_pre_master_secret: readVector(b, 2).getBytes()\n  };\n\n  // do rsa decryption\n  var privateKey = null;\n  if(c.getPrivateKey) {\n    try {\n      privateKey = c.getPrivateKey(c, c.session.serverCertificate);\n      privateKey = forge.pki.privateKeyFromPem(privateKey);\n    } catch(ex) {\n      c.error(c, {\n        message: 'Could not get private key.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n  }\n\n  if(privateKey === null) {\n    return c.error(c, {\n      message: 'No private key set.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.internal_error\n      }\n    });\n  }\n\n  try {\n    // decrypt 48-byte pre-master secret\n    var sp = c.session.sp;\n    sp.pre_master_secret = privateKey.decrypt(msg.enc_pre_master_secret);\n\n    // ensure client hello version matches first 2 bytes\n    var version = c.session.clientHelloVersion;\n    if(version.major !== sp.pre_master_secret.charCodeAt(0) ||\n      version.minor !== sp.pre_master_secret.charCodeAt(1)) {\n      // error, do not send alert (see BLEI attack below)\n      throw new Error('TLS version rollback attack detected.');\n    }\n  } catch(ex) {\n    /* Note: Daniel Bleichenbacher [BLEI] can be used to attack a\n      TLS server which is using PKCS#1 encoded RSA, so instead of\n      failing here, we generate 48 random bytes and use that as\n      the pre-master secret. */\n    sp.pre_master_secret = forge.random.getBytes(48);\n  }\n\n  // expect a CertificateVerify message if a Certificate was received that\n  // does not have fixed Diffie-Hellman params, otherwise expect\n  // ChangeCipherSpec\n  c.expect = CCC;\n  if(c.session.clientCertificate !== null) {\n    // only RSA support, so expect CertificateVerify\n    // TODO: support Diffie-Hellman\n    c.expect = CCV;\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a CertificateRequest record.\n *\n * When this message will be sent:\n *   A non-anonymous server can optionally request a certificate from the\n *   client, if appropriate for the selected cipher suite. This message, if\n *   sent, will immediately follow the Server Key Exchange message (if it is\n *   sent; otherwise, the Server Certificate message).\n *\n * enum {\n *   rsa_sign(1), dss_sign(2), rsa_fixed_dh(3), dss_fixed_dh(4),\n *   rsa_ephemeral_dh_RESERVED(5), dss_ephemeral_dh_RESERVED(6),\n *   fortezza_dms_RESERVED(20), (255)\n * } ClientCertificateType;\n *\n * opaque DistinguishedName<1..2^16-1>;\n *\n * struct {\n *   ClientCertificateType certificate_types<1..2^8-1>;\n *   SignatureAndHashAlgorithm supported_signature_algorithms<2^16-1>;\n *   DistinguishedName certificate_authorities<0..2^16-1>;\n * } CertificateRequest;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateRequest = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid CertificateRequest. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // TODO: TLS 1.2+ has different format including\n  // SignatureAndHashAlgorithm after cert types\n  var b = record.fragment;\n  var msg = {\n    certificate_types: readVector(b, 1),\n    certificate_authorities: readVector(b, 2)\n  };\n\n  // save certificate request in session\n  c.session.certificateRequest = msg;\n\n  // expect a ServerHelloDone message next\n  c.expect = SHD;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a CertificateVerify record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateVerify = function(c, record, length) {\n  if(length < 2) {\n    return c.error(c, {\n      message: 'Invalid CertificateVerify. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for CertificateVerify messages because\n  // they must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  var msg = {\n    signature: readVector(b, 2).getBytes()\n  };\n\n  // TODO: add support for DSA\n\n  // generate data to verify\n  var verify = forge.util.createBuffer();\n  verify.putBuffer(c.session.md5.digest());\n  verify.putBuffer(c.session.sha1.digest());\n  verify = verify.getBytes();\n\n  try {\n    var cert = c.session.clientCertificate;\n    /*b = forge.pki.rsa.decrypt(\n      msg.signature, cert.publicKey, true, verify.length);\n    if(b !== verify) {*/\n    if(!cert.publicKey.verify(verify, msg.signature, 'NONE')) {\n      throw new Error('CertificateVerify signature does not match.');\n    }\n\n    // digest message now that it has been handled\n    c.session.md5.update(msgBytes);\n    c.session.sha1.update(msgBytes);\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Bad signature in CertificateVerify.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.handshake_failure\n      }\n    });\n  }\n\n  // expect ChangeCipherSpec\n  c.expect = CCC;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerHelloDone record.\n *\n * When this message will be sent:\n *   The server hello done message is sent by the server to indicate the end\n *   of the server hello and associated messages. After sending this message\n *   the server will wait for a client response.\n *\n * Meaning of this message:\n *   This message means that the server is done sending messages to support\n *   the key exchange, and the client can proceed with its phase of the key\n *   exchange.\n *\n *   Upon receipt of the server hello done message the client should verify\n *   that the server provided a valid certificate if required and check that\n *   the server hello parameters are acceptable.\n *\n * struct {} ServerHelloDone;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHelloDone = function(c, record, length) {\n  // len must be 0 bytes\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid ServerHelloDone message. Invalid length.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.record_overflow\n      }\n    });\n  }\n\n  if(c.serverCertificate === null) {\n    // no server certificate was provided\n    var error = {\n      message: 'No server certificate provided. Not enough security.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.insufficient_security\n      }\n    };\n\n    // call application callback\n    var depth = 0;\n    var ret = c.verify(c, error.alert.description, depth, []);\n    if(ret !== true) {\n      // check for custom alert info\n      if(ret || ret === 0) {\n        // set custom message and alert description\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n        } else if(typeof ret === 'number') {\n          // set custom alert description\n          error.alert.description = ret;\n        }\n      }\n\n      // send error\n      return c.error(c, error);\n    }\n  }\n\n  // create client certificate message if requested\n  if(c.session.certificateRequest !== null) {\n    record = tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    });\n    tls.queue(c, record);\n  }\n\n  // create client key exchange message\n  record = tls.createRecord(c, {\n     type: tls.ContentType.handshake,\n     data: tls.createClientKeyExchange(c)\n  });\n  tls.queue(c, record);\n\n  // expect no messages until the following callback has been called\n  c.expect = SER;\n\n  // create callback to handle client signature (for client-certs)\n  var callback = function(c, signature) {\n    if(c.session.certificateRequest !== null &&\n      c.session.clientCertificate !== null) {\n      // create certificate verify message\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createCertificateVerify(c, signature)\n      }));\n    }\n\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n\n    // expect a server ChangeCipherSpec message next\n    c.expect = SCC;\n\n    // send records\n    tls.flush(c);\n\n    // continue\n    c.process();\n  };\n\n  // if there is no certificate request or no client certificate, do\n  // callback immediately\n  if(c.session.certificateRequest === null ||\n    c.session.clientCertificate === null) {\n    return callback(c, null);\n  }\n\n  // otherwise get the client signature\n  tls.getClientSignature(c, callback);\n};\n\n/**\n * Called when a ChangeCipherSpec record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleChangeCipherSpec = function(c, record) {\n  if(record.fragment.getByte() !== 0x01) {\n    return c.error(c, {\n      message: 'Invalid ChangeCipherSpec message received.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // create pending state if:\n  // 1. Resuming session in client mode OR\n  // 2. NOT resuming session in server mode\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    c.state.pending = tls.createConnectionState(c);\n  }\n\n  // change current read state to pending read state\n  c.state.current.read = c.state.pending.read;\n\n  // clear pending state if:\n  // 1. NOT resuming session in client mode OR\n  // 2. resuming a session in server mode\n  if((!c.session.resuming && client) || (c.session.resuming && !client)) {\n    c.state.pending = null;\n  }\n\n  // expect a Finished record next\n  c.expect = client ? SFI : CFI;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Finished record is received.\n *\n * When this message will be sent:\n *   A finished message is always sent immediately after a change\n *   cipher spec message to verify that the key exchange and\n *   authentication processes were successful. It is essential that a\n *   change cipher spec message be received between the other\n *   handshake messages and the Finished message.\n *\n * Meaning of this message:\n *   The finished message is the first protected with the just-\n *   negotiated algorithms, keys, and secrets. Recipients of finished\n *   messages must verify that the contents are correct.  Once a side\n *   has sent its Finished message and received and validated the\n *   Finished message from its peer, it may begin to send and receive\n *   application data over the connection.\n *\n * struct {\n *   opaque verify_data[verify_data_length];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, Hash(handshake_messages))\n *     [0..verify_data_length-1];\n *\n * finished_label\n *   For Finished messages sent by the client, the string\n *   \"client finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * verify_data_length depends on the cipher suite. If it is not specified\n * by the cipher suite, then it is 12. Versions of TLS < 1.2 always used\n * 12 bytes.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleFinished = function(c, record, length) {\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for Finished messages because they\n  // must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  // message contains only verify_data\n  var vd = record.fragment.getBytes();\n\n  // ensure verify data is correct\n  b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // set label based on entity type\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var label = client ? 'server finished' : 'client finished';\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n  if(b.getBytes() !== vd) {\n    return c.error(c, {\n      message: 'Invalid verify_data in Finished message.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.decrypt_error\n      }\n    });\n  }\n\n  // digest finished message now that it has been handled\n  c.session.md5.update(msgBytes);\n  c.session.sha1.update(msgBytes);\n\n  // resuming session as client or NOT resuming session as server\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // change current write state to pending write state, clear pending\n    c.state.current.write = c.state.pending.write;\n    c.state.pending = null;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  }\n\n  // expect application data next\n  c.expect = client ? SAD : CAD;\n\n  // handshake complete\n  c.handshaking = false;\n  ++c.handshakes;\n\n  // save access to peer certificate\n  c.peerCertificate = client ?\n    c.session.serverCertificate : c.session.clientCertificate;\n\n  // send records\n  tls.flush(c);\n\n  // now connected\n  c.isConnected = true;\n  c.connected(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when an Alert record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleAlert = function(c, record) {\n  // read alert\n  var b = record.fragment;\n  var alert = {\n    level: b.getByte(),\n    description: b.getByte()\n  };\n\n  // TODO: consider using a table?\n  // get appropriate message\n  var msg;\n  switch(alert.description) {\n  case tls.Alert.Description.close_notify:\n    msg = 'Connection closed.';\n    break;\n  case tls.Alert.Description.unexpected_message:\n    msg = 'Unexpected message.';\n    break;\n  case tls.Alert.Description.bad_record_mac:\n    msg = 'Bad record MAC.';\n    break;\n  case tls.Alert.Description.decryption_failed:\n    msg = 'Decryption failed.';\n    break;\n  case tls.Alert.Description.record_overflow:\n    msg = 'Record overflow.';\n    break;\n  case tls.Alert.Description.decompression_failure:\n    msg = 'Decompression failed.';\n    break;\n  case tls.Alert.Description.handshake_failure:\n    msg = 'Handshake failure.';\n    break;\n  case tls.Alert.Description.bad_certificate:\n    msg = 'Bad certificate.';\n    break;\n  case tls.Alert.Description.unsupported_certificate:\n    msg = 'Unsupported certificate.';\n    break;\n  case tls.Alert.Description.certificate_revoked:\n    msg = 'Certificate revoked.';\n    break;\n  case tls.Alert.Description.certificate_expired:\n    msg = 'Certificate expired.';\n    break;\n  case tls.Alert.Description.certificate_unknown:\n    msg = 'Certificate unknown.';\n    break;\n  case tls.Alert.Description.illegal_parameter:\n    msg = 'Illegal parameter.';\n    break;\n  case tls.Alert.Description.unknown_ca:\n    msg = 'Unknown certificate authority.';\n    break;\n  case tls.Alert.Description.access_denied:\n    msg = 'Access denied.';\n    break;\n  case tls.Alert.Description.decode_error:\n    msg = 'Decode error.';\n    break;\n  case tls.Alert.Description.decrypt_error:\n    msg = 'Decrypt error.';\n    break;\n  case tls.Alert.Description.export_restriction:\n    msg = 'Export restriction.';\n    break;\n  case tls.Alert.Description.protocol_version:\n    msg = 'Unsupported protocol version.';\n    break;\n  case tls.Alert.Description.insufficient_security:\n    msg = 'Insufficient security.';\n    break;\n  case tls.Alert.Description.internal_error:\n    msg = 'Internal error.';\n    break;\n  case tls.Alert.Description.user_canceled:\n    msg = 'User canceled.';\n    break;\n  case tls.Alert.Description.no_renegotiation:\n    msg = 'Renegotiation not supported.';\n    break;\n  default:\n    msg = 'Unknown error.';\n    break;\n  }\n\n  // close connection on close_notify, not an error\n  if(alert.description === tls.Alert.Description.close_notify) {\n    return c.close();\n  }\n\n  // call error handler\n  c.error(c, {\n    message: msg,\n    send: false,\n    // origin is the opposite end\n    origin: (c.entity === tls.ConnectionEnd.client) ? 'server' : 'client',\n    alert: alert\n  });\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Handshake record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHandshake = function(c, record) {\n  // get the handshake type and message length\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt24();\n\n  // see if the record fragment doesn't yet contain the full message\n  if(length > b.length()) {\n    // cache the record, clear its fragment, and reset the buffer read\n    // pointer before the type and length were read\n    c.fragmented = record;\n    record.fragment = forge.util.createBuffer();\n    b.read -= 4;\n\n    // continue\n    return c.process();\n  }\n\n  // full message now available, clear cache, reset read pointer to\n  // before type and length\n  c.fragmented = null;\n  b.read -= 4;\n\n  // save the handshake bytes for digestion after handler is found\n  // (include type and length of handshake msg)\n  var bytes = b.bytes(length + 4);\n\n  // restore read pointer\n  b.read += 4;\n\n  // handle expected message\n  if(type in hsTable[c.entity][c.expect]) {\n    // initialize server session\n    if(c.entity === tls.ConnectionEnd.server && !c.open && !c.fail) {\n      c.handshaking = true;\n      c.session = {\n        version: null,\n        extensions: {\n          server_name: {\n            serverNameList: []\n          }\n        },\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        clientCertificate: null,\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n    }\n\n    /* Update handshake messages digest. Finished and CertificateVerify\n      messages are not digested here. They can't be digested as part of\n      the verify_data that they contain. These messages are manually\n      digested in their handlers. HelloRequest messages are simply never\n      included in the handshake message digest according to spec. */\n    if(type !== tls.HandshakeType.hello_request &&\n      type !== tls.HandshakeType.certificate_verify &&\n      type !== tls.HandshakeType.finished) {\n      c.session.md5.update(bytes);\n      c.session.sha1.update(bytes);\n    }\n\n    // handle specific handshake type record\n    hsTable[c.entity][c.expect][type](c, record, length);\n  } else {\n    // unexpected record\n    tls.handleUnexpected(c, record);\n  }\n};\n\n/**\n * Called when an ApplicationData record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleApplicationData = function(c, record) {\n  // buffer data, notify that its ready\n  c.data.putBuffer(record.fragment);\n  c.dataReady(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Heartbeat record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHeartbeat = function(c, record) {\n  // get the heartbeat type and payload\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt16();\n  var payload = b.getBytes(length);\n\n  if(type === tls.HeartbeatMessageType.heartbeat_request) {\n    // discard request during handshake or if length is too large\n    if(c.handshaking || length > payload.length) {\n      // continue\n      return c.process();\n    }\n    // retransmit payload\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_response, payload)\n    }));\n    tls.flush(c);\n  } else if(type === tls.HeartbeatMessageType.heartbeat_response) {\n    // check payload against expected payload, discard heartbeat if no match\n    if(payload !== c.expectedHeartbeatPayload) {\n      // continue\n      return c.process();\n    }\n\n    // notify that a valid heartbeat was received\n    if(c.heartbeatReceived) {\n      c.heartbeatReceived(c, forge.util.createBuffer(payload));\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * The transistional state tables for receiving TLS records. It maps the\n * current TLS engine state and a received record to a function to handle the\n * record and update the state.\n *\n * For instance, if the current state is SHE, then the TLS engine is expecting\n * a ServerHello record. Once a record is received, the handler function is\n * looked up using the state SHE and the record's content type.\n *\n * The resulting function will either be an error handler or a record handler.\n * The function will take whatever action is appropriate and update the state\n * for the next record.\n *\n * The states are all based on possible server record types. Note that the\n * client will never specifically expect to receive a HelloRequest or an alert\n * from the server so there is no state that reflects this. These messages may\n * occur at any time.\n *\n * There are two tables for mapping states because there is a second tier of\n * types for handshake messages. Once a record with a content type of handshake\n * is received, the handshake record handler will look up the handshake type in\n * the secondary map to get its appropriate handler.\n *\n * Valid message orders are as follows:\n *\n * =======================FULL HANDSHAKE======================\n * Client                                               Server\n *\n * ClientHello                  -------->\n *                                                 ServerHello\n *                                                Certificate*\n *                                          ServerKeyExchange*\n *                                         CertificateRequest*\n *                              <--------      ServerHelloDone\n * Certificate*\n * ClientKeyExchange\n * CertificateVerify*\n * [ChangeCipherSpec]\n * Finished                     -------->\n *                                          [ChangeCipherSpec]\n *                              <--------             Finished\n * Application Data             <------->     Application Data\n *\n * =====================SESSION RESUMPTION=====================\n * Client                                                Server\n *\n * ClientHello                   -------->\n *                                                  ServerHello\n *                                           [ChangeCipherSpec]\n *                               <--------             Finished\n * [ChangeCipherSpec]\n * Finished                      -------->\n * Application Data              <------->     Application Data\n */\n// client expect states (indicate which records are expected to be received)\nvar SHE = 0; // rcv server hello\nvar SCE = 1; // rcv server certificate\nvar SKE = 2; // rcv server key exchange\nvar SCR = 3; // rcv certificate request\nvar SHD = 4; // rcv server hello done\nvar SCC = 5; // rcv change cipher spec\nvar SFI = 6; // rcv finished\nvar SAD = 7; // rcv application data\nvar SER = 8; // not expecting any messages at this point\n\n// server expect states\nvar CHE = 0; // rcv client hello\nvar CCE = 1; // rcv client certificate\nvar CKE = 2; // rcv client key exchange\nvar CCV = 3; // rcv certificate verify\nvar CCC = 4; // rcv change cipher spec\nvar CFI = 5; // rcv finished\nvar CAD = 6; // rcv application data\nvar CER = 7; // not expecting any messages at this point\n\n// map client current expect state and content type to function\nvar __ = tls.handleUnexpected;\nvar R0 = tls.handleChangeCipherSpec;\nvar R1 = tls.handleAlert;\nvar R2 = tls.handleHandshake;\nvar R3 = tls.handleApplicationData;\nvar R4 = tls.handleHeartbeat;\nvar ctTable = [];\nctTable[tls.ConnectionEnd.client] = [\n//      CC,AL,HS,AD,HB\n/*SHE*/[__,R1,R2,__,R4],\n/*SCE*/[__,R1,R2,__,R4],\n/*SKE*/[__,R1,R2,__,R4],\n/*SCR*/[__,R1,R2,__,R4],\n/*SHD*/[__,R1,R2,__,R4],\n/*SCC*/[R0,R1,__,__,R4],\n/*SFI*/[__,R1,R2,__,R4],\n/*SAD*/[__,R1,R2,R3,R4],\n/*SER*/[__,R1,R2,__,R4]\n];\n\n// map server current expect state and content type to function\nctTable[tls.ConnectionEnd.server] = [\n//      CC,AL,HS,AD\n/*CHE*/[__,R1,R2,__,R4],\n/*CCE*/[__,R1,R2,__,R4],\n/*CKE*/[__,R1,R2,__,R4],\n/*CCV*/[__,R1,R2,__,R4],\n/*CCC*/[R0,R1,__,__,R4],\n/*CFI*/[__,R1,R2,__,R4],\n/*CAD*/[__,R1,R2,R3,R4],\n/*CER*/[__,R1,R2,__,R4]\n];\n\n// map client current expect state and handshake type to function\nvar H0 = tls.handleHelloRequest;\nvar H1 = tls.handleServerHello;\nvar H2 = tls.handleCertificate;\nvar H3 = tls.handleServerKeyExchange;\nvar H4 = tls.handleCertificateRequest;\nvar H5 = tls.handleServerHelloDone;\nvar H6 = tls.handleFinished;\nvar hsTable = [];\nhsTable[tls.ConnectionEnd.client] = [\n//      HR,01,SH,03,04,05,06,07,08,09,10,SC,SK,CR,HD,15,CK,17,18,19,FI\n/*SHE*/[__,__,H1,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SCE*/[H0,__,__,__,__,__,__,__,__,__,__,H2,H3,H4,H5,__,__,__,__,__,__],\n/*SKE*/[H0,__,__,__,__,__,__,__,__,__,__,__,H3,H4,H5,__,__,__,__,__,__],\n/*SCR*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,H4,H5,__,__,__,__,__,__],\n/*SHD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,H5,__,__,__,__,__,__],\n/*SCC*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SFI*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*SAD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SER*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n// map server current expect state and handshake type to function\n// Note: CAD[CH] does not map to FB because renegotation is prohibited\nvar H7 = tls.handleClientHello;\nvar H8 = tls.handleClientKeyExchange;\nvar H9 = tls.handleCertificateVerify;\nhsTable[tls.ConnectionEnd.server] = [\n//      01,CH,02,03,04,05,06,07,08,09,10,CC,12,13,14,CV,CK,17,18,19,FI\n/*CHE*/[__,H7,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CCE*/[__,__,__,__,__,__,__,__,__,__,__,H2,__,__,__,__,__,__,__,__,__],\n/*CKE*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H8,__,__,__,__],\n/*CCV*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H9,__,__,__,__,__],\n/*CCC*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CFI*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*CAD*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CER*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n/**\n * Generates the master_secret and keys using the given security parameters.\n *\n * The security parameters for a TLS connection state are defined as such:\n *\n * struct {\n *   ConnectionEnd          entity;\n *   PRFAlgorithm           prf_algorithm;\n *   BulkCipherAlgorithm    bulk_cipher_algorithm;\n *   CipherType             cipher_type;\n *   uint8                  enc_key_length;\n *   uint8                  block_length;\n *   uint8                  fixed_iv_length;\n *   uint8                  record_iv_length;\n *   MACAlgorithm           mac_algorithm;\n *   uint8                  mac_length;\n *   uint8                  mac_key_length;\n *   CompressionMethod      compression_algorithm;\n *   opaque                 master_secret[48];\n *   opaque                 client_random[32];\n *   opaque                 server_random[32];\n * } SecurityParameters;\n *\n * Note that this definition is from TLS 1.2. In TLS 1.0 some of these\n * parameters are ignored because, for instance, the PRFAlgorithm is a\n * builtin-fixed algorithm combining iterations of MD5 and SHA-1 in TLS 1.0.\n *\n * The Record Protocol requires an algorithm to generate keys required by the\n * current connection state.\n *\n * The master secret is expanded into a sequence of secure bytes, which is then\n * split to a client write MAC key, a server write MAC key, a client write\n * encryption key, and a server write encryption key. In TLS 1.0 a client write\n * IV and server write IV are also generated. Each of these is generated from\n * the byte sequence in that order. Unused values are empty. In TLS 1.2, some\n * AEAD ciphers may additionally require a client write IV and a server write\n * IV (see Section 6.2.3.3).\n *\n * When keys, MAC keys, and IVs are generated, the master secret is used as an\n * entropy source.\n *\n * To generate the key material, compute:\n *\n * master_secret = PRF(pre_master_secret, \"master secret\",\n *                     ClientHello.random + ServerHello.random)\n *\n * key_block = PRF(SecurityParameters.master_secret,\n *                 \"key expansion\",\n *                 SecurityParameters.server_random +\n *                 SecurityParameters.client_random);\n *\n * until enough output has been generated. Then, the key_block is\n * partitioned as follows:\n *\n * client_write_MAC_key[SecurityParameters.mac_key_length]\n * server_write_MAC_key[SecurityParameters.mac_key_length]\n * client_write_key[SecurityParameters.enc_key_length]\n * server_write_key[SecurityParameters.enc_key_length]\n * client_write_IV[SecurityParameters.fixed_iv_length]\n * server_write_IV[SecurityParameters.fixed_iv_length]\n *\n * In TLS 1.2, the client_write_IV and server_write_IV are only generated for\n * implicit nonce techniques as described in Section 3.2.1 of [AEAD]. This\n * implementation uses TLS 1.0 so IVs are generated.\n *\n * Implementation note: The currently defined cipher suite which requires the\n * most material is AES_256_CBC_SHA256. It requires 2 x 32 byte keys and 2 x 32\n * byte MAC keys, for a total 128 bytes of key material. In TLS 1.0 it also\n * requires 2 x 16 byte IVs, so it actually takes 160 bytes of key material.\n *\n * @param c the connection.\n * @param sp the security parameters to use.\n *\n * @return the security keys.\n */\ntls.generateKeys = function(c, sp) {\n  // TLS_RSA_WITH_AES_128_CBC_SHA (required to be compliant with TLS 1.2) &\n  // TLS_RSA_WITH_AES_256_CBC_SHA are the only cipher suites implemented\n  // at present\n\n  // TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA is required to be compliant with\n  // TLS 1.0 but we don't care right now because AES is better and we have\n  // an implementation for it\n\n  // TODO: TLS 1.2 implementation\n  /*\n  // determine the PRF\n  var prf;\n  switch(sp.prf_algorithm) {\n  case tls.PRFAlgorithm.tls_prf_sha256:\n    prf = prf_sha256;\n    break;\n  default:\n    // should never happen\n    throw new Error('Invalid PRF');\n  }\n  */\n\n  // TLS 1.0/1.1 implementation\n  var prf = prf_TLS1;\n\n  // concatenate server and client random\n  var random = sp.client_random + sp.server_random;\n\n  // only create master secret if session is new\n  if(!c.session.resuming) {\n    // create master secret, clean up pre-master secret\n    sp.master_secret = prf(\n      sp.pre_master_secret, 'master secret', random, 48).bytes();\n    sp.pre_master_secret = null;\n  }\n\n  // generate the amount of key material needed\n  random = sp.server_random + sp.client_random;\n  var length = 2 * sp.mac_key_length + 2 * sp.enc_key_length;\n\n  // include IV for TLS/1.0\n  var tls10 = (c.version.major === tls.Versions.TLS_1_0.major &&\n    c.version.minor === tls.Versions.TLS_1_0.minor);\n  if(tls10) {\n    length += 2 * sp.fixed_iv_length;\n  }\n  var km = prf(sp.master_secret, 'key expansion', random, length);\n\n  // split the key material into the MAC and encryption keys\n  var rval = {\n    client_write_MAC_key: km.getBytes(sp.mac_key_length),\n    server_write_MAC_key: km.getBytes(sp.mac_key_length),\n    client_write_key: km.getBytes(sp.enc_key_length),\n    server_write_key: km.getBytes(sp.enc_key_length)\n  };\n\n  // include TLS 1.0 IVs\n  if(tls10) {\n    rval.client_write_IV = km.getBytes(sp.fixed_iv_length);\n    rval.server_write_IV = km.getBytes(sp.fixed_iv_length);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new initialized TLS connection state. A connection state has\n * a read mode and a write mode.\n *\n * compression state:\n *   The current state of the compression algorithm.\n *\n * cipher state:\n *   The current state of the encryption algorithm. This will consist of the\n *   scheduled key for that connection. For stream ciphers, this will also\n *   contain whatever state information is necessary to allow the stream to\n *   continue to encrypt or decrypt data.\n *\n * MAC key:\n *   The MAC key for the connection.\n *\n * sequence number:\n *   Each connection state contains a sequence number, which is maintained\n *   separately for read and write states. The sequence number MUST be set to\n *   zero whenever a connection state is made the active state. Sequence\n *   numbers are of type uint64 and may not exceed 2^64-1. Sequence numbers do\n *   not wrap. If a TLS implementation would need to wrap a sequence number,\n *   it must renegotiate instead. A sequence number is incremented after each\n *   record: specifically, the first record transmitted under a particular\n *   connection state MUST use sequence number 0.\n *\n * @param c the connection.\n *\n * @return the new initialized TLS connection state.\n */\ntls.createConnectionState = function(c) {\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  var createMode = function() {\n    var mode = {\n      // two 32-bit numbers, first is most significant\n      sequenceNumber: [0, 0],\n      macKey: null,\n      macLength: 0,\n      macFunction: null,\n      cipherState: null,\n      cipherFunction: function(record) {return true;},\n      compressionState: null,\n      compressFunction: function(record) {return true;},\n      updateSequenceNumber: function() {\n        if(mode.sequenceNumber[1] === 0xFFFFFFFF) {\n          mode.sequenceNumber[1] = 0;\n          ++mode.sequenceNumber[0];\n        } else {\n          ++mode.sequenceNumber[1];\n        }\n      }\n    };\n    return mode;\n  };\n  var state = {\n    read: createMode(),\n    write: createMode()\n  };\n\n  // update function in read mode will decrypt then decompress a record\n  state.read.update = function(c, record) {\n    if(!state.read.cipherFunction(record, state.read)) {\n      c.error(c, {\n        message: 'Could not decrypt record or bad MAC.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          // doesn't matter if decryption failed or MAC was\n          // invalid, return the same error so as not to reveal\n          // which one occurred\n          description: tls.Alert.Description.bad_record_mac\n        }\n      });\n    } else if(!state.read.compressFunction(c, record, state.read)) {\n      c.error(c, {\n        message: 'Could not decompress record.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.decompression_failure\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // update function in write mode will compress then encrypt a record\n  state.write.update = function(c, record) {\n    if(!state.write.compressFunction(c, record, state.write)) {\n      // error, but do not send alert since it would require\n      // compression as well\n      c.error(c, {\n        message: 'Could not compress record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else if(!state.write.cipherFunction(record, state.write)) {\n      // error, but do not send alert since it would require\n      // encryption as well\n      c.error(c, {\n        message: 'Could not encrypt record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // handle security parameters\n  if(c.session) {\n    var sp = c.session.sp;\n    c.session.cipherSuite.initSecurityParameters(sp);\n\n    // generate keys\n    sp.keys = tls.generateKeys(c, sp);\n    state.read.macKey = client ?\n      sp.keys.server_write_MAC_key : sp.keys.client_write_MAC_key;\n    state.write.macKey = client ?\n      sp.keys.client_write_MAC_key : sp.keys.server_write_MAC_key;\n\n    // cipher suite setup\n    c.session.cipherSuite.initConnectionState(state, c, sp);\n\n    // compression setup\n    switch(sp.compression_algorithm) {\n    case tls.CompressionMethod.none:\n      break;\n    case tls.CompressionMethod.deflate:\n      state.read.compressFunction = inflate;\n      state.write.compressFunction = deflate;\n      break;\n    default:\n      throw new Error('Unsupported compression algorithm.');\n    }\n  }\n\n  return state;\n};\n\n/**\n * Creates a Random structure.\n *\n * struct {\n *   uint32 gmt_unix_time;\n *   opaque random_bytes[28];\n * } Random;\n *\n * gmt_unix_time:\n *   The current time and date in standard UNIX 32-bit format (seconds since\n *   the midnight starting Jan 1, 1970, UTC, ignoring leap seconds) according\n *   to the sender's internal clock. Clocks are not required to be set\n *   correctly by the basic TLS protocol; higher-level or application\n *   protocols may define additional requirements. Note that, for historical\n *   reasons, the data element is named using GMT, the predecessor of the\n *   current worldwide time base, UTC.\n * random_bytes:\n *   28 bytes generated by a secure random number generator.\n *\n * @return the Random structure as a byte array.\n */\ntls.createRandom = function() {\n  // get UTC milliseconds\n  var d = new Date();\n  var utc = +d + d.getTimezoneOffset() * 60000;\n  var rval = forge.util.createBuffer();\n  rval.putInt32(utc);\n  rval.putBytes(forge.random.getBytes(28));\n  return rval;\n};\n\n/**\n * Creates a TLS record with the given type and data.\n *\n * @param c the connection.\n * @param options:\n *   type: the record type.\n *   data: the plain text data in a byte buffer.\n *\n * @return the created record.\n */\ntls.createRecord = function(c, options) {\n  if(!options.data) {\n    return null;\n  }\n  var record = {\n    type: options.type,\n    version: {\n      major: c.version.major,\n      minor: c.version.minor\n    },\n    length: options.data.length(),\n    fragment: options.data\n  };\n  return record;\n};\n\n/**\n * Creates a TLS alert record.\n *\n * @param c the connection.\n * @param alert:\n *   level: the TLS alert level.\n *   description: the TLS alert description.\n *\n * @return the created alert record.\n */\ntls.createAlert = function(c, alert) {\n  var b = forge.util.createBuffer();\n  b.putByte(alert.level);\n  b.putByte(alert.description);\n  return tls.createRecord(c, {\n    type: tls.ContentType.alert,\n    data: b\n  });\n};\n\n/* The structure of a TLS handshake message.\n *\n * struct {\n *    HandshakeType msg_type;    // handshake type\n *    uint24 length;             // bytes in message\n *    select(HandshakeType) {\n *       case hello_request:       HelloRequest;\n *       case client_hello:        ClientHello;\n *       case server_hello:        ServerHello;\n *       case certificate:         Certificate;\n *       case server_key_exchange: ServerKeyExchange;\n *       case certificate_request: CertificateRequest;\n *       case server_hello_done:   ServerHelloDone;\n *       case certificate_verify:  CertificateVerify;\n *       case client_key_exchange: ClientKeyExchange;\n *       case finished:            Finished;\n *    } body;\n * } Handshake;\n */\n\n/**\n * Creates a ClientHello message.\n *\n * opaque SessionID<0..32>;\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n * uint8 CipherSuite[2];\n *\n * struct {\n *   ProtocolVersion client_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suites<2..2^16-2>;\n *   CompressionMethod compression_methods<1..2^8-1>;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ClientHello;\n *\n * The extension format for extended client hellos and server hellos is:\n *\n * struct {\n *   ExtensionType extension_type;\n *   opaque extension_data<0..2^16-1>;\n * } Extension;\n *\n * Here:\n *\n * - \"extension_type\" identifies the particular extension type.\n * - \"extension_data\" contains information specific to the particular\n * extension type.\n *\n * The extension types defined in this document are:\n *\n * enum {\n *   server_name(0), max_fragment_length(1),\n *   client_certificate_url(2), trusted_ca_keys(3),\n *   truncated_hmac(4), status_request(5), (65535)\n * } ExtensionType;\n *\n * @param c the connection.\n *\n * @return the ClientHello byte buffer.\n */\ntls.createClientHello = function(c) {\n  // save hello version\n  c.session.clientHelloVersion = {\n    major: c.version.major,\n    minor: c.version.minor\n  };\n\n  // create supported cipher suites\n  var cipherSuites = forge.util.createBuffer();\n  for(var i = 0; i < c.cipherSuites.length; ++i) {\n    var cs = c.cipherSuites[i];\n    cipherSuites.putByte(cs.id[0]);\n    cipherSuites.putByte(cs.id[1]);\n  }\n  var cSuites = cipherSuites.length();\n\n  // create supported compression methods, null always supported, but\n  // also support deflate if connection has inflate and deflate methods\n  var compressionMethods = forge.util.createBuffer();\n  compressionMethods.putByte(tls.CompressionMethod.none);\n  // FIXME: deflate support disabled until issues with raw deflate data\n  // without zlib headers are resolved\n  /*\n  if(c.inflate !== null && c.deflate !== null) {\n    compressionMethods.putByte(tls.CompressionMethod.deflate);\n  }\n  */\n  var cMethods = compressionMethods.length();\n\n  // create TLS SNI (server name indication) extension if virtual host\n  // has been specified, see RFC 3546\n  var extensions = forge.util.createBuffer();\n  if(c.virtualHost) {\n    // create extension struct\n    var ext = forge.util.createBuffer();\n    ext.putByte(0x00); // type server_name (ExtensionType is 2 bytes)\n    ext.putByte(0x00);\n\n    /* In order to provide the server name, clients MAY include an\n     * extension of type \"server_name\" in the (extended) client hello.\n     * The \"extension_data\" field of this extension SHALL contain\n     * \"ServerNameList\" where:\n     *\n     * struct {\n     *   NameType name_type;\n     *   select(name_type) {\n     *     case host_name: HostName;\n     *   } name;\n     * } ServerName;\n     *\n     * enum {\n     *   host_name(0), (255)\n     * } NameType;\n     *\n     * opaque HostName<1..2^16-1>;\n     *\n     * struct {\n     *   ServerName server_name_list<1..2^16-1>\n     * } ServerNameList;\n     */\n    var serverName = forge.util.createBuffer();\n    serverName.putByte(0x00); // type host_name\n    writeVector(serverName, 2, forge.util.createBuffer(c.virtualHost));\n\n    // ServerNameList is in extension_data\n    var snList = forge.util.createBuffer();\n    writeVector(snList, 2, serverName);\n    writeVector(ext, 2, snList);\n    extensions.putBuffer(ext);\n  }\n  var extLength = extensions.length();\n  if(extLength > 0) {\n    // add extension vector length\n    extLength += 2;\n  }\n\n  // determine length of the handshake message\n  // cipher suites and compression methods size will need to be\n  // updated if more get added to the list\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 + cSuites +          // cipher suites vector\n    1 + cMethods +         // compression methods vector\n    extLength;             // extensions vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.client_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  writeVector(rval, 2, cipherSuites);\n  writeVector(rval, 1, compressionMethods);\n  if(extLength > 0) {\n    writeVector(rval, 2, extensions);\n  }\n  return rval;\n};\n\n/**\n * Creates a ServerHello message.\n *\n * @param c the connection.\n *\n * @return the ServerHello byte buffer.\n */\ntls.createServerHello = function(c) {\n  // determine length of the handshake message\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 +                    // chosen cipher suite\n    1;                     // chosen compression method\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.server_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  rval.putByte(c.session.cipherSuite.id[0]);\n  rval.putByte(c.session.cipherSuite.id[1]);\n  rval.putByte(c.session.compressionMethod);\n  return rval;\n};\n\n/**\n * Creates a Certificate message.\n *\n * When this message will be sent:\n *   This is the first message the client can send after receiving a server\n *   hello done message and the first message the server can send after\n *   sending a ServerHello. This client message is only sent if the server\n *   requests a certificate. If no suitable certificate is available, the\n *   client should send a certificate message containing no certificates. If\n *   client authentication is required by the server for the handshake to\n *   continue, it may respond with a fatal handshake failure alert.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n *\n * struct {\n *   ASN.1Cert certificate_list<0..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n *\n * @return the Certificate byte buffer.\n */\ntls.createCertificate = function(c) {\n  // TODO: check certificate request to ensure types are supported\n\n  // get a certificate (a certificate as a PEM string)\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var cert = null;\n  if(c.getCertificate) {\n    var hint;\n    if(client) {\n      hint = c.session.certificateRequest;\n    } else {\n      hint = c.session.extensions.server_name.serverNameList;\n    }\n    cert = c.getCertificate(c, hint);\n  }\n\n  // buffer to hold certificate list\n  var certList = forge.util.createBuffer();\n  if(cert !== null) {\n    try {\n      // normalize cert to a chain of certificates\n      if(!forge.util.isArray(cert)) {\n        cert = [cert];\n      }\n      var asn1 = null;\n      for(var i = 0; i < cert.length; ++i) {\n        var msg = forge.pem.decode(cert[i])[0];\n        if(msg.type !== 'CERTIFICATE' &&\n          msg.type !== 'X509 CERTIFICATE' &&\n          msg.type !== 'TRUSTED CERTIFICATE') {\n          var error = new Error('Could not convert certificate from PEM; PEM ' +\n            'header type is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or ' +\n            '\"TRUSTED CERTIFICATE\".');\n          error.headerType = msg.type;\n          throw error;\n        }\n        if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n          throw new Error('Could not convert certificate from PEM; PEM is encrypted.');\n        }\n\n        var der = forge.util.createBuffer(msg.body);\n        if(asn1 === null) {\n          asn1 = forge.asn1.fromDer(der.bytes(), false);\n        }\n\n        // certificate entry is itself a vector with 3 length bytes\n        var certBuffer = forge.util.createBuffer();\n        writeVector(certBuffer, 3, der);\n\n        // add cert vector to cert list vector\n        certList.putBuffer(certBuffer);\n      }\n\n      // save certificate\n      cert = forge.pki.certificateFromAsn1(asn1);\n      if(client) {\n        c.session.clientCertificate = cert;\n      } else {\n        c.session.serverCertificate = cert;\n      }\n    } catch(ex) {\n      return c.error(c, {\n        message: 'Could not send certificate list.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.bad_certificate\n        }\n      });\n    }\n  }\n\n  // determine length of the handshake message\n  var length = 3 + certList.length(); // cert list vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate);\n  rval.putInt24(length);\n  writeVector(rval, 3, certList);\n  return rval;\n};\n\n/**\n * Creates a ClientKeyExchange message.\n *\n * When this message will be sent:\n *   This message is always sent by the client. It will immediately follow the\n *   client certificate message, if it is sent. Otherwise it will be the first\n *   message sent by the client after it receives the server hello done\n *   message.\n *\n * Meaning of this message:\n *   With this message, the premaster secret is set, either though direct\n *   transmission of the RSA-encrypted secret, or by the transmission of\n *   Diffie-Hellman parameters which will allow each side to agree upon the\n *   same premaster secret. When the key exchange method is DH_RSA or DH_DSS,\n *   client certification has been requested, and the client was able to\n *   respond with a certificate which contained a Diffie-Hellman public key\n *   whose parameters (group and generator) matched those specified by the\n *   server in its certificate, this message will not contain any data.\n *\n * Meaning of this message:\n *   If RSA is being used for key agreement and authentication, the client\n *   generates a 48-byte premaster secret, encrypts it using the public key\n *   from the server's certificate or the temporary RSA key provided in a\n *   server key exchange message, and sends the result in an encrypted\n *   premaster secret message. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case rsa: EncryptedPreMasterSecret;\n *     case diffie_hellman: ClientDiffieHellmanPublic;\n *   } exchange_keys;\n * } ClientKeyExchange;\n *\n * struct {\n *   ProtocolVersion client_version;\n *   opaque random[46];\n * } PreMasterSecret;\n *\n * struct {\n *   public-key-encrypted PreMasterSecret pre_master_secret;\n * } EncryptedPreMasterSecret;\n *\n * A public-key-encrypted element is encoded as a vector <0..2^16-1>.\n *\n * @param c the connection.\n *\n * @return the ClientKeyExchange byte buffer.\n */\ntls.createClientKeyExchange = function(c) {\n  // create buffer to encrypt\n  var b = forge.util.createBuffer();\n\n  // add highest client-supported protocol to help server avoid version\n  // rollback attacks\n  b.putByte(c.session.clientHelloVersion.major);\n  b.putByte(c.session.clientHelloVersion.minor);\n\n  // generate and add 46 random bytes\n  b.putBytes(forge.random.getBytes(46));\n\n  // save pre-master secret\n  var sp = c.session.sp;\n  sp.pre_master_secret = b.getBytes();\n\n  // RSA-encrypt the pre-master secret\n  var key = c.session.serverCertificate.publicKey;\n  b = key.encrypt(sp.pre_master_secret);\n\n  /* Note: The encrypted pre-master secret will be stored in a\n    public-key-encrypted opaque vector that has the length prefixed using\n    2 bytes, so include those 2 bytes in the handshake message length. This\n    is done as a minor optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = b.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_key_exchange);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(b.length);\n  rval.putBytes(b);\n  return rval;\n};\n\n/**\n * Creates a ServerKeyExchange message.\n *\n * @param c the connection.\n *\n * @return the ServerKeyExchange byte buffer.\n */\ntls.createServerKeyExchange = function(c) {\n  // this implementation only supports RSA, no Diffie-Hellman support,\n  // so this record is empty\n\n  // determine length of the handshake message\n  var length = 0;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  if(length > 0) {\n    rval.putByte(tls.HandshakeType.server_key_exchange);\n    rval.putInt24(length);\n  }\n  return rval;\n};\n\n/**\n * Gets the signed data used to verify a client-side certificate. See\n * tls.createCertificateVerify() for details.\n *\n * @param c the connection.\n * @param callback the callback to call once the signed data is ready.\n */\ntls.getClientSignature = function(c, callback) {\n  // generate data to RSA encrypt\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n  b = b.getBytes();\n\n  // create default signing function as necessary\n  c.getSignature = c.getSignature || function(c, b, callback) {\n    // do rsa encryption, call callback\n    var privateKey = null;\n    if(c.getPrivateKey) {\n      try {\n        privateKey = c.getPrivateKey(c, c.session.clientCertificate);\n        privateKey = forge.pki.privateKeyFromPem(privateKey);\n      } catch(ex) {\n        c.error(c, {\n          message: 'Could not get private key.',\n          cause: ex,\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.internal_error\n          }\n        });\n      }\n    }\n    if(privateKey === null) {\n      c.error(c, {\n        message: 'No private key set.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else {\n      b = privateKey.sign(b, null);\n    }\n    callback(c, b);\n  };\n\n  // get client signature\n  c.getSignature(c, b, callback);\n};\n\n/**\n * Creates a CertificateVerify message.\n *\n * Meaning of this message:\n *   This structure conveys the client's Diffie-Hellman public value\n *   (Yc) if it was not already included in the client's certificate.\n *   The encoding used for Yc is determined by the enumerated\n *   PublicValueEncoding. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * When this message will be sent:\n *   This message is used to provide explicit verification of a client\n *   certificate. This message is only sent following a client\n *   certificate that has signing capability (i.e. all certificates\n *   except those containing fixed Diffie-Hellman parameters). When\n *   sent, it will immediately follow the client key exchange message.\n *\n * struct {\n *   Signature signature;\n * } CertificateVerify;\n *\n * CertificateVerify.signature.md5_hash\n *   MD5(handshake_messages);\n *\n * Certificate.signature.sha_hash\n *   SHA(handshake_messages);\n *\n * Here handshake_messages refers to all handshake messages sent or\n * received starting at client hello up to but not including this\n * message, including the type and length fields of the handshake\n * messages.\n *\n * select(SignatureAlgorithm) {\n *   case anonymous: struct { };\n *   case rsa:\n *     digitally-signed struct {\n *       opaque md5_hash[16];\n *       opaque sha_hash[20];\n *     };\n *   case dsa:\n *     digitally-signed struct {\n *       opaque sha_hash[20];\n *     };\n * } Signature;\n *\n * In digital signing, one-way hash functions are used as input for a\n * signing algorithm. A digitally-signed element is encoded as an opaque\n * vector <0..2^16-1>, where the length is specified by the signing\n * algorithm and key.\n *\n * In RSA signing, a 36-byte structure of two hashes (one SHA and one\n * MD5) is signed (encrypted with the private key). It is encoded with\n * PKCS #1 block type 0 or type 1 as described in [PKCS1].\n *\n * In DSS, the 20 bytes of the SHA hash are run directly through the\n * Digital Signing Algorithm with no additional hashing.\n *\n * @param c the connection.\n * @param signature the signature to include in the message.\n *\n * @return the CertificateVerify byte buffer.\n */\ntls.createCertificateVerify = function(c, signature) {\n  /* Note: The signature will be stored in a \"digitally-signed\" opaque\n    vector that has the length prefixed using 2 bytes, so include those\n    2 bytes in the handshake message length. This is done as a minor\n    optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = signature.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_verify);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(signature.length);\n  rval.putBytes(signature);\n  return rval;\n};\n\n/**\n * Creates a CertificateRequest message.\n *\n * @param c the connection.\n *\n * @return the CertificateRequest byte buffer.\n */\ntls.createCertificateRequest = function(c) {\n  // TODO: support other certificate types\n  var certTypes = forge.util.createBuffer();\n\n  // common RSA certificate type\n  certTypes.putByte(0x01);\n\n  // add distinguished names from CA store\n  var cAs = forge.util.createBuffer();\n  for(var key in c.caStore.certs) {\n    var cert = c.caStore.certs[key];\n    var dn = forge.pki.distinguishedNameToAsn1(cert.subject);\n    var byteBuffer = forge.asn1.toDer(dn);\n    cAs.putInt16(byteBuffer.length());\n    cAs.putBuffer(byteBuffer);\n  }\n\n  // TODO: TLS 1.2+ has a different format\n\n  // determine length of the handshake message\n  var length =\n    1 + certTypes.length() +\n    2 + cAs.length();\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_request);\n  rval.putInt24(length);\n  writeVector(rval, 1, certTypes);\n  writeVector(rval, 2, cAs);\n  return rval;\n};\n\n/**\n * Creates a ServerHelloDone message.\n *\n * @param c the connection.\n *\n * @return the ServerHelloDone byte buffer.\n */\ntls.createServerHelloDone = function(c) {\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello_done);\n  rval.putInt24(0);\n  return rval;\n};\n\n/**\n * Creates a ChangeCipherSpec message.\n *\n * The change cipher spec protocol exists to signal transitions in\n * ciphering strategies. The protocol consists of a single message,\n * which is encrypted and compressed under the current (not the pending)\n * connection state. The message consists of a single byte of value 1.\n *\n * struct {\n *   enum { change_cipher_spec(1), (255) } type;\n * } ChangeCipherSpec;\n *\n * @return the ChangeCipherSpec byte buffer.\n */\ntls.createChangeCipherSpec = function() {\n  var rval = forge.util.createBuffer();\n  rval.putByte(0x01);\n  return rval;\n};\n\n/**\n * Creates a Finished message.\n *\n * struct {\n *   opaque verify_data[12];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, MD5(handshake_messages) +\n *   SHA-1(handshake_messages)) [0..11];\n *\n * finished_label\n *   For Finished messages sent by the client, the string \"client\n *   finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * handshake_messages\n *   All of the data from all handshake messages up to but not\n *   including this message. This is only data visible at the\n *   handshake layer and does not include record layer headers.\n *   This is the concatenation of all the Handshake structures as\n *   defined in 7.4 exchanged thus far.\n *\n * @param c the connection.\n *\n * @return the Finished byte buffer.\n */\ntls.createFinished = function(c) {\n  // generate verify_data\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  var label = client ? 'client finished' : 'server finished';\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.finished);\n  rval.putInt24(b.length());\n  rval.putBuffer(b);\n  return rval;\n};\n\n/**\n * Creates a HeartbeatMessage (See RFC 6520).\n *\n * struct {\n *   HeartbeatMessageType type;\n *   uint16 payload_length;\n *   opaque payload[HeartbeatMessage.payload_length];\n *   opaque padding[padding_length];\n * } HeartbeatMessage;\n *\n * The total length of a HeartbeatMessage MUST NOT exceed 2^14 or\n * max_fragment_length when negotiated as defined in [RFC6066].\n *\n * type: The message type, either heartbeat_request or heartbeat_response.\n *\n * payload_length: The length of the payload.\n *\n * payload: The payload consists of arbitrary content.\n *\n * padding: The padding is random content that MUST be ignored by the\n *   receiver. The length of a HeartbeatMessage is TLSPlaintext.length\n *   for TLS and DTLSPlaintext.length for DTLS. Furthermore, the\n *   length of the type field is 1 byte, and the length of the\n *   payload_length is 2. Therefore, the padding_length is\n *   TLSPlaintext.length - payload_length - 3 for TLS and\n *   DTLSPlaintext.length - payload_length - 3 for DTLS. The\n *   padding_length MUST be at least 16.\n *\n * The sender of a HeartbeatMessage MUST use a random padding of at\n * least 16 bytes. The padding of a received HeartbeatMessage message\n * MUST be ignored.\n *\n * If the payload_length of a received HeartbeatMessage is too large,\n * the received HeartbeatMessage MUST be discarded silently.\n *\n * @param c the connection.\n * @param type the tls.HeartbeatMessageType.\n * @param payload the heartbeat data to send as the payload.\n * @param [payloadLength] the payload length to use, defaults to the\n *          actual payload length.\n *\n * @return the HeartbeatRequest byte buffer.\n */\ntls.createHeartbeat = function(type, payload, payloadLength) {\n  if(typeof payloadLength === 'undefined') {\n    payloadLength = payload.length;\n  }\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(type);               // heartbeat message type\n  rval.putInt16(payloadLength);     // payload length\n  rval.putBytes(payload);           // payload\n  // padding\n  var plaintextLength = rval.length();\n  var paddingLength = Math.max(16, plaintextLength - payloadLength - 3);\n  rval.putBytes(forge.random.getBytes(paddingLength));\n  return rval;\n};\n\n/**\n * Fragments, compresses, encrypts, and queues a record for delivery.\n *\n * @param c the connection.\n * @param record the record to queue.\n */\ntls.queue = function(c, record) {\n  // error during record creation\n  if(!record) {\n    return;\n  }\n\n  if(record.fragment.length() === 0) {\n    if(record.type === tls.ContentType.handshake ||\n      record.type === tls.ContentType.alert ||\n      record.type === tls.ContentType.change_cipher_spec) {\n      // Empty handshake, alert of change cipher spec messages are not allowed per the TLS specification and should not be sent.\n      return;\n    }\n  }\n\n  // if the record is a handshake record, update handshake hashes\n  if(record.type === tls.ContentType.handshake) {\n    var bytes = record.fragment.bytes();\n    c.session.md5.update(bytes);\n    c.session.sha1.update(bytes);\n    bytes = null;\n  }\n\n  // handle record fragmentation\n  var records;\n  if(record.fragment.length() <= tls.MaxFragment) {\n    records = [record];\n  } else {\n    // fragment data as long as it is too long\n    records = [];\n    var data = record.fragment.bytes();\n    while(data.length > tls.MaxFragment) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data.slice(0, tls.MaxFragment))\n      }));\n      data = data.slice(tls.MaxFragment);\n    }\n    // add last record\n    if(data.length > 0) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data)\n      }));\n    }\n  }\n\n  // compress and encrypt all fragmented records\n  for(var i = 0; i < records.length && !c.fail; ++i) {\n    // update the record using current write state\n    var rec = records[i];\n    var s = c.state.current.write;\n    if(s.update(c, rec)) {\n      // store record\n      c.records.push(rec);\n    }\n  }\n};\n\n/**\n * Flushes all queued records to the output buffer and calls the\n * tlsDataReady() handler on the given connection.\n *\n * @param c the connection.\n *\n * @return true on success, false on failure.\n */\ntls.flush = function(c) {\n  for(var i = 0; i < c.records.length; ++i) {\n    var record = c.records[i];\n\n    // add record header and fragment\n    c.tlsData.putByte(record.type);\n    c.tlsData.putByte(record.version.major);\n    c.tlsData.putByte(record.version.minor);\n    c.tlsData.putInt16(record.fragment.length());\n    c.tlsData.putBuffer(c.records[i].fragment);\n  }\n  c.records = [];\n  return c.tlsDataReady(c);\n};\n\n/**\n * Maps a pki.certificateError to a tls.Alert.Description.\n *\n * @param error the error to map.\n *\n * @return the alert description.\n */\nvar _certErrorToAlertDesc = function(error) {\n  switch(error) {\n  case true:\n    return true;\n  case forge.pki.certificateError.bad_certificate:\n    return tls.Alert.Description.bad_certificate;\n  case forge.pki.certificateError.unsupported_certificate:\n    return tls.Alert.Description.unsupported_certificate;\n  case forge.pki.certificateError.certificate_revoked:\n    return tls.Alert.Description.certificate_revoked;\n  case forge.pki.certificateError.certificate_expired:\n    return tls.Alert.Description.certificate_expired;\n  case forge.pki.certificateError.certificate_unknown:\n    return tls.Alert.Description.certificate_unknown;\n  case forge.pki.certificateError.unknown_ca:\n    return tls.Alert.Description.unknown_ca;\n  default:\n    return tls.Alert.Description.bad_certificate;\n  }\n};\n\n/**\n * Maps a tls.Alert.Description to a pki.certificateError.\n *\n * @param desc the alert description.\n *\n * @return the certificate error.\n */\nvar _alertDescToCertError = function(desc) {\n  switch(desc) {\n  case true:\n    return true;\n  case tls.Alert.Description.bad_certificate:\n    return forge.pki.certificateError.bad_certificate;\n  case tls.Alert.Description.unsupported_certificate:\n    return forge.pki.certificateError.unsupported_certificate;\n  case tls.Alert.Description.certificate_revoked:\n    return forge.pki.certificateError.certificate_revoked;\n  case tls.Alert.Description.certificate_expired:\n    return forge.pki.certificateError.certificate_expired;\n  case tls.Alert.Description.certificate_unknown:\n    return forge.pki.certificateError.certificate_unknown;\n  case tls.Alert.Description.unknown_ca:\n    return forge.pki.certificateError.unknown_ca;\n  default:\n    return forge.pki.certificateError.bad_certificate;\n  }\n};\n\n/**\n * Verifies a certificate chain against the given connection's\n * Certificate Authority store.\n *\n * @param c the TLS connection.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end.\n *\n * @return true if successful, false if not.\n */\ntls.verifyCertificateChain = function(c, chain) {\n  try {\n    // verify chain\n    forge.pki.verifyCertificateChain(c.caStore, chain,\n      function verify(vfd, depth, chain) {\n        // convert pki.certificateError to tls alert description\n        var desc = _certErrorToAlertDesc(vfd);\n\n        // call application callback\n        var ret = c.verify(c, vfd, depth, chain);\n        if(ret !== true) {\n          if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n            // throw custom error\n            var error = new Error('The application rejected the certificate.');\n            error.send = true;\n            error.alert = {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.bad_certificate\n            };\n            if(ret.message) {\n              error.message = ret.message;\n            }\n            if(ret.alert) {\n              error.alert.description = ret.alert;\n            }\n            throw error;\n          }\n\n          // convert tls alert description to pki.certificateError\n          if(ret !== vfd) {\n            ret = _alertDescToCertError(ret);\n          }\n        }\n\n        return ret;\n      });\n  } catch(ex) {\n    // build tls error if not already customized\n    var err = ex;\n    if(typeof err !== 'object' || forge.util.isArray(err)) {\n      err = {\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: _certErrorToAlertDesc(ex)\n        }\n      };\n    }\n    if(!('send' in err)) {\n      err.send = true;\n    }\n    if(!('alert' in err)) {\n      err.alert = {\n        level: tls.Alert.Level.fatal,\n        description: _certErrorToAlertDesc(err.error)\n      };\n    }\n\n    // send error\n    c.error(c, err);\n  }\n\n  return !c.fail;\n};\n\n/**\n * Creates a new TLS session cache.\n *\n * @param cache optional map of session ID to cached session.\n * @param capacity the maximum size for the cache (default: 100).\n *\n * @return the new TLS session cache.\n */\ntls.createSessionCache = function(cache, capacity) {\n  var rval = null;\n\n  // assume input is already a session cache object\n  if(cache && cache.getSession && cache.setSession && cache.order) {\n    rval = cache;\n  } else {\n    // create cache\n    rval = {};\n    rval.cache = cache || {};\n    rval.capacity = Math.max(capacity || 100, 1);\n    rval.order = [];\n\n    // store order for sessions, delete session overflow\n    for(var key in cache) {\n      if(rval.order.length <= capacity) {\n        rval.order.push(key);\n      } else {\n        delete cache[key];\n      }\n    }\n\n    // get a session from a session ID (or get any session)\n    rval.getSession = function(sessionId) {\n      var session = null;\n      var key = null;\n\n      // if session ID provided, use it\n      if(sessionId) {\n        key = forge.util.bytesToHex(sessionId);\n      } else if(rval.order.length > 0) {\n        // get first session from cache\n        key = rval.order[0];\n      }\n\n      if(key !== null && key in rval.cache) {\n        // get cached session and remove from cache\n        session = rval.cache[key];\n        delete rval.cache[key];\n        for(var i in rval.order) {\n          if(rval.order[i] === key) {\n            rval.order.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      return session;\n    };\n\n    // set a session in the cache\n    rval.setSession = function(sessionId, session) {\n      // remove session from cache if at capacity\n      if(rval.order.length === rval.capacity) {\n        var key = rval.order.shift();\n        delete rval.cache[key];\n      }\n      // add session to cache\n      var key = forge.util.bytesToHex(sessionId);\n      rval.order.push(key);\n      rval.cache[key] = session;\n    };\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new TLS connection.\n *\n * See public createConnection() docs for more details.\n *\n * @param options the options for this connection.\n *\n * @return the new TLS connection.\n */\ntls.createConnection = function(options) {\n  var caStore = null;\n  if(options.caStore) {\n    // if CA store is an array, convert it to a CA store object\n    if(forge.util.isArray(options.caStore)) {\n      caStore = forge.pki.createCaStore(options.caStore);\n    } else {\n      caStore = options.caStore;\n    }\n  } else {\n    // create empty CA store\n    caStore = forge.pki.createCaStore();\n  }\n\n  // setup default cipher suites\n  var cipherSuites = options.cipherSuites || null;\n  if(cipherSuites === null) {\n    cipherSuites = [];\n    for(var key in tls.CipherSuites) {\n      cipherSuites.push(tls.CipherSuites[key]);\n    }\n  }\n\n  // set default entity\n  var entity = (options.server || false) ?\n    tls.ConnectionEnd.server : tls.ConnectionEnd.client;\n\n  // create session cache if requested\n  var sessionCache = options.sessionCache ?\n    tls.createSessionCache(options.sessionCache) : null;\n\n  // create TLS connection\n  var c = {\n    version: {major: tls.Version.major, minor: tls.Version.minor},\n    entity: entity,\n    sessionId: options.sessionId,\n    caStore: caStore,\n    sessionCache: sessionCache,\n    cipherSuites: cipherSuites,\n    connected: options.connected,\n    virtualHost: options.virtualHost || null,\n    verifyClient: options.verifyClient || false,\n    verify: options.verify || function(cn, vfd, dpth, cts) {return vfd;},\n    getCertificate: options.getCertificate || null,\n    getPrivateKey: options.getPrivateKey || null,\n    getSignature: options.getSignature || null,\n    input: forge.util.createBuffer(),\n    tlsData: forge.util.createBuffer(),\n    data: forge.util.createBuffer(),\n    tlsDataReady: options.tlsDataReady,\n    dataReady: options.dataReady,\n    heartbeatReceived: options.heartbeatReceived,\n    closed: options.closed,\n    error: function(c, ex) {\n      // set origin if not set\n      ex.origin = ex.origin ||\n        ((c.entity === tls.ConnectionEnd.client) ? 'client' : 'server');\n\n      // send TLS alert\n      if(ex.send) {\n        tls.queue(c, tls.createAlert(c, ex.alert));\n        tls.flush(c);\n      }\n\n      // error is fatal by default\n      var fatal = (ex.fatal !== false);\n      if(fatal) {\n        // set fail flag\n        c.fail = true;\n      }\n\n      // call error handler first\n      options.error(c, ex);\n\n      if(fatal) {\n        // fatal error, close connection, do not clear fail\n        c.close(false);\n      }\n    },\n    deflate: options.deflate || null,\n    inflate: options.inflate || null\n  };\n\n  /**\n   * Resets a closed TLS connection for reuse. Called in c.close().\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.reset = function(clearFail) {\n    c.version = {major: tls.Version.major, minor: tls.Version.minor};\n    c.record = null;\n    c.session = null;\n    c.peerCertificate = null;\n    c.state = {\n      pending: null,\n      current: null\n    };\n    c.expect = (c.entity === tls.ConnectionEnd.client) ? SHE : CHE;\n    c.fragmented = null;\n    c.records = [];\n    c.open = false;\n    c.handshakes = 0;\n    c.handshaking = false;\n    c.isConnected = false;\n    c.fail = !(clearFail || typeof(clearFail) === 'undefined');\n    c.input.clear();\n    c.tlsData.clear();\n    c.data.clear();\n    c.state.current = tls.createConnectionState(c);\n  };\n\n  // do initial reset of connection\n  c.reset();\n\n  /**\n   * Updates the current TLS engine state based on the given record.\n   *\n   * @param c the TLS connection.\n   * @param record the TLS record to act on.\n   */\n  var _update = function(c, record) {\n    // get record handler (align type in table by subtracting lowest)\n    var aligned = record.type - tls.ContentType.change_cipher_spec;\n    var handlers = ctTable[c.entity][c.expect];\n    if(aligned in handlers) {\n      handlers[aligned](c, record);\n    } else {\n      // unexpected record\n      tls.handleUnexpected(c, record);\n    }\n  };\n\n  /**\n   * Reads the record header and initializes the next record on the given\n   * connection.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecordHeader = function(c) {\n    var rval = 0;\n\n    // get input buffer and its length\n    var b = c.input;\n    var len = b.length();\n\n    // need at least 5 bytes to initialize a record\n    if(len < 5) {\n      rval = 5 - len;\n    } else {\n      // enough bytes for header\n      // initialize record\n      c.record = {\n        type: b.getByte(),\n        version: {\n          major: b.getByte(),\n          minor: b.getByte()\n        },\n        length: b.getInt16(),\n        fragment: forge.util.createBuffer(),\n        ready: false\n      };\n\n      // check record version\n      var compatibleVersion = (c.record.version.major === c.version.major);\n      if(compatibleVersion && c.session && c.session.version) {\n        // session version already set, require same minor version\n        compatibleVersion = (c.record.version.minor === c.version.minor);\n      }\n      if(!compatibleVersion) {\n        c.error(c, {\n          message: 'Incompatible TLS version.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Reads the next record's contents and appends its message to any\n   * previously fragmented message.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecord = function(c) {\n    var rval = 0;\n\n    // ensure there is enough input data to get the entire record\n    var b = c.input;\n    var len = b.length();\n    if(len < c.record.length) {\n      // not enough data yet, return how much is required\n      rval = c.record.length - len;\n    } else {\n      // there is enough data to parse the pending record\n      // fill record fragment and compact input buffer\n      c.record.fragment.putBytes(b.getBytes(c.record.length));\n      b.compact();\n\n      // update record using current read state\n      var s = c.state.current.read;\n      if(s.update(c, c.record)) {\n        // see if there is a previously fragmented message that the\n        // new record's message fragment should be appended to\n        if(c.fragmented !== null) {\n          // if the record type matches a previously fragmented\n          // record, append the record fragment to it\n          if(c.fragmented.type === c.record.type) {\n            // concatenate record fragments\n            c.fragmented.fragment.putBuffer(c.record.fragment);\n            c.record = c.fragmented;\n          } else {\n            // error, invalid fragmented record\n            c.error(c, {\n              message: 'Invalid fragmented record.',\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description:\n                  tls.Alert.Description.unexpected_message\n              }\n            });\n          }\n        }\n\n        // record is now ready\n        c.record.ready = true;\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Performs a handshake using the TLS Handshake Protocol, as a client.\n   *\n   * This method should only be called if the connection is in client mode.\n   *\n   * @param sessionId the session ID to use, null to start a new one.\n   */\n  c.handshake = function(sessionId) {\n    // error to call this in non-client mode\n    if(c.entity !== tls.ConnectionEnd.client) {\n      // not fatal error\n      c.error(c, {\n        message: 'Cannot initiate handshake as a server.',\n        fatal: false\n      });\n    } else if(c.handshaking) {\n      // handshake is already in progress, fail but not fatal error\n      c.error(c, {\n        message: 'Handshake already in progress.',\n        fatal: false\n      });\n    } else {\n      // clear fail flag on reuse\n      if(c.fail && !c.open && c.handshakes === 0) {\n        c.fail = false;\n      }\n\n      // now handshaking\n      c.handshaking = true;\n\n      // default to blank (new session)\n      sessionId = sessionId || '';\n\n      // if a session ID was specified, try to find it in the cache\n      var session = null;\n      if(sessionId.length > 0) {\n        if(c.sessionCache) {\n          session = c.sessionCache.getSession(sessionId);\n        }\n\n        // matching session not found in cache, clear session ID\n        if(session === null) {\n          sessionId = '';\n        }\n      }\n\n      // no session given, grab a session from the cache, if available\n      if(sessionId.length === 0 && c.sessionCache) {\n        session = c.sessionCache.getSession();\n        if(session !== null) {\n          sessionId = session.id;\n        }\n      }\n\n      // set up session\n      c.session = {\n        id: sessionId,\n        version: null,\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        certificateRequest: null,\n        clientCertificate: null,\n        sp: {},\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n\n      // use existing session information\n      if(session) {\n        // only update version on connection, session version not yet set\n        c.version = session.version;\n        c.session.sp = session.sp;\n      }\n\n      // generate new client random\n      c.session.sp.client_random = tls.createRandom().getBytes();\n\n      // connection now open\n      c.open = true;\n\n      // send hello\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createClientHello(c)\n      }));\n      tls.flush(c);\n    }\n  };\n\n  /**\n   * Called when TLS protocol data has been received from somewhere and should\n   * be processed by the TLS engine.\n   *\n   * @param data the TLS protocol data, as a string, to process.\n   *\n   * @return 0 if the data could be processed, otherwise the number of bytes\n   *         required for data to be processed.\n   */\n  c.process = function(data) {\n    var rval = 0;\n\n    // buffer input data\n    if(data) {\n      c.input.putBytes(data);\n    }\n\n    // process next record if no failure, process will be called after\n    // each record is handled (since handling can be asynchronous)\n    if(!c.fail) {\n      // reset record if ready and now empty\n      if(c.record !== null &&\n        c.record.ready && c.record.fragment.isEmpty()) {\n        c.record = null;\n      }\n\n      // if there is no pending record, try to read record header\n      if(c.record === null) {\n        rval = _readRecordHeader(c);\n      }\n\n      // read the next record (if record not yet ready)\n      if(!c.fail && c.record !== null && !c.record.ready) {\n        rval = _readRecord(c);\n      }\n\n      // record ready to be handled, update engine state\n      if(!c.fail && c.record !== null && c.record.ready) {\n        _update(c, c.record);\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Requests that application data be packaged into a TLS record. The\n   * tlsDataReady handler will be called when the TLS record(s) have been\n   * prepared.\n   *\n   * @param data the application data, as a raw 'binary' encoded string, to\n   *          be sent; to send utf-16/utf-8 string data, use the return value\n   *          of util.encodeUtf8(str).\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepare = function(data) {\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.application_data,\n      data: forge.util.createBuffer(data)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Requests that a heartbeat request be packaged into a TLS record for\n   * transmission. The tlsDataReady handler will be called when TLS record(s)\n   * have been prepared.\n   *\n   * When a heartbeat response has been received, the heartbeatReceived\n   * handler will be called with the matching payload. This handler can\n   * be used to clear a retransmission timer, etc.\n   *\n   * @param payload the heartbeat data to send as the payload in the message.\n   * @param [payloadLength] the payload length to use, defaults to the\n   *          actual payload length.\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepareHeartbeatRequest = function(payload, payloadLength) {\n    if(payload instanceof forge.util.ByteBuffer) {\n      payload = payload.bytes();\n    }\n    if(typeof payloadLength === 'undefined') {\n      payloadLength = payload.length;\n    }\n    c.expectedHeartbeatPayload = payload;\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_request, payload, payloadLength)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Closes the connection (sends a close_notify alert).\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.close = function(clearFail) {\n    // save session if connection didn't fail\n    if(!c.fail && c.sessionCache && c.session) {\n      // only need to preserve session ID, version, and security params\n      var session = {\n        id: c.session.id,\n        version: c.session.version,\n        sp: c.session.sp\n      };\n      session.sp.keys = null;\n      c.sessionCache.setSession(session.id, session);\n    }\n\n    if(c.open) {\n      // connection no longer open, clear input\n      c.open = false;\n      c.input.clear();\n\n      // if connected or handshaking, send an alert\n      if(c.isConnected || c.handshaking) {\n        c.isConnected = c.handshaking = false;\n\n        // send close_notify alert\n        tls.queue(c, tls.createAlert(c, {\n          level: tls.Alert.Level.warning,\n          description: tls.Alert.Description.close_notify\n        }));\n        tls.flush(c);\n      }\n\n      // call handler\n      c.closed(c);\n    }\n\n    // reset TLS connection, do not clear fail flag\n    c.reset(clearFail);\n  };\n\n  return c;\n};\n\n/* TLS API */\nforge.tls = forge.tls || {};\n\n// expose non-functions\nfor(var key in tls) {\n  if(typeof tls[key] !== 'function') {\n    forge.tls[key] = tls[key];\n  }\n}\n\n// expose prf_tls1 for testing\nforge.tls.prf_tls1 = prf_TLS1;\n\n// expose sha1 hmac method\nforge.tls.hmac_sha1 = hmac_sha1;\n\n// expose session cache creation\nforge.tls.createSessionCache = tls.createSessionCache;\n\n/**\n * Creates a new TLS connection. This does not make any assumptions about the\n * transport layer that TLS is working on top of, ie: it does not assume there\n * is a TCP/IP connection or establish one. A TLS connection is totally\n * abstracted away from the layer is runs on top of, it merely establishes a\n * secure channel between a client\" and a \"server\".\n *\n * A TLS connection contains 4 connection states: pending read and write, and\n * current read and write.\n *\n * At initialization, the current read and write states will be null. Only once\n * the security parameters have been set and the keys have been generated can\n * the pending states be converted into current states. Current states will be\n * updated for each record processed.\n *\n * A custom certificate verify callback may be provided to check information\n * like the common name on the server's certificate. It will be called for\n * every certificate in the chain. It has the following signature:\n *\n * variable func(c, certs, index, preVerify)\n * Where:\n * c         The TLS connection\n * verified  Set to true if certificate was verified, otherwise the alert\n *           tls.Alert.Description for why the certificate failed.\n * depth     The current index in the chain, where 0 is the server's cert.\n * certs     The certificate chain, *NOTE* if the server was anonymous then\n *           the chain will be empty.\n *\n * The function returns true on success and on failure either the appropriate\n * tls.Alert.Description or an object with 'alert' set to the appropriate\n * tls.Alert.Description and 'message' set to a custom error message. If true\n * is not returned then the connection will abort using, in order of\n * availability, first the returned alert description, second the preVerify\n * alert description, and lastly the default 'bad_certificate'.\n *\n * There are three callbacks that can be used to make use of client-side\n * certificates where each takes the TLS connection as the first parameter:\n *\n * getCertificate(conn, hint)\n *   The second parameter is a hint as to which certificate should be\n *   returned. If the connection entity is a client, then the hint will be\n *   the CertificateRequest message from the server that is part of the\n *   TLS protocol. If the connection entity is a server, then it will be\n *   the servername list provided via an SNI extension the ClientHello, if\n *   one was provided (empty array if not). The hint can be examined to\n *   determine which certificate to use (advanced). Most implementations\n *   will just return a certificate. The return value must be a\n *   PEM-formatted certificate or an array of PEM-formatted certificates\n *   that constitute a certificate chain, with the first in the array/chain\n *   being the client's certificate.\n * getPrivateKey(conn, certificate)\n *   The second parameter is an forge.pki X.509 certificate object that\n *   is associated with the requested private key. The return value must\n *   be a PEM-formatted private key.\n * getSignature(conn, bytes, callback)\n *   This callback can be used instead of getPrivateKey if the private key\n *   is not directly accessible in javascript or should not be. For\n *   instance, a secure external web service could provide the signature\n *   in exchange for appropriate credentials. The second parameter is a\n *   string of bytes to be signed that are part of the TLS protocol. These\n *   bytes are used to verify that the private key for the previously\n *   provided client-side certificate is accessible to the client. The\n *   callback is a function that takes 2 parameters, the TLS connection\n *   and the RSA encrypted (signed) bytes as a string. This callback must\n *   be called once the signature is ready.\n *\n * @param options the options for this connection:\n *   server: true if the connection is server-side, false for client.\n *   sessionId: a session ID to reuse, null for a new connection.\n *   caStore: an array of certificates to trust.\n *   sessionCache: a session cache to use.\n *   cipherSuites: an optional array of cipher suites to use,\n *     see tls.CipherSuites.\n *   connected: function(conn) called when the first handshake completes.\n *   virtualHost: the virtual server name to use in a TLS SNI extension.\n *   verifyClient: true to require a client certificate in server mode,\n *     'optional' to request one, false not to (default: false).\n *   verify: a handler used to custom verify certificates in the chain.\n *   getCertificate: an optional callback used to get a certificate or\n *     a chain of certificates (as an array).\n *   getPrivateKey: an optional callback used to get a private key.\n *   getSignature: an optional callback used to get a signature.\n *   tlsDataReady: function(conn) called when TLS protocol data has been\n *     prepared and is ready to be used (typically sent over a socket\n *     connection to its destination), read from conn.tlsData buffer.\n *   dataReady: function(conn) called when application data has\n *     been parsed from a TLS record and should be consumed by the\n *     application, read from conn.data buffer.\n *   closed: function(conn) called when the connection has been closed.\n *   error: function(conn, error) called when there was an error.\n *   deflate: function(inBytes) if provided, will deflate TLS records using\n *     the deflate algorithm if the server supports it.\n *   inflate: function(inBytes) if provided, will inflate TLS records using\n *     the deflate algorithm if the server supports it.\n *\n * @return the new TLS connection.\n */\nforge.tls.createConnection = tls.createConnection;\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'tls';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/tls',[\n  'require',\n  'module',\n  './asn1',\n  './hmac',\n  './md',\n  './pem',\n  './pki',\n  './random',\n  './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * A Javascript implementation of AES Cipher Suites for TLS.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2015 Digital Bazaar, Inc.\n *\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nvar tls = forge.tls;\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites['TLS_RSA_WITH_AES_128_CBC_SHA'] = {\n  id: [0x00,0x2f],\n  name: 'TLS_RSA_WITH_AES_128_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 16;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\ntls.CipherSuites['TLS_RSA_WITH_AES_256_CBC_SHA'] = {\n  id: [0x00,0x35],\n  name: 'TLS_RSA_WITH_AES_256_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 32;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\n\nfunction initConnectionState(state, c, sp) {\n  var client = (c.entity === forge.tls.ConnectionEnd.client);\n\n  // cipher setup\n  state.read.cipherState = {\n    init: false,\n    cipher: forge.cipher.createDecipher('AES-CBC', client ?\n      sp.keys.server_write_key : sp.keys.client_write_key),\n    iv: client ? sp.keys.server_write_IV : sp.keys.client_write_IV\n  };\n  state.write.cipherState = {\n    init: false,\n    cipher: forge.cipher.createCipher('AES-CBC', client ?\n      sp.keys.client_write_key : sp.keys.server_write_key),\n    iv: client ? sp.keys.client_write_IV : sp.keys.server_write_IV\n  };\n  state.read.cipherFunction = decrypt_aes_cbc_sha1;\n  state.write.cipherFunction = encrypt_aes_cbc_sha1;\n\n  // MAC setup\n  state.read.macLength = state.write.macLength = sp.mac_length;\n  state.read.macFunction = state.write.macFunction = tls.hmac_sha1;\n}\n\n/**\n * Encrypts the TLSCompressed record into a TLSCipherText record using AES\n * in CBC mode.\n *\n * @param record the TLSCompressed record to encrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  // append MAC to fragment, update sequence number\n  var mac = s.macFunction(s.macKey, s.sequenceNumber, record);\n  record.fragment.putBytes(mac);\n  s.updateSequenceNumber();\n\n  // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use the pre-generated IV when initializing for TLS 1.0, otherwise use\n    // the residue from the previous encryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    iv = forge.random.getBytesSync(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // TLS 1.1+ write IV into output\n  if(record.version.minor >= tls.Versions.TLS_1_1.minor) {\n    cipher.output.putBytes(iv);\n  }\n\n  // do encryption (default padding is appropriate)\n  cipher.update(record.fragment);\n  if(cipher.finish(encrypt_aes_cbc_sha1_padding)) {\n    // set record fragment to encrypted output\n    record.fragment = cipher.output;\n    record.length = record.fragment.length();\n    rval = true;\n  }\n\n  return rval;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in encrypt mode.\n *\n * @param blockSize the block size.\n * @param input the input buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1_padding(blockSize, input, decrypt) {\n  /* The encrypted data length (TLSCiphertext.length) is one more than the sum\n   of SecurityParameters.block_length, TLSCompressed.length,\n   SecurityParameters.mac_length, and padding_length.\n\n   The padding may be any length up to 255 bytes long, as long as it results in\n   the TLSCiphertext.length being an integral multiple of the block length.\n   Lengths longer than necessary might be desirable to frustrate attacks on a\n   protocol based on analysis of the lengths of exchanged messages. Each uint8\n   in the padding data vector must be filled with the padding length value.\n\n   The padding length should be such that the total size of the\n   GenericBlockCipher structure is a multiple of the cipher's block length.\n   Legal values range from zero to 255, inclusive. This length specifies the\n   length of the padding field exclusive of the padding_length field itself.\n\n   This is slightly different from PKCS#7 because the padding value is 1\n   less than the actual number of padding bytes if you include the\n   padding_length uint8 itself as a padding byte. */\n  if(!decrypt) {\n    // get the number of padding bytes required to reach the blockSize and\n    // subtract 1 for the padding value (to make room for the padding_length\n    // uint8)\n    var padding = blockSize - (input.length() % blockSize);\n    input.fillWithByte(padding - 1, padding);\n  }\n  return true;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in decrypt mode.\n *\n * @param blockSize the block size.\n * @param output the output buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1_padding(blockSize, output, decrypt) {\n  var rval = true;\n  if(decrypt) {\n    /* The last byte in the output specifies the number of padding bytes not\n      including itself. Each of the padding bytes has the same value as that\n      last byte (known as the padding_length). Here we check all padding\n      bytes to ensure they have the value of padding_length even if one of\n      them is bad in order to ward-off timing attacks. */\n    var len = output.length();\n    var paddingLength = output.last();\n    for(var i = len - 1 - paddingLength; i < len - 1; ++i) {\n      rval = rval && (output.at(i) == paddingLength);\n    }\n    if(rval) {\n      // trim off padding bytes and last padding length byte\n      output.truncate(paddingLength + 1);\n    }\n  }\n  return rval;\n}\n\n/**\n * Decrypts a TLSCipherText record into a TLSCompressed record using\n * AES in CBC mode.\n *\n * @param record the TLSCipherText record to decrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar count = 0;\nfunction decrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n  ++count;\n\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use pre-generated IV when initializing for TLS 1.0, otherwise use the\n    // residue from the previous decryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n    // that is appended to the record fragment\n    iv = record.fragment.getBytes(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // do decryption\n  cipher.update(record.fragment);\n  rval = cipher.finish(decrypt_aes_cbc_sha1_padding);\n\n  // even if decryption fails, keep going to minimize timing attacks\n\n  // decrypted data:\n  // first (len - 20) bytes = application data\n  // last 20 bytes          = MAC\n  var macLen = s.macLength;\n\n  // create a random MAC to check against should the mac length check fail\n  // Note: do this regardless of the failure to keep timing consistent\n  var mac = forge.random.getBytesSync(macLen);\n\n  // get fragment and mac\n  var len = cipher.output.length();\n  if(len >= macLen) {\n    record.fragment = cipher.output.getBytes(len - macLen);\n    mac = cipher.output.getBytes(macLen);\n  } else {\n    // bad data, but get bytes anyway to try to keep timing consistent\n    record.fragment = cipher.output.getBytes();\n  }\n  record.fragment = forge.util.createBuffer(record.fragment);\n  record.length = record.fragment.length();\n\n  // see if data integrity checks out, update sequence number\n  var mac2 = s.macFunction(s.macKey, s.sequenceNumber, record);\n  s.updateSequenceNumber();\n  rval = compareMacs(s.macKey, mac, mac2) && rval;\n  return rval;\n}\n\n/**\n * Safely compare two MACs. This function will compare two MACs in a way\n * that protects against timing attacks.\n *\n * TODO: Expose elsewhere as a utility API.\n *\n * See: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n *\n * @param key the MAC key to use.\n * @param mac1 as a binary-encoded string of bytes.\n * @param mac2 as a binary-encoded string of bytes.\n *\n * @return true if the MACs are the same, false if not.\n */\nfunction compareMacs(key, mac1, mac2) {\n  var hmac = forge.hmac.create();\n\n  hmac.start('SHA1', key);\n  hmac.update(mac1);\n  mac1 = hmac.digest().getBytes();\n\n  hmac.start(null, null);\n  hmac.update(mac2);\n  mac2 = hmac.digest().getBytes();\n\n  return mac1 === mac2;\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'aesCipherSuites';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/aesCipherSuites',['require', 'module', './aes', './tls'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Debugging support for web applications.\n *\n * @author David I. Lehn <dlehn@digitalbazaar.com>\n *\n * Copyright 2008-2013 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n/* DEBUG API */\nforge.debug = forge.debug || {};\n\n// Private storage for debugging.\n// Useful to expose data that is otherwise unviewable behind closures.\n// NOTE: remember that this can hold references to data and cause leaks!\n// format is \"forge._debug.<modulename>.<dataname> = data\"\n// Example:\n// (function() {\n//   var cat = 'forge.test.Test'; // debugging category\n//   var sState = {...}; // local state\n//   forge.debug.set(cat, 'sState', sState);\n// })();\nforge.debug.storage = {};\n\n/**\n * Gets debug data. Omit name for all cat data  Omit name and cat for\n * all data.\n *\n * @param cat name of debugging category.\n * @param name name of data to get (optional).\n * @return object with requested debug data or undefined.\n */\nforge.debug.get = function(cat, name) {\n  var rval;\n  if(typeof(cat) === 'undefined') {\n    rval = forge.debug.storage;\n  } else if(cat in forge.debug.storage) {\n    if(typeof(name) === 'undefined') {\n      rval = forge.debug.storage[cat];\n    } else {\n      rval = forge.debug.storage[cat][name];\n    }\n  }\n  return rval;\n};\n\n/**\n * Sets debug data.\n *\n * @param cat name of debugging category.\n * @param name name of data to set.\n * @param data data to set.\n */\nforge.debug.set = function(cat, name, data) {\n  if(!(cat in forge.debug.storage)) {\n    forge.debug.storage[cat] = {};\n  }\n  forge.debug.storage[cat][name] = data;\n};\n\n/**\n * Clears debug data. Omit name for all cat data. Omit name and cat for\n * all data.\n *\n * @param cat name of debugging category.\n * @param name name of data to clear or omit to clear entire category.\n */\nforge.debug.clear = function(cat, name) {\n  if(typeof(cat) === 'undefined') {\n    forge.debug.storage = {};\n  } else if(cat in forge.debug.storage) {\n    if(typeof(name) === 'undefined') {\n      delete forge.debug.storage[cat];\n    } else {\n      delete forge.debug.storage[cat][name];\n    }\n  }\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'debug';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/debug',['require', 'module'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Javascript implementation of RSA-KEM.\n *\n * @author Lautaro Cozzani Rodriguez\n * @author Dave Longley\n *\n * Copyright (c) 2014 Lautaro Cozzani <lautaro.cozzani@scytl.com>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nforge.kem = forge.kem || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n/**\n * The API for the RSA Key Encapsulation Mechanism (RSA-KEM) from ISO 18033-2.\n */\nforge.kem.rsa = {};\n\n/**\n * Creates an RSA KEM API object for generating a secret asymmetric key.\n *\n * The symmetric key may be generated via a call to 'encrypt', which will\n * produce a ciphertext to be transmitted to the recipient and a key to be\n * kept secret. The ciphertext is a parameter to be passed to 'decrypt' which\n * will produce the same secret key for the recipient to use to decrypt a\n * message that was encrypted with the secret key.\n *\n * @param kdf the KDF API to use (eg: new forge.kem.kdf1()).\n * @param options the options to use.\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n */\nforge.kem.rsa.create = function(kdf, options) {\n  options = options || {};\n  var prng = options.prng || forge.random;\n\n  var kem = {};\n\n  /**\n   * Generates a secret key and its encapsulation.\n   *\n   * @param publicKey the RSA public key to encrypt with.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return an object with:\n   *   encapsulation: the ciphertext for generating the secret key, as a\n   *     binary-encoded string of bytes.\n   *   key: the secret key to use for encrypting a message.\n   */\n  kem.encrypt = function(publicKey, keyLength) {\n    // generate a random r where 1 > r > n\n    var byteLength = Math.ceil(publicKey.n.bitLength() / 8);\n    var r;\n    do {\n      r = new BigInteger(\n        forge.util.bytesToHex(prng.getBytesSync(byteLength)),\n        16).mod(publicKey.n);\n    } while(r.equals(BigInteger.ZERO));\n\n    // prepend r with zeros\n    r = forge.util.hexToBytes(r.toString(16));\n    var zeros = byteLength - r.length;\n    if(zeros > 0) {\n      r = forge.util.fillString(String.fromCharCode(0), zeros) + r;\n    }\n\n    // encrypt the random\n    var encapsulation = publicKey.encrypt(r, 'NONE');\n\n    // generate the secret key\n    var key = kdf.generate(r, keyLength);\n\n    return {encapsulation: encapsulation, key: key};\n  };\n\n  /**\n   * Decrypts an encapsulated secret key.\n   *\n   * @param privateKey the RSA private key to decrypt with.\n   * @param encapsulation the ciphertext for generating the secret key, as\n   *          a binary-encoded string of bytes.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return the secret key as a binary-encoded string of bytes.\n   */\n  kem.decrypt = function(privateKey, encapsulation, keyLength) {\n    // decrypt the encapsulation and generate the secret key\n    var r = privateKey.decrypt(encapsulation, 'NONE');\n    return kdf.generate(r, keyLength);\n  };\n\n  return kem;\n};\n\n// TODO: add forge.kem.kdf.create('KDF1', {md: ..., ...}) API?\n\n/**\n * Creates a key derivation API object that implements KDF1 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF1 API object.\n */\nforge.kem.kdf1 = function(md, digestLength) {\n  _createKDF(this, md, 0, digestLength || md.digestLength);\n};\n\n/**\n * Creates a key derivation API object that implements KDF2 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF2 API object.\n */\nforge.kem.kdf2 = function(md, digestLength) {\n  _createKDF(this, md, 1, digestLength || md.digestLength);\n};\n\n/**\n * Creates a KDF1 or KDF2 API object.\n *\n * @param md the hash API to use.\n * @param counterStart the starting index for the counter.\n * @param digestLength the digest length to use.\n *\n * @return the KDF API object.\n */\nfunction _createKDF(kdf, md, counterStart, digestLength) {\n  /**\n   * Generate a key of the specified length.\n   *\n   * @param x the binary-encoded byte string to generate a key from.\n   * @param length the number of bytes to generate (the size of the key).\n   *\n   * @return the key as a binary-encoded string.\n   */\n  kdf.generate = function(x, length) {\n    var key = new forge.util.ByteBuffer();\n\n    // run counter from counterStart to ceil(length / Hash.len)\n    var k = Math.ceil(length / digestLength) + counterStart;\n\n    var c = new forge.util.ByteBuffer();\n    for(var i = counterStart; i < k; ++i) {\n      // I2OSP(i, 4): convert counter to an octet string of 4 octets\n      c.putInt32(i);\n\n      // digest 'x' and the counter and add the result to the key\n      md.start();\n      md.update(x + c.getBytes());\n      var hash = md.digest();\n      key.putBytes(hash.getBytes(digestLength));\n    }\n\n    // truncate to the correct key length\n    key.truncate(key.length() - length);\n    return key.getBytes();\n  };\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'kem';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/kem',['require', 'module', './util','./random','./jsbn'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Cross-browser support for logging in a web application.\n *\n * @author David I. Lehn <dlehn@digitalbazaar.com>\n *\n * Copyright (c) 2008-2013 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n/* LOG API */\nforge.log = forge.log || {};\n\n/**\n * Application logging system.\n *\n * Each logger level available as it's own function of the form:\n *   forge.log.level(category, args...)\n * The category is an arbitrary string, and the args are the same as\n * Firebug's console.log API. By default the call will be output as:\n *   'LEVEL [category] <args[0]>, args[1], ...'\n * This enables proper % formatting via the first argument.\n * Each category is enabled by default but can be enabled or disabled with\n * the setCategoryEnabled() function.\n */\n// list of known levels\nforge.log.levels = [\n  'none', 'error', 'warning', 'info', 'debug', 'verbose', 'max'];\n// info on the levels indexed by name:\n//   index: level index\n//   name: uppercased display name\nvar sLevelInfo = {};\n// list of loggers\nvar sLoggers = [];\n/**\n * Standard console logger. If no console support is enabled this will\n * remain null. Check before using.\n */\nvar sConsoleLogger = null;\n\n// logger flags\n/**\n * Lock the level at the current value. Used in cases where user config may\n * set the level such that only critical messages are seen but more verbose\n * messages are needed for debugging or other purposes.\n */\nforge.log.LEVEL_LOCKED = (1 << 1);\n/**\n * Always call log function. By default, the logging system will check the\n * message level against logger.level before calling the log function. This\n * flag allows the function to do its own check.\n */\nforge.log.NO_LEVEL_CHECK = (1 << 2);\n/**\n * Perform message interpolation with the passed arguments. \"%\" style\n * fields in log messages will be replaced by arguments as needed. Some\n * loggers, such as Firebug, may do this automatically. The original log\n * message will be available as 'message' and the interpolated version will\n * be available as 'fullMessage'.\n */\nforge.log.INTERPOLATE = (1 << 3);\n\n// setup each log level\nfor(var i = 0; i < forge.log.levels.length; ++i) {\n  var level = forge.log.levels[i];\n  sLevelInfo[level] = {\n    index: i,\n    name: level.toUpperCase()\n  };\n}\n\n/**\n * Message logger. Will dispatch a message to registered loggers as needed.\n *\n * @param message message object\n */\nforge.log.logMessage = function(message) {\n  var messageLevelIndex = sLevelInfo[message.level].index;\n  for(var i = 0; i < sLoggers.length; ++i) {\n    var logger = sLoggers[i];\n    if(logger.flags & forge.log.NO_LEVEL_CHECK) {\n      logger.f(message);\n    } else {\n      // get logger level\n      var loggerLevelIndex = sLevelInfo[logger.level].index;\n      // check level\n      if(messageLevelIndex <= loggerLevelIndex) {\n        // message critical enough, call logger\n        logger.f(logger, message);\n      }\n    }\n  }\n};\n\n/**\n * Sets the 'standard' key on a message object to:\n * \"LEVEL [category] \" + message\n *\n * @param message a message log object\n */\nforge.log.prepareStandard = function(message) {\n  if(!('standard' in message)) {\n    message.standard =\n      sLevelInfo[message.level].name +\n      //' ' + +message.timestamp +\n      ' [' + message.category + '] ' +\n      message.message;\n  }\n};\n\n/**\n * Sets the 'full' key on a message object to the original message\n * interpolated via % formatting with the message arguments.\n *\n * @param message a message log object.\n */\nforge.log.prepareFull = function(message) {\n  if(!('full' in message)) {\n    // copy args and insert message at the front\n    var args = [message.message];\n    args = args.concat([] || message['arguments']);\n    // format the message\n    message.full = forge.util.format.apply(this, args);\n  }\n};\n\n/**\n * Applies both preparseStandard() and prepareFull() to a message object and\n * store result in 'standardFull'.\n *\n * @param message a message log object.\n */\nforge.log.prepareStandardFull = function(message) {\n  if(!('standardFull' in message)) {\n    // FIXME implement 'standardFull' logging\n    forge.log.prepareStandard(message);\n    message.standardFull = message.standard;\n  }\n};\n\n// create log level functions\nif(true) {\n  // levels for which we want functions\n  var levels = ['error', 'warning', 'info', 'debug', 'verbose'];\n  for(var i = 0; i < levels.length; ++i) {\n    // wrap in a function to ensure proper level var is passed\n    (function(level) {\n      // create function for this level\n      forge.log[level] = function(category, message/*, args...*/) {\n        // convert arguments to real array, remove category and message\n        var args = Array.prototype.slice.call(arguments).slice(2);\n        // create message object\n        // Note: interpolation and standard formatting is done lazily\n        var msg = {\n          timestamp: new Date(),\n          level: level,\n          category: category,\n          message: message,\n          'arguments': args\n          /*standard*/\n          /*full*/\n          /*fullMessage*/\n        };\n        // process this message\n        forge.log.logMessage(msg);\n      };\n    })(levels[i]);\n  }\n}\n\n/**\n * Creates a new logger with specified custom logging function.\n *\n * The logging function has a signature of:\n *   function(logger, message)\n * logger: current logger\n * message: object:\n *   level: level id\n *   category: category\n *   message: string message\n *   arguments: Array of extra arguments\n *   fullMessage: interpolated message and arguments if INTERPOLATE flag set\n *\n * @param logFunction a logging function which takes a log message object\n *          as a parameter.\n *\n * @return a logger object.\n */\nforge.log.makeLogger = function(logFunction) {\n  var logger = {\n    flags: 0,\n    f: logFunction\n  };\n  forge.log.setLevel(logger, 'none');\n  return logger;\n};\n\n/**\n * Sets the current log level on a logger.\n *\n * @param logger the target logger.\n * @param level the new maximum log level as a string.\n *\n * @return true if set, false if not.\n */\nforge.log.setLevel = function(logger, level) {\n  var rval = false;\n  if(logger && !(logger.flags & forge.log.LEVEL_LOCKED)) {\n    for(var i = 0; i < forge.log.levels.length; ++i) {\n      var aValidLevel = forge.log.levels[i];\n      if(level == aValidLevel) {\n        // set level\n        logger.level = level;\n        rval = true;\n        break;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Locks the log level at its current value.\n *\n * @param logger the target logger.\n * @param lock boolean lock value, default to true.\n */\nforge.log.lock = function(logger, lock) {\n  if(typeof lock === 'undefined' || lock) {\n    logger.flags |= forge.log.LEVEL_LOCKED;\n  } else {\n    logger.flags &= ~forge.log.LEVEL_LOCKED;\n  }\n};\n\n/**\n * Adds a logger.\n *\n * @param logger the logger object.\n */\nforge.log.addLogger = function(logger) {\n  sLoggers.push(logger);\n};\n\n// setup the console logger if possible, else create fake console.log\nif(typeof(console) !== 'undefined' && 'log' in console) {\n  var logger;\n  if(console.error && console.warn && console.info && console.debug) {\n    // looks like Firebug-style logging is available\n    // level handlers map\n    var levelHandlers = {\n      error: console.error,\n      warning: console.warn,\n      info: console.info,\n      debug: console.debug,\n      verbose: console.debug\n    };\n    var f = function(logger, message) {\n      forge.log.prepareStandard(message);\n      var handler = levelHandlers[message.level];\n      // prepend standard message and concat args\n      var args = [message.standard];\n      args = args.concat(message['arguments'].slice());\n      // apply to low-level console function\n      handler.apply(console, args);\n    };\n    logger = forge.log.makeLogger(f);\n  } else {\n    // only appear to have basic console.log\n    var f = function(logger, message) {\n      forge.log.prepareStandardFull(message);\n      console.log(message.standardFull);\n    };\n    logger = forge.log.makeLogger(f);\n  }\n  forge.log.setLevel(logger, 'debug');\n  forge.log.addLogger(logger);\n  sConsoleLogger = logger;\n} else {\n  // define fake console.log to avoid potential script errors on\n  // browsers that do not have console logging\n  console = {\n    log: function() {}\n  };\n}\n\n/*\n * Check for logging control query vars.\n *\n * console.level=<level-name>\n * Set's the console log level by name.  Useful to override defaults and\n * allow more verbose logging before a user config is loaded.\n *\n * console.lock=<true|false>\n * Lock the console log level at whatever level it is set at.  This is run\n * after console.level is processed.  Useful to force a level of verbosity\n * that could otherwise be limited by a user config.\n */\nif(sConsoleLogger !== null) {\n  var query = forge.util.getQueryVariables();\n  if('console.level' in query) {\n    // set with last value\n    forge.log.setLevel(\n      sConsoleLogger, query['console.level'].slice(-1)[0]);\n  }\n  if('console.lock' in query) {\n    // set with last value\n    var lock = query['console.lock'].slice(-1)[0];\n    if(lock == 'true') {\n      forge.log.lock(sConsoleLogger);\n    }\n  }\n}\n\n// provide public access to console logger\nforge.log.consoleLogger = sConsoleLogger;\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'log';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/log',['require', 'module', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors))\n  {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      var certs = msg.rawCapture.certificates.value;\n      for(var i = 0; i < certs.length; ++i) {\n        msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     */\n    sign: function() {\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          msg.contentInfo.value.push(\n            // [0] EXPLICIT content\n            asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                content)\n            ]));\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n    // the content field and is optional for a ContentInfo but required here\n    // since signers are present\n    if(msg.contentInfo.value.length < 2) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // get ContentInfo content\n    var content = msg.contentInfo.value[1];\n    // skip [0] EXPLICIT content wrapper\n    content = content.value[0];\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter.value,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'pkcs7';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/pkcs7',[\n  'require',\n  'module',\n  './aes',\n  './asn1',\n  './des',\n  './oids',\n  './pem',\n  './pkcs7asn1',\n  './random',\n  './util',\n  './x509'\n], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Functions to output keys in SSH-friendly formats.\n *\n * This is part of the Forge project which may be used under the terms of\n * either the BSD License or the GNU General Public License (GPL) Version 2.\n *\n * See: https://github.com/digitalbazaar/forge/blob/cbebca3780658703d925b61b2caffb1d263a6c1d/LICENSE\n *\n * @author https://github.com/shellac\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\nvar ssh = forge.ssh = forge.ssh || {};\n\n/**\n * Encodes (and optionally encrypts) a private RSA key as a Putty PPK file.\n *\n * @param privateKey the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n * @param comment a comment to include in the key file.\n *\n * @return the PPK file as a string.\n */\nssh.privateKeyToPutty = function(privateKey, passphrase, comment) {\n  comment = comment || '';\n  passphrase = passphrase || '';\n  var algorithm = 'ssh-rsa';\n  var encryptionAlgorithm = (passphrase === '') ? 'none' : 'aes256-cbc';\n\n  var ppk = 'PuTTY-User-Key-File-2: ' + algorithm + '\\r\\n';\n  ppk += 'Encryption: ' + encryptionAlgorithm + '\\r\\n';\n  ppk += 'Comment: ' + comment + '\\r\\n';\n\n  // public key into buffer for ppk\n  var pubbuffer = forge.util.createBuffer();\n  _addStringToBuffer(pubbuffer, algorithm);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.e);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.n);\n\n  // write public key\n  var pub = forge.util.encode64(pubbuffer.bytes(), 64);\n  var length = Math.floor(pub.length / 66) + 1; // 66 = 64 + \\r\\n\n  ppk += 'Public-Lines: ' + length + '\\r\\n';\n  ppk += pub;\n\n  // private key into a buffer\n  var privbuffer = forge.util.createBuffer();\n  _addBigIntegerToBuffer(privbuffer, privateKey.d);\n  _addBigIntegerToBuffer(privbuffer, privateKey.p);\n  _addBigIntegerToBuffer(privbuffer, privateKey.q);\n  _addBigIntegerToBuffer(privbuffer, privateKey.qInv);\n\n  // optionally encrypt the private key\n  var priv;\n  if(!passphrase) {\n    // use the unencrypted buffer\n    priv = forge.util.encode64(privbuffer.bytes(), 64);\n  } else {\n    // encrypt RSA key using passphrase\n    var encLen = privbuffer.length() + 16 - 1;\n    encLen -= encLen % 16;\n\n    // pad private key with sha1-d data -- needs to be a multiple of 16\n    var padding = _sha1(privbuffer.bytes());\n\n    padding.truncate(padding.length() - encLen + privbuffer.length());\n    privbuffer.putBuffer(padding);\n\n    var aeskey = forge.util.createBuffer();\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x00', passphrase));\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x01', passphrase));\n\n    // encrypt some bytes using CBC mode\n    // key is 40 bytes, so truncate *by* 8 bytes\n    var cipher = forge.aes.createEncryptionCipher(aeskey.truncate(8), 'CBC');\n    cipher.start(forge.util.createBuffer().fillWithByte(0, 16));\n    cipher.update(privbuffer.copy());\n    cipher.finish();\n    var encrypted = cipher.output;\n\n    // Note: this appears to differ from Putty -- is forge wrong, or putty?\n    // due to padding we finish as an exact multiple of 16\n    encrypted.truncate(16); // all padding\n\n    priv = forge.util.encode64(encrypted.bytes(), 64);\n  }\n\n  // output private key\n  length = Math.floor(priv.length / 66) + 1; // 64 + \\r\\n\n  ppk += '\\r\\nPrivate-Lines: ' + length + '\\r\\n';\n  ppk += priv;\n\n  // MAC\n  var mackey = _sha1('putty-private-key-file-mac-key', passphrase);\n\n  var macbuffer = forge.util.createBuffer();\n  _addStringToBuffer(macbuffer, algorithm);\n  _addStringToBuffer(macbuffer, encryptionAlgorithm);\n  _addStringToBuffer(macbuffer, comment);\n  macbuffer.putInt32(pubbuffer.length());\n  macbuffer.putBuffer(pubbuffer);\n  macbuffer.putInt32(privbuffer.length());\n  macbuffer.putBuffer(privbuffer);\n\n  var hmac = forge.hmac.create();\n  hmac.start('sha1', mackey);\n  hmac.update(macbuffer.bytes());\n\n  ppk += '\\r\\nPrivate-MAC: ' + hmac.digest().toHex() + '\\r\\n';\n\n  return ppk;\n};\n\n/**\n * Encodes a public RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param comment a comment.\n *\n * @return the public key in OpenSSH format.\n */\nssh.publicKeyToOpenSSH = function(key, comment) {\n  var type = 'ssh-rsa';\n  comment = comment || '';\n\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  return type + ' ' + forge.util.encode64(buffer.bytes()) + ' ' + comment;\n};\n\n/**\n * Encodes a private RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n *\n * @return the public key in OpenSSH format.\n */\nssh.privateKeyToOpenSSH = function(privateKey, passphrase) {\n  if(!passphrase) {\n    return forge.pki.privateKeyToPem(privateKey);\n  }\n  // OpenSSH private key is just a legacy format, it seems\n  return forge.pki.encryptRsaPrivateKey(privateKey, passphrase,\n    {legacy: true, algorithm: 'aes128'});\n};\n\n/**\n * Gets the SSH fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.md5).\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\nssh.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.md5.create();\n\n  var type = 'ssh-rsa';\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  // hash public key bytes\n  md.start();\n  md.update(buffer.getBytes());\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a big integer.\n */\nfunction _addBigIntegerToBuffer(buffer, val) {\n  var hexVal = val.toString(16);\n  // ensure 2s complement +ve\n  if(hexVal[0] >= '8') {\n    hexVal = '00' + hexVal;\n  }\n  var bytes = forge.util.hexToBytes(hexVal);\n  buffer.putInt32(bytes.length);\n  buffer.putBytes(bytes);\n}\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a string.\n */\nfunction _addStringToBuffer(buffer, val) {\n  buffer.putInt32(val.length);\n  buffer.putString(val);\n}\n\n/**\n * Hashes the arguments into one value using SHA-1.\n *\n * @return the sha1 hash of the provided arguments.\n */\nfunction _sha1() {\n  var sha = forge.md.sha1.create();\n  var num = arguments.length;\n  for (var i = 0; i < num; ++i) {\n    sha.update(arguments[i]);\n  }\n  return sha.digest();\n}\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'ssh';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/ssh',[\n  'require',\n  'module',\n  './aes',\n  './hmac',\n  './md5',\n  './sha1',\n  './util'\n], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Support for concurrent task management and synchronization in web\n * applications.\n *\n * @author Dave Longley\n * @author David I. Lehn <dlehn@digitalbazaar.com>\n *\n * Copyright (c) 2009-2013 Digital Bazaar, Inc.\n */\n(function() {\n/* ########## Begin module implementation ########## */\nfunction initModule(forge) {\n\n// logging category\nvar cat = 'forge.task';\n\n// verbose level\n// 0: off, 1: a little, 2: a whole lot\n// Verbose debug logging is surrounded by a level check to avoid the\n// performance issues with even calling the logging code regardless if it\n// is actually logged.  For performance reasons this should not be set to 2\n// for production use.\n// ex: if(sVL >= 2) forge.log.verbose(....)\nvar sVL = 0;\n\n// track tasks for debugging\nvar sTasks = {};\nvar sNextTaskId = 0;\n// debug access\nforge.debug.set(cat, 'tasks', sTasks);\n\n// a map of task type to task queue\nvar sTaskQueues = {};\n// debug access\nforge.debug.set(cat, 'queues', sTaskQueues);\n\n// name for unnamed tasks\nvar sNoTaskName = '?';\n\n// maximum number of doNext() recursions before a context swap occurs\n// FIXME: might need to tweak this based on the browser\nvar sMaxRecursions = 30;\n\n// time slice for doing tasks before a context swap occurs\n// FIXME: might need to tweak this based on the browser\nvar sTimeSlice = 20;\n\n/**\n * Task states.\n *\n * READY: ready to start processing\n * RUNNING: task or a subtask is running\n * BLOCKED: task is waiting to acquire N permits to continue\n * SLEEPING: task is sleeping for a period of time\n * DONE: task is done\n * ERROR: task has an error\n */\nvar READY = 'ready';\nvar RUNNING = 'running';\nvar BLOCKED = 'blocked';\nvar SLEEPING = 'sleeping';\nvar DONE = 'done';\nvar ERROR = 'error';\n\n/**\n * Task actions.  Used to control state transitions.\n *\n * STOP: stop processing\n * START: start processing tasks\n * BLOCK: block task from continuing until 1 or more permits are released\n * UNBLOCK: release one or more permits\n * SLEEP: sleep for a period of time\n * WAKEUP: wakeup early from SLEEPING state\n * CANCEL: cancel further tasks\n * FAIL: a failure occured\n */\nvar STOP = 'stop';\nvar START = 'start';\nvar BLOCK = 'block';\nvar UNBLOCK = 'unblock';\nvar SLEEP = 'sleep';\nvar WAKEUP = 'wakeup';\nvar CANCEL = 'cancel';\nvar FAIL = 'fail';\n\n/**\n * State transition table.\n *\n * nextState = sStateTable[currentState][action]\n */\nvar sStateTable = {};\n\nsStateTable[READY] = {};\nsStateTable[READY][STOP] = READY;\nsStateTable[READY][START] = RUNNING;\nsStateTable[READY][CANCEL] = DONE;\nsStateTable[READY][FAIL] = ERROR;\n\nsStateTable[RUNNING] = {};\nsStateTable[RUNNING][STOP] = READY;\nsStateTable[RUNNING][START] = RUNNING;\nsStateTable[RUNNING][BLOCK] = BLOCKED;\nsStateTable[RUNNING][UNBLOCK] = RUNNING;\nsStateTable[RUNNING][SLEEP] = SLEEPING;\nsStateTable[RUNNING][WAKEUP] = RUNNING;\nsStateTable[RUNNING][CANCEL] = DONE;\nsStateTable[RUNNING][FAIL] = ERROR;\n\nsStateTable[BLOCKED] = {};\nsStateTable[BLOCKED][STOP] = BLOCKED;\nsStateTable[BLOCKED][START] = BLOCKED;\nsStateTable[BLOCKED][BLOCK] = BLOCKED;\nsStateTable[BLOCKED][UNBLOCK] = BLOCKED;\nsStateTable[BLOCKED][SLEEP] = BLOCKED;\nsStateTable[BLOCKED][WAKEUP] = BLOCKED;\nsStateTable[BLOCKED][CANCEL] = DONE;\nsStateTable[BLOCKED][FAIL] = ERROR;\n\nsStateTable[SLEEPING] = {};\nsStateTable[SLEEPING][STOP] = SLEEPING;\nsStateTable[SLEEPING][START] = SLEEPING;\nsStateTable[SLEEPING][BLOCK] = SLEEPING;\nsStateTable[SLEEPING][UNBLOCK] = SLEEPING;\nsStateTable[SLEEPING][SLEEP] = SLEEPING;\nsStateTable[SLEEPING][WAKEUP] = SLEEPING;\nsStateTable[SLEEPING][CANCEL] = DONE;\nsStateTable[SLEEPING][FAIL] = ERROR;\n\nsStateTable[DONE] = {};\nsStateTable[DONE][STOP] = DONE;\nsStateTable[DONE][START] = DONE;\nsStateTable[DONE][BLOCK] = DONE;\nsStateTable[DONE][UNBLOCK] = DONE;\nsStateTable[DONE][SLEEP] = DONE;\nsStateTable[DONE][WAKEUP] = DONE;\nsStateTable[DONE][CANCEL] = DONE;\nsStateTable[DONE][FAIL] = ERROR;\n\nsStateTable[ERROR] = {};\nsStateTable[ERROR][STOP] = ERROR;\nsStateTable[ERROR][START] = ERROR;\nsStateTable[ERROR][BLOCK] = ERROR;\nsStateTable[ERROR][UNBLOCK] = ERROR;\nsStateTable[ERROR][SLEEP] = ERROR;\nsStateTable[ERROR][WAKEUP] = ERROR;\nsStateTable[ERROR][CANCEL] = ERROR;\nsStateTable[ERROR][FAIL] = ERROR;\n\n/**\n * Creates a new task.\n *\n * @param options options for this task\n *   run: the run function for the task (required)\n *   name: the run function for the task (optional)\n *   parent: parent of this task (optional)\n *\n * @return the empty task.\n */\nvar Task = function(options) {\n  // task id\n  this.id = -1;\n\n  // task name\n  this.name = options.name || sNoTaskName;\n\n  // task has no parent\n  this.parent = options.parent || null;\n\n  // save run function\n  this.run = options.run;\n\n  // create a queue of subtasks to run\n  this.subtasks = [];\n\n  // error flag\n  this.error = false;\n\n  // state of the task\n  this.state = READY;\n\n  // number of times the task has been blocked (also the number\n  // of permits needed to be released to continue running)\n  this.blocks = 0;\n\n  // timeout id when sleeping\n  this.timeoutId = null;\n\n  // no swap time yet\n  this.swapTime = null;\n\n  // no user data\n  this.userData = null;\n\n  // initialize task\n  // FIXME: deal with overflow\n  this.id = sNextTaskId++;\n  sTasks[this.id] = this;\n  if(sVL >= 1) {\n    forge.log.verbose(cat, '[%s][%s] init', this.id, this.name, this);\n  }\n};\n\n/**\n * Logs debug information on this task and the system state.\n */\nTask.prototype.debug = function(msg) {\n  msg = msg || '';\n  forge.log.debug(cat, msg,\n    '[%s][%s] task:', this.id, this.name, this,\n    'subtasks:', this.subtasks.length,\n    'queue:', sTaskQueues);\n};\n\n/**\n * Adds a subtask to run after task.doNext() or task.fail() is called.\n *\n * @param name human readable name for this task (optional).\n * @param subrun a function to run that takes the current task as\n *          its first parameter.\n *\n * @return the current task (useful for chaining next() calls).\n */\nTask.prototype.next = function(name, subrun) {\n  // juggle parameters if it looks like no name is given\n  if(typeof(name) === 'function') {\n    subrun = name;\n\n    // inherit parent's name\n    name = this.name;\n  }\n  // create subtask, set parent to this task, propagate callbacks\n  var subtask = new Task({\n    run: subrun,\n    name: name,\n    parent: this\n  });\n  // start subtasks running\n  subtask.state = RUNNING;\n  subtask.type = this.type;\n  subtask.successCallback = this.successCallback || null;\n  subtask.failureCallback = this.failureCallback || null;\n\n  // queue a new subtask\n  this.subtasks.push(subtask);\n\n  return this;\n};\n\n/**\n * Adds subtasks to run in parallel after task.doNext() or task.fail()\n * is called.\n *\n * @param name human readable name for this task (optional).\n * @param subrun functions to run that take the current task as\n *          their first parameter.\n *\n * @return the current task (useful for chaining next() calls).\n */\nTask.prototype.parallel = function(name, subrun) {\n  // juggle parameters if it looks like no name is given\n  if(forge.util.isArray(name)) {\n    subrun = name;\n\n    // inherit parent's name\n    name = this.name;\n  }\n  // Wrap parallel tasks in a regular task so they are started at the\n  // proper time.\n  return this.next(name, function(task) {\n    // block waiting for subtasks\n    var ptask = task;\n    ptask.block(subrun.length);\n\n    // we pass the iterator from the loop below as a parameter\n    // to a function because it is otherwise included in the\n    // closure and changes as the loop changes -- causing i\n    // to always be set to its highest value\n    var startParallelTask = function(pname, pi) {\n      forge.task.start({\n        type: pname,\n        run: function(task) {\n           subrun[pi](task);\n        },\n        success: function(task) {\n           ptask.unblock();\n        },\n        failure: function(task) {\n           ptask.unblock();\n        }\n      });\n    };\n\n    for(var i = 0; i < subrun.length; i++) {\n      // Type must be unique so task starts in parallel:\n      //    name + private string + task id + sub-task index\n      // start tasks in parallel and unblock when the finish\n      var pname = name + '__parallel-' + task.id + '-' + i;\n      var pi = i;\n      startParallelTask(pname, pi);\n    }\n  });\n};\n\n/**\n * Stops a running task.\n */\nTask.prototype.stop = function() {\n  this.state = sStateTable[this.state][STOP];\n};\n\n/**\n * Starts running a task.\n */\nTask.prototype.start = function() {\n  this.error = false;\n  this.state = sStateTable[this.state][START];\n\n  // try to restart\n  if(this.state === RUNNING) {\n    this.start = new Date();\n    this.run(this);\n    runNext(this, 0);\n  }\n};\n\n/**\n * Blocks a task until it one or more permits have been released. The\n * task will not resume until the requested number of permits have\n * been released with call(s) to unblock().\n *\n * @param n number of permits to wait for(default: 1).\n */\nTask.prototype.block = function(n) {\n  n = typeof(n) === 'undefined' ? 1 : n;\n  this.blocks += n;\n  if(this.blocks > 0) {\n    this.state = sStateTable[this.state][BLOCK];\n  }\n};\n\n/**\n * Releases a permit to unblock a task. If a task was blocked by\n * requesting N permits via block(), then it will only continue\n * running once enough permits have been released via unblock() calls.\n *\n * If multiple processes need to synchronize with a single task then\n * use a condition variable (see forge.task.createCondition). It is\n * an error to unblock a task more times than it has been blocked.\n *\n * @param n number of permits to release (default: 1).\n *\n * @return the current block count (task is unblocked when count is 0)\n */\nTask.prototype.unblock = function(n) {\n  n = typeof(n) === 'undefined' ? 1 : n;\n  this.blocks -= n;\n  if(this.blocks === 0 && this.state !== DONE) {\n    this.state = RUNNING;\n    runNext(this, 0);\n  }\n  return this.blocks;\n};\n\n/**\n * Sleep for a period of time before resuming tasks.\n *\n * @param n number of milliseconds to sleep (default: 0).\n */\nTask.prototype.sleep = function(n) {\n  n = typeof(n) === 'undefined' ? 0 : n;\n  this.state = sStateTable[this.state][SLEEP];\n  var self = this;\n  this.timeoutId = setTimeout(function() {\n    self.timeoutId = null;\n    self.state = RUNNING;\n    runNext(self, 0);\n  }, n);\n};\n\n/**\n * Waits on a condition variable until notified. The next task will\n * not be scheduled until notification. A condition variable can be\n * created with forge.task.createCondition().\n *\n * Once cond.notify() is called, the task will continue.\n *\n * @param cond the condition variable to wait on.\n */\nTask.prototype.wait = function(cond) {\n  cond.wait(this);\n};\n\n/**\n * If sleeping, wakeup and continue running tasks.\n */\nTask.prototype.wakeup = function() {\n  if(this.state === SLEEPING) {\n    cancelTimeout(this.timeoutId);\n    this.timeoutId = null;\n    this.state = RUNNING;\n    runNext(this, 0);\n  }\n};\n\n/**\n * Cancel all remaining subtasks of this task.\n */\nTask.prototype.cancel = function() {\n  this.state = sStateTable[this.state][CANCEL];\n  // remove permits needed\n  this.permitsNeeded = 0;\n  // cancel timeouts\n  if(this.timeoutId !== null) {\n    cancelTimeout(this.timeoutId);\n    this.timeoutId = null;\n  }\n  // remove subtasks\n  this.subtasks = [];\n};\n\n/**\n * Finishes this task with failure and sets error flag. The entire\n * task will be aborted unless the next task that should execute\n * is passed as a parameter. This allows levels of subtasks to be\n * skipped. For instance, to abort only this tasks's subtasks, then\n * call fail(task.parent). To abort this task's subtasks and its\n * parent's subtasks, call fail(task.parent.parent). To abort\n * all tasks and simply call the task callback, call fail() or\n * fail(null).\n *\n * The task callback (success or failure) will always, eventually, be\n * called.\n *\n * @param next the task to continue at, or null to abort entirely.\n */\nTask.prototype.fail = function(next) {\n  // set error flag\n  this.error = true;\n\n  // finish task\n  finish(this, true);\n\n  if(next) {\n    // propagate task info\n    next.error = this.error;\n    next.swapTime = this.swapTime;\n    next.userData = this.userData;\n\n    // do next task as specified\n    runNext(next, 0);\n  } else {\n    if(this.parent !== null) {\n      // finish root task (ensures it is removed from task queue)\n      var parent = this.parent;\n      while(parent.parent !== null) {\n        // propagate task info\n        parent.error = this.error;\n        parent.swapTime = this.swapTime;\n        parent.userData = this.userData;\n        parent = parent.parent;\n      }\n      finish(parent, true);\n    }\n\n    // call failure callback if one exists\n    if(this.failureCallback) {\n      this.failureCallback(this);\n    }\n  }\n};\n\n/**\n * Asynchronously start a task.\n *\n * @param task the task to start.\n */\nvar start = function(task) {\n  task.error = false;\n  task.state = sStateTable[task.state][START];\n  setTimeout(function() {\n    if(task.state === RUNNING) {\n      task.swapTime = +new Date();\n      task.run(task);\n      runNext(task, 0);\n    }\n  }, 0);\n};\n\n/**\n * Run the next subtask or finish this task.\n *\n * @param task the task to process.\n * @param recurse the recursion count.\n */\nvar runNext = function(task, recurse) {\n  // get time since last context swap (ms), if enough time has passed set\n  // swap to true to indicate that doNext was performed asynchronously\n  // also, if recurse is too high do asynchronously\n  var swap =\n    (recurse > sMaxRecursions) ||\n    (+new Date() - task.swapTime) > sTimeSlice;\n\n  var doNext = function(recurse) {\n    recurse++;\n    if(task.state === RUNNING) {\n      if(swap) {\n        // update swap time\n        task.swapTime = +new Date();\n      }\n\n      if(task.subtasks.length > 0) {\n        // run next subtask\n        var subtask = task.subtasks.shift();\n        subtask.error = task.error;\n        subtask.swapTime = task.swapTime;\n        subtask.userData = task.userData;\n        subtask.run(subtask);\n        if(!subtask.error) {\n           runNext(subtask, recurse);\n        }\n      } else {\n        finish(task);\n\n        if(!task.error) {\n          // chain back up and run parent\n          if(task.parent !== null) {\n            // propagate task info\n            task.parent.error = task.error;\n            task.parent.swapTime = task.swapTime;\n            task.parent.userData = task.userData;\n\n            // no subtasks left, call run next subtask on parent\n            runNext(task.parent, recurse);\n          }\n        }\n      }\n    }\n  };\n\n  if(swap) {\n    // we're swapping, so run asynchronously\n    setTimeout(doNext, 0);\n  } else {\n    // not swapping, so run synchronously\n    doNext(recurse);\n  }\n};\n\n/**\n * Finishes a task and looks for the next task in the queue to start.\n *\n * @param task the task to finish.\n * @param suppressCallbacks true to suppress callbacks.\n */\nvar finish = function(task, suppressCallbacks) {\n  // subtask is now done\n  task.state = DONE;\n\n  delete sTasks[task.id];\n  if(sVL >= 1) {\n    forge.log.verbose(cat, '[%s][%s] finish',\n      task.id, task.name, task);\n  }\n\n  // only do queue processing for root tasks\n  if(task.parent === null) {\n    // report error if queue is missing\n    if(!(task.type in sTaskQueues)) {\n      forge.log.error(cat,\n        '[%s][%s] task queue missing [%s]',\n        task.id, task.name, task.type);\n    } else if(sTaskQueues[task.type].length === 0) {\n      // report error if queue is empty\n      forge.log.error(cat,\n        '[%s][%s] task queue empty [%s]',\n        task.id, task.name, task.type);\n    } else if(sTaskQueues[task.type][0] !== task) {\n      // report error if this task isn't the first in the queue\n      forge.log.error(cat,\n        '[%s][%s] task not first in queue [%s]',\n        task.id, task.name, task.type);\n    } else {\n      // remove ourselves from the queue\n      sTaskQueues[task.type].shift();\n      // clean up queue if it is empty\n      if(sTaskQueues[task.type].length === 0) {\n        if(sVL >= 1) {\n          forge.log.verbose(cat, '[%s][%s] delete queue [%s]',\n            task.id, task.name, task.type);\n        }\n        /* Note: Only a task can delete a queue of its own type. This\n         is used as a way to synchronize tasks. If a queue for a certain\n         task type exists, then a task of that type is running.\n         */\n        delete sTaskQueues[task.type];\n      } else {\n        // dequeue the next task and start it\n        if(sVL >= 1) {\n          forge.log.verbose(cat,\n            '[%s][%s] queue start next [%s] remain:%s',\n            task.id, task.name, task.type,\n            sTaskQueues[task.type].length);\n        }\n        sTaskQueues[task.type][0].start();\n      }\n    }\n\n    if(!suppressCallbacks) {\n      // call final callback if one exists\n      if(task.error && task.failureCallback) {\n        task.failureCallback(task);\n      } else if(!task.error && task.successCallback) {\n        task.successCallback(task);\n      }\n    }\n  }\n};\n\n/* Tasks API */\nforge.task = forge.task || {};\n\n/**\n * Starts a new task that will run the passed function asynchronously.\n *\n * In order to finish the task, either task.doNext() or task.fail()\n * *must* be called.\n *\n * The task must have a type (a string identifier) that can be used to\n * synchronize it with other tasks of the same type. That type can also\n * be used to cancel tasks that haven't started yet.\n *\n * To start a task, the following object must be provided as a parameter\n * (each function takes a task object as its first parameter):\n *\n * {\n *   type: the type of task.\n *   run: the function to run to execute the task.\n *   success: a callback to call when the task succeeds (optional).\n *   failure: a callback to call when the task fails (optional).\n * }\n *\n * @param options the object as described above.\n */\nforge.task.start = function(options) {\n  // create a new task\n  var task = new Task({\n    run: options.run,\n    name: options.name || sNoTaskName\n  });\n  task.type = options.type;\n  task.successCallback = options.success || null;\n  task.failureCallback = options.failure || null;\n\n  // append the task onto the appropriate queue\n  if(!(task.type in sTaskQueues)) {\n    if(sVL >= 1) {\n      forge.log.verbose(cat, '[%s][%s] create queue [%s]',\n        task.id, task.name, task.type);\n    }\n    // create the queue with the new task\n    sTaskQueues[task.type] = [task];\n    start(task);\n  } else {\n    // push the task onto the queue, it will be run after a task\n    // with the same type completes\n    sTaskQueues[options.type].push(task);\n  }\n};\n\n/**\n * Cancels all tasks of the given type that haven't started yet.\n *\n * @param type the type of task to cancel.\n */\nforge.task.cancel = function(type) {\n  // find the task queue\n  if(type in sTaskQueues) {\n    // empty all but the current task from the queue\n    sTaskQueues[type] = [sTaskQueues[type][0]];\n  }\n};\n\n/**\n * Creates a condition variable to synchronize tasks. To make a task wait\n * on the condition variable, call task.wait(condition). To notify all\n * tasks that are waiting, call condition.notify().\n *\n * @return the condition variable.\n */\nforge.task.createCondition = function() {\n  var cond = {\n    // all tasks that are blocked\n    tasks: {}\n  };\n\n  /**\n   * Causes the given task to block until notify is called. If the task\n   * is already waiting on this condition then this is a no-op.\n   *\n   * @param task the task to cause to wait.\n   */\n  cond.wait = function(task) {\n    // only block once\n    if(!(task.id in cond.tasks)) {\n       task.block();\n       cond.tasks[task.id] = task;\n    }\n  };\n\n  /**\n   * Notifies all waiting tasks to wake up.\n   */\n  cond.notify = function() {\n    // since unblock() will run the next task from here, make sure to\n    // clear the condition's blocked task list before unblocking\n    var tmp = cond.tasks;\n    cond.tasks = {};\n    for(var id in tmp) {\n      tmp[id].unblock();\n    }\n  };\n\n  return cond;\n};\n\n} // end module implementation\n\n/* ########## Begin module wrapper ########## */\nvar name = 'task';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      forge = {};\n    }\n    return initModule(forge);\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    }).concat(initModule);\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      mods[i](forge);\n    }\n    return forge[name];\n  };\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/task',['require', 'module', './debug', './log', './util'], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2014 Digital Bazaar, Inc.\n */\n(function() {\nvar name = 'forge';\nif(typeof define !== 'function') {\n  // NodeJS -> AMD\n  if(typeof module === 'object' && module.exports) {\n    var nodeJS = true;\n    define = function(ids, factory) {\n      factory(require, module);\n    };\n  } else {\n    // <script>\n    if(typeof forge === 'undefined') {\n      // set to true to disable native code if even it's available\n      forge = {disableNativeCode: false};\n    }\n    return;\n  }\n}\n// AMD\nvar deps;\nvar defineFunc = function(require, module) {\n  module.exports = function(forge) {\n    var mods = deps.map(function(dep) {\n      return require(dep);\n    });\n    // handle circular dependencies\n    forge = forge || {};\n    forge.defined = forge.defined || {};\n    if(forge.defined[name]) {\n      return forge[name];\n    }\n    forge.defined[name] = true;\n    for(var i = 0; i < mods.length; ++i) {\n      if(typeof mods[i] === 'function') {\n        mods[i](forge);\n      }\n    }\n    return forge;\n  };\n  // set to true to disable native code if even it's available\n  module.exports.disableNativeCode = false;\n  module.exports(module.exports);\n};\nvar tmpDefine = define;\ndefine = function(ids, factory) {\n  deps = (typeof ids === 'string') ? factory.slice(2) : ids.slice(2);\n  if(nodeJS) {\n    delete define;\n    return tmpDefine.apply(null, Array.prototype.slice.call(arguments, 0));\n  }\n  define = tmpDefine;\n  return define.apply(null, Array.prototype.slice.call(arguments, 0));\n};\ndefine('js/forge',[\n  'require',\n  'module',\n  './aes',\n  './aesCipherSuites',\n  './asn1',\n  './cipher',\n  './cipherModes',\n  './debug',\n  './des',\n  './hmac',\n  './kem',\n  './log',\n  './md',\n  './mgf1',\n  './pbkdf2',\n  './pem',\n  './pkcs7',\n  './pkcs1',\n  './pkcs12',\n  './pki',\n  './prime',\n  './prng',\n  './pss',\n  './random',\n  './rc2',\n  './ssh',\n  './task',\n  './tls',\n  './util'\n], function() {\n  defineFunc.apply(null, Array.prototype.slice.call(arguments, 0));\n});\n})();\n\n\nreturn require('js/forge');\n\n});\n","'use strict';\n\n$(document).foundation();\n\n$(function() {\n  var encPrivArea = $('#encprivatekey');\n  var pubArea = $('#publickey');\n  var passInput = $('#password');\n  var decryptBt = $('#decrypt');\n  var privArea = $('#privatekey');\n  var notesSelect = $('#notes');\n  var textArea = $('#text');\n  var notes = null;\n  var privateKey = null;\n\n  $.ajaxSettings = $.extend($.ajaxSettings, {\n    'error': function(xhr, errorType, error) {\n      console.error(error);\n    }\n  });\n\n  $.get('nsantos.pem', function(response) {\n    encPrivArea.text(response);\n  });\n\n  $.get('nsantos.pub', function(response) {\n    pubArea.text(response);\n  });\n\n  // $.get('nsantos.priv', function(response) {\n  //  privArea.text(response);\n  // });\n\n  $.getJSON('notes.json', function(data) {\n    notes = data;\n    notesSelect.empty();\n    notesSelect.append($('<option value=\"\">---</option>'));\n\n    for(var k in notes) {\n      if(notes.hasOwnProperty(k)) {\n        var v = notes[k];\n        notesSelect.append($('<option></option>').val(k).html(v['title']));\n      }\n    }\n  });\n\n  decryptBt.on('click', function(e) {\n    var encPem = encPrivArea.text();\n    var password = passInput.val();\n\n    privateKey = forge.pki.decryptRsaPrivateKey(encPem, password);\n\n    if(privateKey == null) {\n      privArea.empty();\n      return;\n    }\n\n    var decPem = forge.pki.privateKeyToPem(privateKey);\n\n    privArea.text(decPem);\n  });\n\n  notesSelect.on('change', function(e) {\n    var k = $(this).val();\n\n    if(privateKey == null || !notes.hasOwnProperty(k)) {\n      textArea.empty();\n    } else {\n      var encrypted = forge.util.decode64(notes[k]['note']);\n      var decrypted = privateKey.decrypt(encrypted);\n      textArea.text(decrypted);\n    }\n  });\n});\n"]}